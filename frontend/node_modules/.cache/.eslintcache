[{"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\index.jsx":"1","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\store\\store.js":"2","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\app.jsx":"3","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\reducer\\reducer.js":"4","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\action\\action.js":"5","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\home\\home.js":"6","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx":"7","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx":"8","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx":"9","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Footer\\Footer.jsx":"10","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx":"11","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx":"12","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx":"13","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx":"14","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Admin\\Admin.jsx":"15","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Login\\Login.jsx":"16","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Register\\Register.jsx":"17","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Header\\Header.jsx":"18","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx":"19","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx":"20"},{"size":347,"mtime":1648868798096,"results":"21","hashOfConfig":"22"},{"size":219,"mtime":1648868798096,"results":"23","hashOfConfig":"22"},{"size":3666,"mtime":1650076233389,"results":"24","hashOfConfig":"22"},{"size":286,"mtime":1648868798095,"results":"25","hashOfConfig":"22"},{"size":124,"mtime":1648868798094,"results":"26","hashOfConfig":"22"},{"size":2655,"mtime":1649295000447,"results":"27","hashOfConfig":"22"},{"size":1333,"mtime":1649295000400,"results":"28","hashOfConfig":"22"},{"size":6659,"mtime":1649723780051,"results":"29","hashOfConfig":"22"},{"size":1838,"mtime":1649295000411,"results":"30","hashOfConfig":"22"},{"size":1692,"mtime":1650076233391,"results":"31","hashOfConfig":"22"},{"size":8095,"mtime":1649723780053,"results":"32","hashOfConfig":"22"},{"size":2923,"mtime":1649295000443,"results":"33","hashOfConfig":"22"},{"size":810,"mtime":1649295000428,"results":"34","hashOfConfig":"22"},{"size":13880,"mtime":1650076233398,"results":"35","hashOfConfig":"22"},{"size":1015,"mtime":1650076233390,"results":"36","hashOfConfig":"22"},{"size":2964,"mtime":1650076233395,"results":"37","hashOfConfig":"22"},{"size":7158,"mtime":1650058704412,"results":"38","hashOfConfig":"22"},{"size":3499,"mtime":1650076233393,"results":"39","hashOfConfig":"22"},{"size":6344,"mtime":1650076257485,"results":"40","hashOfConfig":"22"},{"size":1680,"mtime":1650076140828,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fumc2g",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\index.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\store\\store.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\app.jsx",["86","87"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\reducer\\reducer.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\action\\action.js",[],["88","89"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\home\\home.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx",["90","91","92"],"import React, {useState, useEffect} from \"react\";\r\nimport './CreateItem.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction CreateItem () {\r\n\r\n    const [item_id, set_id] = useState(\"\");\r\n    const [item_type, set_type] = useState(\"\");\r\n    const [item_name, set_name ] = useState(\"\");\r\n    const [item_description, set_description] = useState(\"\");\r\n    const [item_price, set_price ] = useState(\"\");\r\n    const [item_stock, set_stock] = useState(\"\");\r\n    const [item_sale, set_sale] = useState(\"\");\r\n    const [item_sale_price, set_sale_price] = useState(\"\");\r\n    const [image_file, setImageFile] = useState(\"\");\r\n    const [image_name, setImageName] = useState(\"\");\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const createItem = () => {\r\n        uploadImage();\r\n\r\n        Axios.post(\"api/insert/item\", {\r\n            id : item_id,\r\n            type : item_type,\r\n            name : item_name,\r\n            description : item_description,\r\n            price : item_price,\r\n            stock : item_stock,\r\n            sale : item_sale,\r\n            sale_price : item_sale_price,\r\n            image : image_name\r\n        });\r\n\r\n    }\r\n    const uploadImage = event => {\r\n        const data = new FormData();\r\n\r\n        data.append('name', image_name);\r\n        data.append('image', image_file); \r\n\r\n        /* debug purposes\r\n        Axios.post(\"https://httpbin.org/anything\", data, {\r\n            \r\n        }).then(res => console.log(res)).catch(err => console.log(err));\r\n        */\r\n\r\n        Axios.post(\"/api/upload/image\", \r\n            data, \r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                },\r\n            }\r\n        ).then(res => console.log(res)).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> Create <span>Item</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {/*<form>*/}\r\n\r\n                        <span className=\"input_label\" >Item ID:</span>\r\n                        <input \r\n                            value={item_id} \r\n                            onChange={event => set_id(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Name\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Type:</span>\r\n                        <input \r\n                            value={item_type} \r\n                            onChange={event => set_type(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Type\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Name:</span>\r\n                        <input \r\n                            value={item_name} \r\n                            onChange={event => set_name(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Description:</span>\r\n                        <textarea\r\n                            value={item_description} \r\n                            onChange={event => set_description(event.target.value)}\r\n                            className=\"item_description\" \r\n                            placeholder={item_description}\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >Item Price</span>\r\n                        <input \r\n                            value={item_price} \r\n                            onChange={event => set_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Price\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Stock:</span>\r\n                        <input \r\n                            value={item_stock} \r\n                            onChange={event => set_stock(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Stock\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >On Sale:</span>\r\n                        <input \r\n                            value={item_sale} \r\n                            onChange={event => set_sale(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"On Sale?\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item On Sale Price</span>\r\n                        <input \r\n                            value={item_sale_price} \r\n                            onChange={event => set_sale_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Sale Price\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Image</span>\r\n                        <input\r\n                            onChange={event => {\r\n                                const file = event.target.files[0];\r\n                                const name = file.name;\r\n                                setImageFile(file);\r\n                                setImageName(name);\r\n                            }}\r\n                            name=\"Upload File\"\r\n                            className=\"item_input\" \r\n                            type=\"file\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={createItem} >Create Item</button>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default CreateItem;","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx",["93","94","95","96","97","98"],"import React, {useState, useEffect} from \"react\";\r\nimport './CreateItem.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ModifyItem () {\r\n\r\n    const [item_id, set_id] = useState(\"\");\r\n    const [item_type, set_type] = useState(\"\");\r\n    const [item_name, set_name ] = useState(\"\");\r\n    const [item_description, set_description] = useState(\"\");\r\n    const [item_price, set_price ] = useState(\"\");\r\n    const [item_stock, set_stock] = useState(\"\");\r\n    const [item_sale, set_sale] = useState(\"\");\r\n    const [item_sale_price, set_sale_price] = useState(\"\");\r\n    const [image_file, setImageFile] = useState(\"\");\r\n    const [image_name, setImageName] = useState(\"\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    let {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const fetchData = () =>{\r\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\r\n            (response) => {\r\n                let items = JSON.parse(JSON.stringify(response.data));\r\n                console.log(items);\r\n\r\n                items.map(item => {\r\n                    if(item.item_id === id){\r\n                        set_id(item.item_id);\r\n                        set_type(item.item_type);\r\n                        set_name(item.item_name);\r\n                        set_description(item.item_description);\r\n                        set_price(item.item_price);\r\n                        set_stock(item.item_stock);\r\n                        set_sale(item.item_onsale);\r\n                        set_sale_price(item.item_saleprice)\r\n                        setImageName(item.item_image);\r\n                    }\r\n                    \r\n                });\r\n\r\n                loaded();\r\n            }\r\n        );\r\n    }\r\n\r\n    const modifyItem = () => {\r\n        uploadImage();\r\n\r\n        Axios.post(\"api/modifyItem\", {\r\n            id : item_id,\r\n            name : item_name,\r\n            type : item_type,\r\n            description : item_description,\r\n            price : item_price,\r\n            stock : item_stock,\r\n            sale : item_sale,\r\n            sale_price : item_sale_price,\r\n            image : image_name\r\n        });\r\n\r\n    }\r\n\r\n    const uploadImage = event => {\r\n        const data = new FormData();\r\n\r\n        data.append('name', image_name);\r\n        data.append('image', image_file); \r\n\r\n        /* debug purposes\r\n        Axios.post(\"https://httpbin.org/anything\", data, {\r\n            \r\n        }).then(res => console.log(res)).catch(err => console.log(err));\r\n        */\r\n\r\n        Axios.post(\"/api/upload/image\", \r\n            data, \r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                },\r\n            }\r\n        ).then(res => console.log(res)).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    const loading = () =>{\r\n        setLoading(true);\r\n    }\r\n\r\n    const loaded = () => {\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    if (isLoading){\r\n        //returns only this until data is done loading\r\n        return <div className=\"App\">Fetching Data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> Modify <span>Item</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {/*<form>*/}\r\n\r\n                        <span className=\"input_label\" >Item ID:</span>\r\n                        <input \r\n                            value={item_id} \r\n                            onChange={event => set_id(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_id}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Type:</span>\r\n                        <input \r\n                            value={item_type} \r\n                            onChange={event => set_type(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_type}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Name:</span>\r\n                        <input \r\n                            value={item_name} \r\n                            onChange={event => set_name(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_name}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Description:</span>\r\n                        <textarea\r\n                            value={item_description} \r\n                            onChange={event => set_description(event.target.value)}\r\n                            className=\"item_description\" \r\n                            placeholder={item_description}\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >Item Price</span>\r\n                        <input \r\n                            value={item_price} \r\n                            onChange={event => set_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Stock:</span>\r\n                        <input \r\n                            value={item_stock} \r\n                            onChange={event => set_stock(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_stock}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >On Sale:</span>\r\n                        <input \r\n                            value={item_sale} \r\n                            onChange={event => set_sale(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item On Sale Price</span>\r\n                        <input \r\n                            value={item_sale_price} \r\n                            onChange={event => set_sale_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Image</span>\r\n                        <input \r\n                            onChange={event => {\r\n                                const file = event.target.files[0];\r\n                                const name = file.name;\r\n                                setImageFile(file);\r\n                                setImageName(name);\r\n                            }}\r\n                            name=\"Upload File\"\r\n                            className=\"item_input\" \r\n                            type=\"file\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={modifyItem} >Update Item</button>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default ModifyItem;","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx",["99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Admin\\Admin.jsx",["114"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Login\\Login.jsx",["115","116","117"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Register\\Register.jsx",["118","119"],"import React, {useState,useEffect} from \"react\";\r\nimport Axios from 'axios';\r\nimport './Register.css'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Register(){\r\n\r\n    const [frontEmail, setEmail] = useState(\"\")\r\n    const [frontFirst, setFirst] = useState(\"\")\r\n    const [frontLast, setLast] = useState(\"\")\r\n    const [frontPW, setPW] = useState(\"\")\r\n    const [frontConfirm, setConfirm] = useState(\"\")\r\n    const [frontAddress, setAddress] = useState(\"\")\r\n    const [frontNumber, setNumber] = useState(\"\")\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const submitInfo = () =>{\r\n        if(frontConfirm === frontPW){\r\n            Axios.post(\"/api/register/insert\",{\r\n            first: frontFirst,\r\n            last: frontLast,\r\n            email: frontEmail,\r\n            address: frontAddress,\r\n            number: frontNumber,\r\n            password : frontPW,\r\n            });\r\n\r\n            alert(\"Thank you for registering \", frontFirst, \"!\")\r\n            navigate(\"/Login\")\r\n        }else{\r\n            alert(\"The passwords do not match, please check and try again\")\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                        <span className=\"input_label\" >User Email:</span>\r\n                        <input \r\n                            //value={item_id} \r\n                            onChange={event => setEmail(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">First Name:</span>\r\n                        <input \r\n                            //value={item_type} \r\n                            onChange={event => setFirst(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Last Name:</span>\r\n                        <input \r\n                            //value={item_name} \r\n                            onChange={event => setLast(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Phone Number:</span>\r\n                        <input \r\n                            id=\"phoneNumber\" \r\n                            maxLength={16}\r\n                            //value={item_description} \r\n                            onChange={event => setNumber(event.target.value)}\r\n                            className=\"item_input\"\r\n                            placeholder=\"INPUT NUMBERS ONLY\"\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >User Address:</span>\r\n                        <input \r\n                            //value={item_price} \r\n                            onChange={event => setAddress(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Address\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Password:</span>\r\n                        <input \r\n                            //value={item_stock} \r\n                            onChange={event => setPW(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Confirm Password:</span>\r\n                        <input \r\n                            //value={item_sale} \r\n                            onChange={event => setConfirm(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\r\n\r\n                        <span className=\"create__head2\">Sign Up for emails to get special news and offers</span>\r\n                        <span className=\"create__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n\r\n    /*\r\n    return(\r\n        <div className =\"Register\"> <h1>Register</h1>\r\n        <div className ='input'>\r\n            <label> First Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontName\"\r\n                onChange={(e)=> {\r\n                    setName(e.target.value)\r\n                }}/>\r\n                <label>Last Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontLast\"\r\n                onChange={(e)=> {\r\n                    setLast(e.target.value)\r\n                }}/>\r\n\r\n                <label>Phone Number</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontNumber\"\r\n                onChange={(e)=> {\r\n                    setNumber(e.target.value)\r\n                }}/>\r\n               \r\n\r\n            <label>Email</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontEmail\"\r\n                onChange={(e)=> {\r\n                    setEmail(e.target.value)\r\n                }}/>\r\n\r\n            <label>Address</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontAddress\"\r\n                onChange={(e)=> {\r\n                    setAddress(e.target.value)\r\n                }}/>\r\n\r\n            <label>Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontPW\"\r\n                onChange={(e)=> {\r\n                    setPW(e.target.value)\r\n                }}/>\r\n\r\n            <label>Confirm Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontConfirm\"\r\n                onChange={(e)=> {\r\n                    setConfirm(e.target.value)\r\n                }}/>\r\n            \r\n            <button onClick ={submitInfo}>Register</button>\r\n\r\n\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n    */\r\n\r\n};\r\n\r\nexport default Register\r\n","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx",["120","121","122","123","124","125","126"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx",["127"],{"ruleId":"128","severity":1,"message":"129","line":18,"column":50,"nodeType":"130","messageId":"131","endLine":18,"endColumn":61},{"ruleId":"128","severity":1,"message":"132","line":18,"column":63,"nodeType":"130","messageId":"131","endLine":18,"endColumn":69},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"128","severity":1,"message":"137","line":1,"column":26,"nodeType":"130","messageId":"131","endLine":1,"endColumn":35},{"ruleId":"128","severity":1,"message":"138","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":18},{"ruleId":"128","severity":1,"message":"139","line":20,"column":9,"nodeType":"130","messageId":"131","endLine":20,"endColumn":17},{"ruleId":"128","severity":1,"message":"138","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":18},{"ruleId":"128","severity":1,"message":"140","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":13},{"ruleId":"128","severity":1,"message":"139","line":23,"column":9,"nodeType":"130","messageId":"131","endLine":23,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":29,"column":7,"nodeType":"143","endLine":29,"endColumn":9,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":37,"column":32,"nodeType":"147","messageId":"148","endLine":37,"endColumn":34},{"ruleId":"128","severity":1,"message":"149","line":97,"column":11,"nodeType":"130","messageId":"131","endLine":97,"endColumn":18},{"ruleId":"128","severity":1,"message":"150","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"138","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":18},{"ruleId":"128","severity":1,"message":"151","line":5,"column":33,"nodeType":"130","messageId":"131","endLine":5,"endColumn":42},{"ruleId":"128","severity":1,"message":"152","line":12,"column":12,"nodeType":"130","messageId":"131","endLine":12,"endColumn":23},{"ruleId":"128","severity":1,"message":"153","line":12,"column":25,"nodeType":"130","messageId":"131","endLine":12,"endColumn":39},{"ruleId":"128","severity":1,"message":"154","line":13,"column":12,"nodeType":"130","messageId":"131","endLine":13,"endColumn":25},{"ruleId":"128","severity":1,"message":"155","line":13,"column":27,"nodeType":"130","messageId":"131","endLine":13,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":22,"column":7,"nodeType":"143","endLine":22,"endColumn":9,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"146","line":45,"column":37,"nodeType":"147","messageId":"148","endLine":45,"endColumn":39},{"ruleId":"145","severity":1,"message":"146","line":64,"column":35,"nodeType":"147","messageId":"148","endLine":64,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":77,"column":35,"nodeType":"147","messageId":"148","endLine":77,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":90,"column":35,"nodeType":"147","messageId":"148","endLine":90,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":154,"column":24,"nodeType":"159","messageId":"160","endLine":154,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":183,"column":49,"nodeType":"159","messageId":"160","endLine":183,"endColumn":51},{"ruleId":"157","severity":1,"message":"158","line":185,"column":49,"nodeType":"159","messageId":"160","endLine":185,"endColumn":51},{"ruleId":"128","severity":1,"message":"138","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":18},{"ruleId":"128","severity":1,"message":"137","line":4,"column":18,"nodeType":"130","messageId":"131","endLine":4,"endColumn":27},{"ruleId":"128","severity":1,"message":"138","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":18},{"ruleId":"128","severity":1,"message":"161","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":16},{"ruleId":"128","severity":1,"message":"137","line":1,"column":25,"nodeType":"130","messageId":"131","endLine":1,"endColumn":34},{"ruleId":"128","severity":1,"message":"138","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":18},{"ruleId":"128","severity":1,"message":"162","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},{"ruleId":"128","severity":1,"message":"163","line":24,"column":12,"nodeType":"130","messageId":"131","endLine":24,"endColumn":16},{"ruleId":"128","severity":1,"message":"164","line":24,"column":17,"nodeType":"130","messageId":"131","endLine":24,"endColumn":24},{"ruleId":"141","severity":1,"message":"165","line":30,"column":5,"nodeType":"130","endLine":30,"endColumn":14,"suggestions":"166"},{"ruleId":"145","severity":1,"message":"146","line":33,"column":26,"nodeType":"147","messageId":"148","endLine":33,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":50,"column":18,"nodeType":"159","messageId":"160","endLine":50,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":92,"column":30,"nodeType":"159","messageId":"160","endLine":92,"endColumn":32},{"ruleId":"128","severity":1,"message":"162","line":2,"column":10,"nodeType":"130","messageId":"131","endLine":2,"endColumn":21},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["167"],"no-negated-in-lhs",["168"],"'useEffect' is defined but never used.","'Navigate' is defined but never used.","'navigate' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["169"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loading' is assigned a value but never used.","'Header' is defined but never used.","'useParams' is defined but never used.","'constOrders' is assigned a value but never used.","'setConstOrders' is assigned a value but never used.","'displayOrders' is assigned a value but never used.","'setDisplayOrders' is assigned a value but never used.",["170"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Register' is defined but never used.","'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["171"],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"172","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [fetchData]",{"range":"177","text":"178"},{"range":"179","text":"178"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"180","text":"181"},[941,943],"[fetchData]",[756,758],[2141,2141],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]"]