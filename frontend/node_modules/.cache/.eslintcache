[{"/home/trey/Documents/aws/ui/frontend/src/index.jsx":"1","/home/trey/Documents/aws/ui/frontend/src/components/store/store.js":"2","/home/trey/Documents/aws/ui/frontend/src/app.jsx":"3","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js":"4","/home/trey/Documents/aws/ui/frontend/src/components/home/home.js":"5","/home/trey/Documents/aws/ui/frontend/src/components/action/action.js":"6","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.js":"7","/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx":"8","/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx":"9","/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx":"10","/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx":"11","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx":"12","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx":"13","/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx":"14","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx":"15","/home/trey/Documents/aws/ui/frontend/src/components/AdminUser/AdminUser.jsx":"16","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx":"17"},{"size":334,"mtime":1649397766135,"results":"18","hashOfConfig":"19"},{"size":212,"mtime":1649397766135,"results":"20","hashOfConfig":"19"},{"size":2986,"mtime":1649449421725,"results":"21","hashOfConfig":"19"},{"size":272,"mtime":1649397766135,"results":"22","hashOfConfig":"19"},{"size":2592,"mtime":1649397766135,"results":"23","hashOfConfig":"19"},{"size":117,"mtime":1649397766135,"results":"24","hashOfConfig":"19"},{"size":2611,"mtime":1649397766135,"results":"25","hashOfConfig":"19"},{"size":1292,"mtime":1649397766123,"results":"26","hashOfConfig":"19"},{"size":782,"mtime":1649397766123,"results":"27","hashOfConfig":"19"},{"size":1793,"mtime":1649397766123,"results":"28","hashOfConfig":"19"},{"size":1650,"mtime":1649407973680,"results":"29","hashOfConfig":"19"},{"size":2907,"mtime":1649407963168,"results":"30","hashOfConfig":"19"},{"size":14433,"mtime":1649449391861,"results":"31","hashOfConfig":"19"},{"size":3355,"mtime":1649452763628,"results":"32","hashOfConfig":"19"},{"size":2854,"mtime":1649397766135,"results":"33","hashOfConfig":"19"},{"size":732,"mtime":1649447800001,"results":"34","hashOfConfig":"19"},{"size":5515,"mtime":1649458200429,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbqbax",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/trey/Documents/aws/ui/frontend/src/index.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/store/store.js",[],"/home/trey/Documents/aws/ui/frontend/src/app.jsx",["75","76"],"import React, { useLayoutEffect, useState } from 'react'\nimport './app.css'\nimport AboutUs from './components/AboutUs/AboutUs'\nimport ContactSection from './components/ContactSection/ContactSection'\nimport Footer from './components/Footer/Footer'\nimport HomeSection from './components/HomeSection/HomeSection'\nimport MenuSection from './components/MenuSection/MenuSection'\nimport CreateItem from './components/MenuSection/CreateItem'\nimport Header from './components/Header/Header'\nimport ReviewSection from './components/ReviewSection/ReviewSection'\nimport Login from './components/Login/Login'\nimport { fetchData } from './components/action/action'\nimport { useDispatch } from 'react-redux'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { homeData } from './components/home/home'\nimport { BrowserRouter as Router, Route, Routes, useNavigate, Switch} from 'react-router-dom';\nimport AdminUser from './components/AdminUser/AdminUser'\nimport Register from './components/Register/Register'\nfunction App() {\n\n    const dispatch = useDispatch()\n\n    const [data, setData] = useState(null)\n\n    useLayoutEffect(() => {\n        try {\n            setTimeout(() => {\n                dispatch(fetchData(homeData))\n                setData(homeData)\n            }, 5000)\n        }\n        catch (e) {\n            console.log(e)\n        }\n    })\n\n    return (\n        <>\n\n            {data && <>\n              <Router>\n                <div className=\"app\"> \n                <Header />\n                <Routes>\n                    <Route path=\"/\" element={<HomeSection/>} />\n                    <Route path=\"/home\" element={<HomeSection/>} />\n                    <Route path=\"/menu:user\" element={<MenuSection/>} />\n                    <Route path=\"/reviews\" element={<ReviewSection/>} />\n                    <Route path=\"/about\" element={<AboutUs/>} />\n                    <Route path=\"/contact\" element={<ContactSection/>} />\n                    <Route path=\"/Login\" element={<Login/>} />\n                    <Route path =\"/AdminUser\" element ={<AdminUser/>}/>\n                    <Route path = \"/Register\" element = {<Register/>}/>\n                    <Route path=\"/login\" element={<Login/>} />\n                    <Route path =\"/admin\" element ={<AdminUser/>}/>\n                    <Route path =\"/createItem\" element={<CreateItem/>}/>\n                    {/*<Route path =\"/orders\" element ={<Orders/>}/>*/}\n                </Routes>\n                <Footer />\n                </div>\n              </Router>\n\n            </>}\n\n            {!data && <div style={{ width: '100%', height: '100vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n\n                <Loader\n                    type=\"Rings\"\n                    color=\"#6ac7ba\"\n                    height={80}\n                    width={80}\n                    timeout={5000} />\n\n            </div>}\n\n        </>\n    )\n}\n\nexport default App\n","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/home/home.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/action/action.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.js",["77","78","79","80"],"import React, {useState,useEffect} from \"react\";\nimport Axios from 'axios';\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\n\nfunction Register(){\n\n    const [frontEmail, setEmail] = useState(\"\")\n    const [frontName, setName] = useState(\"\")\n    const [frontLast, setLast] = useState(\"\")\n    const [frontPW, setPW] = useState(\"\")\n    const [frontConfirm, setConfirm] = useState(\"\")\n    const [frontAddress, setAddress] = useState(\"\")\n    const [frontNumber, setNumber] = useState(\"\")\n\n\n\n    const submitInfo = () =>{\n        Axios.post(\"/api/register/insert\",{\n\t\tPassName: frontName,\n\t\tPassLast: frontLast,\n\t\tPassEmail: frontEmail,\n\t\tPassAddress: frontAddress,\n\t\tPassNumber: frontNumber,\n\t\tPassPw : frontPW,\n        });\n    }\n\n    return(\n        <div className =\"Register\"> <h1>Register</h1>\n        <div className ='input'>\n            <label> First Name</label>\n            <input\n                type=\"text\"\n                name=\"frontName\"\n                onChange={(e)=> {\n                    setName(e.target.value)\n                }}/>\n                <label>Last Name</label>\n            <input\n                type=\"text\"\n                name=\"frontLast\"\n                onChange={(e)=> {\n                    setLast(e.target.value)\n                }}/>\n\n                <label>Phone Number</label>\n            <input\n                type=\"text\"\n                name=\"frontNumber\"\n                onChange={(e)=> {\n                    setNumber(e.target.value)\n                }}/>\n                \n             <label>Email</label>\n            <input\n                type=\"text\"\n                name=\"frontEmail\"\n                onChange={(e)=> {\n                    setEmail(e.target.value)\n                }}/>\n                <label>Address</label>\n                <input\n                    type=\"text\"\n                    name=\"frontAddress\"\n                    onChange={(e)=> {\n                        setAddress(e.target.value)\n                    }}/>\n                <label>Password</label>\n            <input\n                type=\"password\"\n                name=\"frontPW\"\n                onChange={(e)=> {\n                    setPW(e.target.value)\n                }}/>\n                <label>Confirm Password</label>\n            <input\n                type=\"password\"\n                name=\"frontConfirm\"\n                onChange={(e)=> {\n                    setConfirm(e.target.value)\n                }}/>\n            \n            <button onClick ={submitInfo}>Register</button>\n\n\n            \n            </div>\n           \n        </div>\n    );\n\n\n\n};\n\nexport default Register\n","/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx",["81","82","83","84","85","86","87","88","89"],"import React, {useState, useEffect } from 'react'\nimport Axios from 'axios'\n//import { useSelector } from 'react-redux'\nimport './MenuSection.css'\nimport './CreateItem.jsx'\nimport { Navigate, useNavigate, useParams} from \"react-router-dom\";\n\n//const MenuSection = () => {\nfunction MenuSection () {\n    let tempInventory = [];\n    const [constInventory, setConstInventory] = useState();\n    const [displayInventory, setDisplayInventory] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [searchValue, setSearch] = useState(\"\");\n    const imageBase = './images/'\n    let {user} = useParams();\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                setDisplayInventory(items);\n                setConstInventory(items);\n                loaded();\n            }\n        );\n    }\n\n    const search = () => {\n        tempInventory = []; //reset list\n        setDisplayInventory(constInventory);//reset display inventory\n        loading();\n        var searchInput = searchValue;\n\n        //check for whitespace\n        if (/^\\s*$/.test(searchInput)){\n            loaded();\n            return;\n        }else{\n            constInventory.map(item => {\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase())){\n                    console.log(\"Pushing item\", item.item_name);\n                    tempInventory.push(item);\n                }else{\n                    console.log(item.item_name.toLowerCase(), \"Does not include\", searchInput.toLowerCase());\n                }\n            });\n        }\n        //set display to the filtered list\n        setDisplayInventory(tempInventory);\n        console.log(\"Here is the display inventory after update\\n\", displayInventory);\n        loaded();\n    };\n\n    const sortByName = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_name > b.item_name) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByPrice = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_price > b.item_price) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByAvailability = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_stock > b.item_stock) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n    //const fetchInventory = () => {\n        //DEBUGGING Function to understand how to pull in inventory from database\n        //alert(\"Fetch inventory called\");\n        //Axios.get(\"api/get/inventory\").then( //calls the backend api with this fetch command\n            //(response) => {\n                //inventory_list = JSON.parse(JSON.stringify(response.data)) //gets you the array of objects \n                \n                //Get the length of the array\n                //var length = Object.keys(inventory_list).length\n                \n                //for (let i = 0; i < length; i++){\n                    //var id = String(inventory_list[i].item_id);\n                    //console.log(inventory_list[i].item_id);\n                //}\n\n                //console.log(inventory_list) \n                //console.log(inventory_list[0]) //gets you the 1st object\n                //console.log(inventory_list[0].item_id) //gets you the 1st objects item_id\n                //}\n        //);\n    //}\n\n\n    const addToCart = () => {\n        alert(\"Added to cart!\");\n    }\n\n    const deleteItem = (itemName) => {\n        console.log(\"Item\", itemName);\n    }\n\n    const createItem = (itemName) => {\n        console.log(\"Item\", itemName);\n        navigate(\"/createItem\");\n    }\n\n    const modifyItem = (itemName) => {\n        console.log(\"Item\", itemName);\n    }\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Loading Data...</div>;\n    }\n\n    //once data is done loading, we do this!\n    return (\n        <>\n            <section className=\"menu\" id=\"Menu\">\n                {/* OLD ONE <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>*/}\n                <h1 className=\"heading\"> OUR <span> MENU </span> </h1>\n                <div class=\"search-wrapper\">\n                    <label className=\"desc\" for=\"search\"> Search Inventory </label>\n                    <input \n                        value={searchValue} \n                        onChange={event => setSearch(event.target.value)}\n                        type=\"search\" \n                        id=\"search\"\n                    />\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\n                </div>\n                {user == 1 &&\n                    <div class=\"box\">\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\n                    </div> \n                }\n                <div className=\"box-container\">\n                    {/*For every item in inventory_list, create a box and list details of item*/}\n                    {}    \n                    {console.log(\"Items loaded\", constInventory)}\n                    {displayInventory.map(item => \n                        {\n                            console.log(item.item_name);\n                            var crossout = \"\";\n                            var price;\n                            if(item.item_onsale){\n                                price = item.item_saleprice.toFixed(2);\n                                crossout = item.item_price.toFixed(2);\n                            }else{\n                                price = item.item_price.toFixed(2);\n                            }\n                            if(item.item_stock > 0){\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/* if the user is admin, have option to modify and delete the item\"*/}\n                                        { user == 1 ? <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button> :\n                                            <button className=\"btn\" type=\"submit\" onClick={addToCart} >Add to Cart</button>}\n                                        {user == 1 && <button className=\"btn\" type=\"submit\" onClick={() => deleteItem(item.item_id)} >Delete Item</button>}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }else{\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        <div className=\"text\">Out of stock!</div>\n                                        <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }\n                        }\n                    )}\n                </div>\n            </section>\n            \n        </>\n    )\n\n    /* ZAKARIAH'S ORIGINAL  and input this above every ahref= {/* eslint-disable-next-line /}\n    return (\n        <>\n\n            <section className=\"menu\" id=\"Menu\">\n\n                <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>\n\n                <div className=\"box-container\">\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n                    <div className=\"box\">\n                        {inventory_list.map(item => \n                            {\n                                return( \n                                    <div> {item.item_id} </div> \n                                )\n                            }\n                        )}\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\n                        <button className=\"btn\" type=\"submit\" onClick={fetchInventory} >Fetch Inventory</button>\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[3]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[5]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                </div>\n\n            </section>\n            \n        </>\n    )\n\n    */\n}\n\nexport default MenuSection\n","/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx",["90","91","92","93","94","95"],"\r\nimport React, {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n  const [UserList, makeList] = useState([])\r\n  const [responseText,setresponseText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n      Axios.get(\"/api/get\").then((response) => {\r\n      \tmakeList(response.data)\r\n      });\r\n    \r\n  },[]);\r\n\r\n  const submitInfo = () => {\r\n    let PwStrength = 0;\r\n    while (PwStrength == 0){\r\n        if (/\\d/.test(frontPassword)){\r\n            if(/[a-z]/.test(frontPassword)){\r\n                if(/[A-Z]/.test(frontPassword)){\r\n            PwStrength = 1;\r\n            setresponseText([frontName] +\" Has been registered \\n Welcome to Beans & Leaves!\")\r\n                }}\r\n        }else {\r\n            setresponseText(\"Password is too weak\")\r\n            submitInfo()}\r\n    }\r\n    Axios.post(\"/api/insert\",{\r\n\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    });\r\n  \r\n    makeList([...UserList, {Name: frontName , Password : frontPassword},]);\r\n  };\r\n\r\n  //DELETE this, it was a test\r\n  const goHome = () => {\r\n\t  navigate(\"/home\");\r\n  }\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    alert(\"Login check callled\") //debugging purposes\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n     \r\n      if (response.data == \"Found\"){\r\n        alert(\"FOUND\"); \r\n        navigate(\"/home\")\r\n      }else{\r\n\t      alert(\"NOT FOUND\"); \r\n\t      navigate(\"/about\")\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n    alert(`The name you entered was : ${frontName}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <button className=\"btn\" type=\"submit\" onClick={goRegister} >Create your Account</button>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/AdminUser/AdminUser.jsx",["96","97","98","99","100"],"import React, {useState,useEffect} from \"react\";\nimport { useSelector } from 'react-redux'\nimport Axios from 'axios';\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\nfunction AdminUser(){\n\n  let navigate = useNavigate();\n\n\n  return (\n    <div>\n      <h1>Admin Page</h1>\n      <button onClick ={() =>{\n        navigate(\"/AdminUser\");\n      }}>\n        Admin Page\n      </button>\n\n      <button onClick ={() =>{\n        navigate(\"/menu1\"); //This navigates to the page, passing the parameter for admin status (1)\n      }}>\n        View/Edit Inventory\n      </button>\n\n      <button onClick ={() =>{\n        //navigate(\"/orders\");\n      }}>\n        View Orders\n      </button>\n    </div>\n  );\n};\n  \nexport default AdminUser;","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx",["101","102","103","104","105","106"],{"ruleId":"107","severity":1,"message":"108","line":17,"column":50,"nodeType":"109","messageId":"110","endLine":17,"endColumn":61},{"ruleId":"107","severity":1,"message":"111","line":17,"column":63,"nodeType":"109","messageId":"110","endLine":17,"endColumn":69},{"ruleId":"107","severity":1,"message":"112","line":1,"column":25,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"113","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":3,"column":20,"nodeType":"109","messageId":"110","endLine":3,"endColumn":31},{"ruleId":"107","severity":1,"message":"114","line":13,"column":12,"nodeType":"109","messageId":"110","endLine":13,"endColumn":24},{"ruleId":"107","severity":1,"message":"113","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},{"ruleId":"115","severity":1,"message":"116","line":22,"column":7,"nodeType":"117","endLine":22,"endColumn":9,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":46,"column":37,"nodeType":"121","messageId":"122","endLine":46,"endColumn":39},{"ruleId":"119","severity":1,"message":"120","line":65,"column":35,"nodeType":"121","messageId":"122","endLine":65,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":78,"column":35,"nodeType":"121","messageId":"122","endLine":78,"endColumn":37},{"ruleId":"119","severity":1,"message":"120","line":91,"column":35,"nodeType":"121","messageId":"122","endLine":91,"endColumn":37},{"ruleId":"123","severity":1,"message":"124","line":177,"column":23,"nodeType":"125","messageId":"126","endLine":177,"endColumn":25},{"ruleId":"123","severity":1,"message":"124","line":206,"column":48,"nodeType":"125","messageId":"126","endLine":206,"endColumn":50},{"ruleId":"123","severity":1,"message":"124","line":208,"column":47,"nodeType":"125","messageId":"126","endLine":208,"endColumn":49},{"ruleId":"107","severity":1,"message":"113","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"107","severity":1,"message":"127","line":14,"column":10,"nodeType":"109","messageId":"110","endLine":14,"endColumn":22},{"ruleId":"107","severity":1,"message":"128","line":23,"column":9,"nodeType":"109","messageId":"110","endLine":23,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":25,"column":23,"nodeType":"125","messageId":"126","endLine":25,"endColumn":25},{"ruleId":"107","severity":1,"message":"129","line":46,"column":9,"nodeType":"109","messageId":"110","endLine":46,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":61,"column":25,"nodeType":"125","messageId":"126","endLine":61,"endColumn":27},{"ruleId":"107","severity":1,"message":"130","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"112","line":1,"column":25,"nodeType":"109","messageId":"110","endLine":1,"endColumn":34},{"ruleId":"107","severity":1,"message":"131","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"132","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":1,"column":26,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"107","severity":1,"message":"113","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":18},{"ruleId":"107","severity":1,"message":"133","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"134","line":18,"column":24,"nodeType":"109","messageId":"110","endLine":18,"endColumn":33},{"ruleId":"107","severity":1,"message":"135","line":20,"column":9,"nodeType":"109","messageId":"110","endLine":20,"endColumn":17},{"ruleId":"107","severity":1,"message":"136","line":22,"column":11,"nodeType":"109","messageId":"110","endLine":22,"endColumn":21},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'useEffect' is defined but never used.","'Navigate' is defined but never used.","'frontConfirm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["137"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'responseText' is assigned a value but never used.","'submitInfo' is assigned a value but never used.","'goHome' is assigned a value but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'Axios' is defined but never used.","'handle' is defined but never used.","'set_image' is assigned a value but never used.","'navigate' is assigned a value but never used.","'createItem' is assigned a value but never used.",{"desc":"138","fix":"139"},"Update the dependencies array to be: [fetchData]",{"range":"140","text":"141"},[702,704],"[fetchData]"]