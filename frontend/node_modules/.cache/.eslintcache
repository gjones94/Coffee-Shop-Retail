[{"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\index.jsx":"1","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\store\\store.js":"2","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\app.jsx":"3","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\reducer\\reducer.js":"4","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\home\\home.js":"5","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\action\\action.js":"6","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx":"7","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx":"8","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx":"9","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx":"10","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx":"11","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Footer\\Footer.jsx":"12","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx":"13","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx":"14","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Header\\Header.jsx":"15","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Register\\Register.jsx":"16","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Admin\\Admin.jsx":"17","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx":"18","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Login\\Login.jsx":"19","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx":"20","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Orders\\Orders.jsx":"21"},{"size":347,"mtime":1649788784041,"results":"22","hashOfConfig":"23"},{"size":219,"mtime":1649788784040,"results":"24","hashOfConfig":"23"},{"size":3606,"mtime":1650159054689,"results":"25","hashOfConfig":"23"},{"size":286,"mtime":1649788784040,"results":"26","hashOfConfig":"23"},{"size":2655,"mtime":1649788784038,"results":"27","hashOfConfig":"23"},{"size":124,"mtime":1649788784038,"results":"28","hashOfConfig":"23"},{"size":1838,"mtime":1649788784012,"results":"29","hashOfConfig":"23"},{"size":8095,"mtime":1649788784029,"results":"30","hashOfConfig":"23"},{"size":810,"mtime":1649788784018,"results":"31","hashOfConfig":"23"},{"size":2923,"mtime":1649788784032,"results":"32","hashOfConfig":"23"},{"size":1333,"mtime":1649788784006,"results":"33","hashOfConfig":"23"},{"size":1761,"mtime":1650155289609,"results":"34","hashOfConfig":"23"},{"size":6508,"mtime":1650119362042,"results":"35","hashOfConfig":"23"},{"size":10786,"mtime":1650119362045,"results":"36","hashOfConfig":"23"},{"size":3759,"mtime":1650119362037,"results":"37","hashOfConfig":"23"},{"size":7158,"mtime":1650119362049,"results":"38","hashOfConfig":"23"},{"size":1681,"mtime":1650157692499,"results":"39","hashOfConfig":"23"},{"size":6344,"mtime":1650119362046,"results":"40","hashOfConfig":"23"},{"size":2713,"mtime":1650119362038,"results":"41","hashOfConfig":"23"},{"size":4832,"mtime":1650119362034,"results":"42","hashOfConfig":"23"},{"size":1516,"mtime":1650159205707,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1tvxpf0",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\index.jsx",[],["94","95"],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\store\\store.js",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\app.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\reducer\\reducer.js",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\home\\home.js",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\action\\action.js",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx",["96","97","98","99","100","101"],"import React, {useState, useEffect} from \"react\";\r\nimport './CreateItem.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ModifyItem () {\r\n\r\n    const [item_id, set_id] = useState(\"\");\r\n    const [item_type, set_type] = useState(\"\");\r\n    const [item_name, set_name ] = useState(\"\");\r\n    const [item_description, set_description] = useState(\"\");\r\n    const [item_price, set_price ] = useState(\"\");\r\n    const [item_stock, set_stock] = useState(\"\");\r\n    const [item_sale, set_sale] = useState(\"\");\r\n    const [item_sale_price, set_sale_price] = useState(\"\");\r\n    const [image_file, setImageFile] = useState(\"\");\r\n    const [image_name, setImageName] = useState(\"\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    let {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const fetchData = () =>{\r\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\r\n            (response) => {\r\n                let items = JSON.parse(JSON.stringify(response.data));\r\n                console.log(items);\r\n\r\n                items.map(item => {\r\n                    if(item.item_id === id){\r\n                        set_id(item.item_id);\r\n                        set_type(item.item_type);\r\n                        set_name(item.item_name);\r\n                        set_description(item.item_description);\r\n                        set_price(item.item_price);\r\n                        set_stock(item.item_stock);\r\n                        set_sale(item.item_onsale);\r\n                        set_sale_price(item.item_saleprice)\r\n                        setImageName(item.item_image);\r\n                    }\r\n                    \r\n                });\r\n\r\n                loaded();\r\n            }\r\n        );\r\n    }\r\n\r\n    const modifyItem = () => {\r\n        uploadImage();\r\n\r\n        Axios.post(\"api/modifyItem\", {\r\n            id : item_id,\r\n            name : item_name,\r\n            type : item_type,\r\n            description : item_description,\r\n            price : item_price,\r\n            stock : item_stock,\r\n            sale : item_sale,\r\n            sale_price : item_sale_price,\r\n            image : image_name\r\n        });\r\n\r\n    }\r\n\r\n    const uploadImage = event => {\r\n        const data = new FormData();\r\n\r\n        data.append('name', image_name);\r\n        data.append('image', image_file); \r\n\r\n        /* debug purposes\r\n        Axios.post(\"https://httpbin.org/anything\", data, {\r\n            \r\n        }).then(res => console.log(res)).catch(err => console.log(err));\r\n        */\r\n\r\n        Axios.post(\"/api/upload/image\", \r\n            data, \r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                },\r\n            }\r\n        ).then(res => console.log(res)).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    const loading = () =>{\r\n        setLoading(true);\r\n    }\r\n\r\n    const loaded = () => {\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    if (isLoading){\r\n        //returns only this until data is done loading\r\n        return <div className=\"App\">Fetching Data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> Modify <span>Item</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {/*<form>*/}\r\n\r\n                        <span className=\"input_label\" >Item ID:</span>\r\n                        <input \r\n                            value={item_id} \r\n                            onChange={event => set_id(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_id}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Type:</span>\r\n                        <input \r\n                            value={item_type} \r\n                            onChange={event => set_type(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_type}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Name:</span>\r\n                        <input \r\n                            value={item_name} \r\n                            onChange={event => set_name(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_name}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Description:</span>\r\n                        <textarea\r\n                            value={item_description} \r\n                            onChange={event => set_description(event.target.value)}\r\n                            className=\"item_description\" \r\n                            placeholder={item_description}\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >Item Price</span>\r\n                        <input \r\n                            value={item_price} \r\n                            onChange={event => set_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Stock:</span>\r\n                        <input \r\n                            value={item_stock} \r\n                            onChange={event => set_stock(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_stock}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >On Sale:</span>\r\n                        <input \r\n                            value={item_sale} \r\n                            onChange={event => set_sale(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item On Sale Price</span>\r\n                        <input \r\n                            value={item_sale_price} \r\n                            onChange={event => set_sale_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Image</span>\r\n                        <input \r\n                            onChange={event => {\r\n                                const file = event.target.files[0];\r\n                                const name = file.name;\r\n                                setImageFile(file);\r\n                                setImageName(name);\r\n                            }}\r\n                            name=\"Upload File\"\r\n                            className=\"item_input\" \r\n                            type=\"file\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={modifyItem} >Update Item</button>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default ModifyItem;","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx",["102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, {useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport './MenuSection.css'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nfunction MenuSection ({uid, admin}) {\r\n\r\n    let tempInventory = [];\r\n    const [constInventory, setConstInventory] = useState();\r\n    const [displayInventory, setDisplayInventory] = useState();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [searchValue, setSearch] = useState(\"\");\r\n    const [cart, setCart] = useState();\r\n    const imageBase = './images/'\r\n\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const fetchData = () =>{\r\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\r\n            (response) => {\r\n                let items = JSON.parse(JSON.stringify(response.data));\r\n                setDisplayInventory(items);\r\n                setConstInventory(items);\r\n                loaded();\r\n            }\r\n        );\r\n        if(uid != null){\r\n            Axios.post(\"api/getcart\", {\r\n                id : uid\r\n            }).then((response) => \r\n                {\r\n                    let tempcart = JSON.parse(JSON.stringify(response.data));\r\n                    setCart(tempcart);\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    const search = () => {\r\n        tempInventory = []; //reset list\r\n        setDisplayInventory(constInventory);//reset display inventory\r\n        loading();\r\n        var searchInput = searchValue;\r\n\r\n        //check for whitespace only\r\n        if (/^\\s*$/.test(searchInput)){\r\n            loaded();\r\n            return;\r\n        }else{\r\n            constInventory.map(item => {\r\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase()) || item.item_description.toLowerCase().includes(searchInput.toLowerCase())){\r\n                    tempInventory.push(item);\r\n                }else{\r\n                }\r\n            });\r\n        }\r\n        //set display to the filtered list\r\n        setDisplayInventory(tempInventory);\r\n        loaded();\r\n    };\r\n\r\n    const sortByName = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_name > b.item_name) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n\r\n\r\n    const sortByPrice = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_price > b.item_price) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n\r\n\r\n    const sortByAvailability = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_stock > b.item_stock) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n   \r\n    const increment = (id) => {\r\n        cart.map(item => {\r\n            if(item.item_id == id){\r\n                item.item_quantity += 1;   \r\n            }\r\n        })\r\n    }\r\n   \r\n    const addToCart = (item) => {\r\n        let temp_cart = [];\r\n\r\n        if(uid == null){\r\n            alert(\"You must login to add to your cart\");\r\n        }else{\r\n            let actual_price = 0\r\n            if(item.item_onsale == 1){\r\n                actual_price = item.item_sale_price;\r\n            }else{\r\n                actual_price = item.item_price;\r\n            }\r\n\r\n            //set default cart states\r\n            let empty = true \r\n            let item_exists = false\r\n\r\n            //put everything into a temp cart to modify\r\n            cart.map(cart_item => {\r\n                empty = false; //cart was not empty\r\n                temp_cart.push(cart_item);\r\n            });\r\n\r\n            \r\n            //create the new item\r\n            let new_item = {\r\n                \"user_id\" : uid,\r\n                \"item_id\" : item.item_id,\r\n                \"item_qty\" : 1\r\n            }\r\n\r\n            temp_cart.map(temp => {\r\n                if(temp.item_id === item.item_id){\r\n                   item_exists = true  //item already existed\r\n                   temp.item_qty += 1\r\n                   Axios.post(\"api/updateCartQty\", {\r\n                        id : item.id,\r\n                      item_id : item.item_id,\r\n                      qty : temp.item_qty\r\n                   });\r\n                }\r\n            })\r\n\r\n            if(!item_exists || empty){\r\n                Axios.post(\"api/addToCart\",{\r\n                    uid : uid,\r\n                    id : item.item_id,\r\n                    qty : 1\r\n                });\r\n                temp_cart.push(new_item) //do this to save local state\r\n            }\r\n            \r\n            setCart(temp_cart)\r\n            /*\r\n            Axios.post(\"api/addtocart\", {\r\n                user : uid,\r\n                id : item_id,\r\n                price : actual_price\r\n            });\r\n            */\r\n            alert(\"Added to cart!\");\r\n        }\r\n    }\r\n\r\n    const deleteItem = (item_id) => {\r\n        console.log(\"Item\", item_id);\r\n    }\r\n\r\n    const createItem = () => {\r\n        navigate(\"/createItem\");\r\n    }\r\n\r\n    const modifyItem = (item_id) => {\r\n        navigate(\"/modifyItem\" + item_id);\r\n    }\r\n\r\n    const loading = () =>{\r\n        setLoading(true);\r\n    }\r\n\r\n    const loaded = () => {\r\n        setLoading(false);\r\n    }\r\n\r\n    if (isLoading){\r\n        //returns only this until data is done loading\r\n        return <div className=\"App\">Loading Data...</div>;\r\n    }\r\n\r\n    //once data is done loading, we do this!\r\n    return (\r\n        <>\r\n            <section className=\"menu\" id=\"Menu\">\r\n                {/* OLD ONE <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>*/}\r\n                <h1 className=\"heading\"> OUR <span> PRODUCTS </span> </h1>\r\n                <div class=\"search\">\r\n                    <div className=\"search_head\" for=\"search\"> Search Inventory </div>\r\n                    <input \r\n                        value={searchValue} \r\n                        onChange={event => setSearch(event.target.value)}\r\n                        className=\"search_input\"\r\n                        type=\"search\" \r\n                        id=\"search\"\r\n                    />\r\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\r\n                \r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\r\n                </div>\r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\r\n                </div>\r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\r\n                </div>\r\n                {admin == 1 &&\r\n                    <div class=\"box\">\r\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\r\n                    </div> \r\n                }\r\n                </div>\r\n                <div className=\"box-container\">\r\n                    {displayInventory.map(item => \r\n                        {\r\n                            var crossout = \"\";\r\n                            var price;\r\n                            if(item.item_onsale){\r\n                                price = item.item_saleprice.toFixed(2);\r\n                                crossout = item.item_price.toFixed(2);\r\n                            }else{\r\n                                price = item.item_price.toFixed(2);\r\n                            }\r\n                            if(item.item_stock > 0){\r\n                                return( \r\n                                    <div className=\"box\">\r\n                                        <img src={imageBase + item.item_image} alt=\"\" />\r\n                                        <h3>{item.item_name}</h3>\r\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\r\n                                        <div className=\"price\">Available: {item.item_stock} </div>\r\n                                        <div className=\"desc\">{item.item_description}</div>\r\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\r\n                                        {/* if the user is admin, have option to modify and delete the item\"*/}\r\n                                        { admin == 1 ? <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button> :\r\n                                            <button className=\"btn\" type=\"submit\" onClick={() => addToCart(item)} >Add to Cart</button>}\r\n                                        { admin == 1 && <button className=\"btn\" type=\"submit\" onClick={() => deleteItem(item.item_id)} >Delete Item</button>}\r\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\r\n                                    </div>\r\n                                )\r\n                            }else{\r\n                                return( \r\n                                    <div className=\"box\">\r\n                                        <img src={imageBase + item.item_image} alt=\"\" />\r\n                                        <h3>{item.item_name}</h3>\r\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\r\n                                        <div className=\"price\">Available: {item.item_stock} </div>\r\n                                        <div className=\"desc\">{item.item_description}</div>\r\n                                        <div className=\"text\">Out of stock!</div>\r\n                                        <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>\r\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\r\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    )}\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MenuSection\r\n","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Header\\Header.jsx",["117","118"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nconst NavBar = ({u_name ,uid, admin, signOut}) => {\r\n    const handleMenuBtn = () => {\r\n    let navbar = document.querySelector('.navbar');\r\n    let searchForm = document.querySelector('.search-form');\r\n\r\n    navbar.classList.toggle('active');\r\n    searchForm.classList.remove('active');\r\n    }\r\n\r\n    const handleSearchBox = () => {\r\n        let navbar = document.querySelector('.navbar');\r\n        let searchForm = document.querySelector('.search-form');\r\n\r\n        searchForm.classList.toggle('active');\r\n        navbar.classList.remove('active');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                {/* eslint-disable-next-line */}\r\n                <div className=\"logo\">\r\n                    <img src={'./images/logo.png'} alt=\"\" /> \r\n                </div>\r\n\r\n                <nav className=\"navbar\">\r\n                    <Link style={{textDecoration: 'none'}} to=\"/\">\r\n                        <span className=\"header__navItems\">Home</span>\r\n                     </Link>\r\n                    <Link style={{textDecoration: 'none'}} to=\"/menu\">\r\n                        <span className=\"header_navItems\">Products</span>\r\n                     </Link>\r\n                    <Link style={{textDecoration: 'none'}} to=\"/reviews\">\r\n                        <span className=\"header__navItems\">Reviews</span>\r\n                     </Link>\r\n                    <Link style={{textDecoration: 'none'}} to=\"/about\">\r\n                        <span className=\"header__navItems\">About</span>\r\n                     </Link>\r\n                    <Link style={{textDecoration: 'none'}} to=\"/contact\">\r\n                        <span className=\"header_navItems\">Contact</span>\r\n                     </Link>\r\n                    {/* User Not Signed In */}\r\n                    {uid == null &&\r\n                        <Link style={{textDecoration: 'none'}} to=\"/login\">\r\n                        <span className=\"header__navItems\">Log In</span>\r\n                        </Link>\r\n                    }\r\n                    {/* User is an admin */}\r\n                    {admin === 1 &&\r\n                        <Link style={{textDecoration: 'none'}} to=\"/admin\">\r\n                            <span className=\"header__navItems\">Admin</span>\r\n                        </Link>\r\n                    }\r\n                </nav>\r\n                {/*\r\n                    <div>\r\n                        <h1 className=\"heading\"> Welcome {u_name} </h1>\r\n                    </div>\r\n                }\r\n                */}\r\n                {uid != null &&\r\n                    <div>\r\n                        <button className=\"btn\" type=\"submit\" onClick={signOut}>Sign Out</button>\r\n                    </div> \r\n                }\r\n                <div className=\"icons\">\r\n                    {uid != null &&\r\n                        <h1 className=\"heading\"> {u_name} </h1>\r\n                    }\r\n                    {/* \r\n                    <div className=\"fas fa-search\" id=\"search-btn\" onClick={handleSearchBox}></div>\r\n                    <div className=\"fas fa-shopping-cart\" id=\"cart-btn\"></div>\r\n                    <div className=\"fas fa-bars\" id=\"menu-btn\" onClick={handleMenuBtn}></div>\r\n                    <div className=\"fas fa-user\" id =\"user-btn\"></div>\r\n                    */}\r\n                </div>\r\n\r\n                <div className=\"search-form\">\r\n                    <input type=\"search\" id=\"search-box\" placeholder=\"Search\" />\r\n                    <label htmlFor=\"search-box\" className=\"fas fa-search\"></label>\r\n                </div>\r\n                \r\n\r\n\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Register\\Register.jsx",["119","120"],"import React, {useState,useEffect} from \"react\";\r\nimport Axios from 'axios';\r\nimport './Register.css'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Register(){\r\n\r\n    const [frontEmail, setEmail] = useState(\"\")\r\n    const [frontFirst, setFirst] = useState(\"\")\r\n    const [frontLast, setLast] = useState(\"\")\r\n    const [frontPW, setPW] = useState(\"\")\r\n    const [frontConfirm, setConfirm] = useState(\"\")\r\n    const [frontAddress, setAddress] = useState(\"\")\r\n    const [frontNumber, setNumber] = useState(\"\")\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const submitInfo = () =>{\r\n        if(frontConfirm === frontPW){\r\n            Axios.post(\"/api/register/insert\",{\r\n            first: frontFirst,\r\n            last: frontLast,\r\n            email: frontEmail,\r\n            address: frontAddress,\r\n            number: frontNumber,\r\n            password : frontPW,\r\n            });\r\n\r\n            alert(\"Thank you for registering \", frontFirst, \"!\")\r\n            navigate(\"/Login\")\r\n        }else{\r\n            alert(\"The passwords do not match, please check and try again\")\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                        <span className=\"input_label\" >User Email:</span>\r\n                        <input \r\n                            //value={item_id} \r\n                            onChange={event => setEmail(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">First Name:</span>\r\n                        <input \r\n                            //value={item_type} \r\n                            onChange={event => setFirst(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Last Name:</span>\r\n                        <input \r\n                            //value={item_name} \r\n                            onChange={event => setLast(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Phone Number:</span>\r\n                        <input \r\n                            id=\"phoneNumber\" \r\n                            maxLength={16}\r\n                            //value={item_description} \r\n                            onChange={event => setNumber(event.target.value)}\r\n                            className=\"item_input\"\r\n                            placeholder=\"INPUT NUMBERS ONLY\"\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >User Address:</span>\r\n                        <input \r\n                            //value={item_price} \r\n                            onChange={event => setAddress(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Address\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Password:</span>\r\n                        <input \r\n                            //value={item_stock} \r\n                            onChange={event => setPW(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Confirm Password:</span>\r\n                        <input \r\n                            //value={item_sale} \r\n                            onChange={event => setConfirm(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\r\n\r\n                        <span className=\"create__head2\">Sign Up for emails to get special news and offers</span>\r\n                        <span className=\"create__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n\r\n    /*\r\n    return(\r\n        <div className =\"Register\"> <h1>Register</h1>\r\n        <div className ='input'>\r\n            <label> First Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontName\"\r\n                onChange={(e)=> {\r\n                    setName(e.target.value)\r\n                }}/>\r\n                <label>Last Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontLast\"\r\n                onChange={(e)=> {\r\n                    setLast(e.target.value)\r\n                }}/>\r\n\r\n                <label>Phone Number</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontNumber\"\r\n                onChange={(e)=> {\r\n                    setNumber(e.target.value)\r\n                }}/>\r\n               \r\n\r\n            <label>Email</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontEmail\"\r\n                onChange={(e)=> {\r\n                    setEmail(e.target.value)\r\n                }}/>\r\n\r\n            <label>Address</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontAddress\"\r\n                onChange={(e)=> {\r\n                    setAddress(e.target.value)\r\n                }}/>\r\n\r\n            <label>Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontPW\"\r\n                onChange={(e)=> {\r\n                    setPW(e.target.value)\r\n                }}/>\r\n\r\n            <label>Confirm Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontConfirm\"\r\n                onChange={(e)=> {\r\n                    setConfirm(e.target.value)\r\n                }}/>\r\n            \r\n            <button onClick ={submitInfo}>Register</button>\r\n\r\n\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n    */\r\n\r\n};\r\n\r\nexport default Register\r\n","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Admin\\Admin.jsx",[],"C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx",["121","122","123","124","125","126","127"],"import React, {useState,useEffect} from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport Axios from 'axios';\r\nimport './ModifyUser.css';\r\n\r\n\r\nfunction ModifyUser(){\r\n    //setting all the needed states for intitial variables.\r\n    const [InEmail,setInEmail] = useState(\"\")\r\n    const [Email,setEmail] = useState(\"\")\r\n    const [Password,setPassword]= useState(\"\")\r\n    const [FirstName,setFirstName] = useState(\"\")\r\n    const [LastName,setLastName] = useState(\"\")\r\n    const [Phone,setPhone] = useState(\"\")\r\n    const [Address,setAddress] = useState(\"\")\r\n    const [OldEmail,setOldEmail] = useState(\"\")\r\n    const [OldPassword,setOldPassword]= useState(\"\")\r\n    const [OldFirstName,setOldFirstName] = useState(\"\")\r\n    const [OldLastName,setOldLastName] = useState(\"\")\r\n    const [OldPhone,setOldPhone] = useState(\"\")\r\n    const [OldAddress,setOldAddress] = useState(\"\")\r\n    const [UserID,setUserID] = useState(\"\")\r\n    const [Response,setResponse] = useState(\"\")\r\n    const [Test,setTest] = useState(\"\")\r\n\r\n\r\n    const [UserList, makeList] = useState([])\r\n\r\n    //populates the user info list whenever a user is found.\r\n    useEffect(() => {\r\n\r\n        if(Response === \"User Found\"){\r\n        UserList.map(val => {\r\n\r\n                  \r\n            setUserID(val.user_id)\r\n            setOldEmail(val.user_email)\r\n            setOldFirstName(val.user_first_name)\r\n            setOldLastName(val.user_last_name)\r\n            setOldAddress(val.user_address)\r\n            setOldPhone(val.phone)\r\n            setOldPassword(val.password)\r\n            \r\n           \r\n          });\r\n        }\r\n        \r\n       \r\n        if (Response !== \"User Updated\"){\r\n        if(Email == \"\"){\r\n            setEmail(OldEmail)\r\n        }\r\n        if(FirstName === \"\"){\r\n            setFirstName(OldFirstName)\r\n        }\r\n        if(LastName === \"\"){\r\n            setLastName(OldLastName)\r\n        }\r\n        if(Phone === \"\"){\r\n            setPhone(OldPhone)\r\n        }\r\n        if(Address === \"\"){\r\n            setAddress(OldAddress)\r\n        }\r\n        if(Password === \"\"){\r\n            setPassword(OldPassword)\r\n        }\r\n    }\r\n        \r\n    });\r\n\r\n    //finduser function, activated from the find button on the page\r\n    const findUser = () =>{\r\n\r\n        const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\r\n\r\n        \r\n        if(!emailRegex.test(InEmail)){\r\n            alert(\"Please enter a valid email address\")\r\n            return;\r\n            \r\n        }\r\n       \r\n\r\n        //api call to admin user find location in backend\r\n        Axios.post(\"/api/admin/user/find\",{\r\n            //sends over the email to search from db in backend\r\n            email: InEmail\r\n            \r\n\r\n        }).then((response) => { //reading the information sent back from backend \r\n            if(response.data == \"\"){ //conditional statement using the sent back information\r\n                makeList(response.data)\r\n                setResponse(\"User was not found\") //tells the page that a user was not found\r\n            }else{ \r\n                makeList(response.data) //makes the list for the user that stores all the information received from backend\r\n                setResponse(\"User Found\") //tells the page that a user was found\r\n            }\r\n        });\r\n    }\r\n\r\n    //update user function\r\n    const updateUser = () =>{\r\n\r\n        if(Response === \"\" || Response === \"User updated\"){\r\n            setResponse(\"Please find a user first\")\r\n            return\r\n        }\r\n        //setting userID\r\n        setUserID(UserID)\r\n    \r\n        //api call to update users\r\n        //sends all the information to backend for db\r\n        Axios.post(\"/api/admin/user/update\",{\r\n\r\n            email:Email,\r\n            firstname:FirstName,\r\n            lastname:LastName,\r\n            phone:Phone,\r\n            address:Address,\r\n            password:Password,\r\n            userID:UserID\r\n\r\n        })\r\n        \r\n        setResponse(\"User Updated\")\r\n    }\r\n\r\n\r\n    return(\r\n\r\n      \r\n        <div className = 'inputs'>\r\n            <h1>email of user</h1>\r\n            <input  \r\n                type=\"text\"\r\n                name=\"InEmail\"\r\n                onChange={(e)=> {\r\n                    setInEmail(e.target.value)\r\n                }}/>\r\n\r\n\r\n\r\n            <button onClick ={findUser}>Find</button>\r\n                <label>{Response}</label>\r\n\r\n                {UserList.map((val,key)=> {\r\n      return (\r\n        <div className = \"UserInfo\" key = {key}>\r\n        <label style={{fontSize: '15px'}}>\r\n          Email: {val.user_email} \r\n          <br/>\r\n          Name: {val.user_first_name} {val.user_last_name}\r\n          <br/>\r\n          Phone: {val.user_phone}\r\n          <br/>\r\n          Address: {val.user_address}\r\n          <br/>\r\n          Password: {val.password}\r\n          \r\n        </label>\r\n        </div>\r\n      );\r\n    })}\r\n            <h1>Email</h1>\r\n                <input\r\n                type = \"text\"\r\n                name = \"Email\"\r\n                onChange={(e)=>{\r\n                    setEmail(e.target.value)\r\n                }}/>\r\n            <h1>First Name</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Firstname\"\r\n                onChange={(e)=>{\r\n                    setFirstName(e.target.value)\r\n                }}/>\r\n            <h1>Last Name</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Lastname\"\r\n                onChange={(e)=>{\r\n                    setLastName(e.target.value)\r\n                }}/>\r\n            <h1>Phone</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Phone\"\r\n                onChange={(e)=>{\r\n                    setPhone(e.target.value)\r\n                }}/>\r\n            <h1>Address</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Address\"\r\n                onChange={(e)=>{\r\n                    setAddress(e.target.value)\r\n                }}/>\r\n            <h1>password</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Password\"\r\n                onChange={(e)=>{\r\n                    setPassword(e.target.value)\r\n                }}/>\r\n\r\n                <button onClick ={updateUser}>Update</button>\r\n\r\n         \r\n        </div>        \r\n\r\n        \r\n\r\n    );\r\n\r\n\r\n      \r\n\r\n};\r\n\r\n\r\n\r\nexport default ModifyUser","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Login\\Login.jsx",["128","129","130"],"\r\n\r\nimport * as React from 'react';\r\nimport {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\n\r\nconst Login = ({uid, admin, onLogin}) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n      if (response.data === \"USERERR\"){\r\n        alert(\"User not found, please register with us!\")\r\n      }else if (response.data === \"PASSERR\"){\r\n        alert(\"Incorrect combination of username and password\");\r\n      }else{\r\n          console.log(\"HERE\");\r\n          let users = JSON.parse(JSON.stringify(response.data));\r\n          console.log(users);\r\n          console.log(users[0].user_id, users[0].user_admin)\r\n          onLogin(users[0].user_first_name, users[0].user_id, users[0].user_admin);\r\n          navigate(\"/home\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <button className=\"btn\" type=\"submit\" onClick={goRegister} >Register</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx",["131","132"],"import React, {useState,useEffect} from \"react\";\r\nimport \"./Discounts.css\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Discount ({admin}){\r\n    const[Code,setCode] = useState(\"\")\r\n    const[Percent,setPercent] = useState(\"\")\r\n    const [discountList, setDiscountList] = useState();\r\n    const [isLoading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        axios.post(\"/api/admin/discount/get\").then((response) =>\r\n        {\r\n            let items = JSON.parse(JSON.stringify(response.data));\r\n            setDiscountList(items);\r\n            loaded();\r\n        })\r\n    },[]);\r\n\r\n    const loaded = () =>{\r\n        setLoading(false)\r\n    }\r\n    const loading = () => {\r\n        setLoading(true)\r\n    }\r\n\r\n    const addDiscount = () =>{\r\n        axios.post(\"/api/admin/discount/insert\",{\r\n            code:Code,\r\n            percent:Percent\r\n        })\r\n    }\r\n\r\n    const modifyDiscount = (id) => {\r\n        alert(\"Modified\");\r\n    }\r\n\r\n    const deleteDiscount = (id) => {\r\n        alert(\"Deleted\");\r\n    }\r\n\r\n    if(isLoading){\r\n        return <>Loading..</>\r\n    }\r\n\r\n    if(admin != 1){\r\n        return(\r\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\r\n        )\r\n    }else{\r\n        return (\r\n            <>\r\n            <div className=\"create_discount\">\r\n                    <h1 className=\"heading\"> Add <span>Discount</span></h1>\r\n                    <div className=\"create_page\">\r\n    \r\n                        <div className=\"logo\">\r\n                            <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                        </div>\r\n                            <span className=\"input_label\" >Discount Code</span>\r\n                            <input \r\n                                onChange={event => setCode(event.target.value)}\r\n                                className=\"item_input\" \r\n                                type=\"text\"\r\n                                placeholder=\"Discount Code\"\r\n                                required\r\n                            />\r\n                            <span className=\"input_label\">Discount Amount:</span>\r\n                            <input \r\n                                onChange={event => setPercent(event.target.value)}\r\n                                className=\"item_input\" \r\n                                type=\"text\"\r\n                                placeholder=\"Percent Amount\"\r\n                                required \r\n                            />\r\n                            <button className=\"btn\" type=\"submit\" onClick={addDiscount} >Create Discount</button>\r\n                    </div>\r\n            </div>\r\n    \r\n            <section className=\"menu\" id=\"Menu\">\r\n                <h1 className=\"heading\"> CURRENT <span> DISCOUNTS </span> </h1>\r\n                    <div className=\"box-container\">\r\n                        {discountList.map(discount => \r\n                            {\r\n                                return(\r\n                                    <div className=\"box\">\r\n                                        <h3>Code: {discount.discount_code}</h3>\r\n                                        <div className=\"code\">Amount: {discount.discount_percent}%</div>\r\n                                        <button className=\"btn\" type=\"Modify\" onClick={() => modifyDiscount(discount.discount_id)} >Modify Discount</button>\r\n                                        <button className=\"btn\" type=\"submit\" onClick={() => deleteDiscount(discount.discount_id)} >Delete Discount</button>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        )\r\n                        }\r\n                    </div>\r\n            </section>\r\n            </>\r\n        )\r\n    }\r\n\r\n   \r\n\r\n    /*\r\n    return(\r\n        <div>\r\n            {DiscountList.map((val,key)=> {\r\n      return (\r\n        <div className = \"DiscountInfo\" key = {key}>\r\n        <label style={{fontSize: '15px'}}>\r\n          Discount ID: {val.discount_id}   \r\n          <br/>\r\n          Discount code: {val.discount_code} \r\n          <br/>\r\n          Discount percent: {val.discount_percent}\r\n          <br/>\r\n        </label>\r\n        </div>\r\n      );\r\n    })}\r\n    <div>\r\n\r\n        <label>Add Discounts<br/></label>\r\n\r\n        <label>Code:</label>\r\n    <input  \r\n                type=\"text\"\r\n                name=\"Code\"\r\n                onChange={(e)=> {\r\n                    setCode(e.target.value)\r\n                }}/>\r\n    </div>\r\n\r\n        <label>Percent</label>\r\n        <input\r\n            type =\"test\"\r\n            name = \"Percent\"\r\n            onChange={(e) => {\r\n                setPercent(e.target.value)\r\n            }}/>\r\n\r\n            <button onClick ={addDiscount}>Add</button>\r\n        </div>\r\n\r\n    );\r\n            */\r\n}\r\n\r\nexport default Discount","C:\\Users\\coopm\\source\\repos\\ui\\frontend\\src\\components\\Orders\\Orders.jsx",["133","134","135"],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"144","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":13},{"ruleId":"140","severity":1,"message":"145","line":23,"column":9,"nodeType":"142","messageId":"143","endLine":23,"endColumn":17},{"ruleId":"146","severity":1,"message":"147","line":29,"column":7,"nodeType":"148","endLine":29,"endColumn":9,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":37,"column":32,"nodeType":"152","messageId":"153","endLine":37,"endColumn":34},{"ruleId":"140","severity":1,"message":"154","line":97,"column":11,"nodeType":"142","messageId":"143","endLine":97,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":20,"column":7,"nodeType":"148","endLine":20,"endColumn":9,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"151","line":54,"column":37,"nodeType":"152","messageId":"153","endLine":54,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":70,"column":35,"nodeType":"152","messageId":"153","endLine":70,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":83,"column":35,"nodeType":"152","messageId":"153","endLine":83,"endColumn":37},{"ruleId":"150","severity":1,"message":"151","line":96,"column":35,"nodeType":"152","messageId":"153","endLine":96,"endColumn":37},{"ruleId":"140","severity":1,"message":"156","line":104,"column":11,"nodeType":"142","messageId":"143","endLine":104,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":105,"column":23,"nodeType":"152","messageId":"153","endLine":105,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":106,"column":29,"nodeType":"159","messageId":"160","endLine":106,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":119,"column":33,"nodeType":"159","messageId":"160","endLine":119,"endColumn":35},{"ruleId":"140","severity":1,"message":"161","line":122,"column":17,"nodeType":"142","messageId":"143","endLine":122,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":130,"column":32,"nodeType":"152","messageId":"153","endLine":130,"endColumn":34},{"ruleId":"150","severity":1,"message":"151","line":143,"column":32,"nodeType":"152","messageId":"153","endLine":143,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":227,"column":24,"nodeType":"159","messageId":"160","endLine":227,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":254,"column":49,"nodeType":"159","messageId":"160","endLine":254,"endColumn":51},{"ruleId":"157","severity":1,"message":"158","line":256,"column":49,"nodeType":"159","messageId":"160","endLine":256,"endColumn":51},{"ruleId":"140","severity":1,"message":"162","line":6,"column":11,"nodeType":"142","messageId":"143","endLine":6,"endColumn":24},{"ruleId":"140","severity":1,"message":"163","line":14,"column":11,"nodeType":"142","messageId":"143","endLine":14,"endColumn":26},{"ruleId":"140","severity":1,"message":"164","line":1,"column":25,"nodeType":"142","messageId":"143","endLine":1,"endColumn":34},{"ruleId":"140","severity":1,"message":"141","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":18},{"ruleId":"140","severity":1,"message":"165","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":21},{"ruleId":"140","severity":1,"message":"166","line":24,"column":12,"nodeType":"142","messageId":"143","endLine":24,"endColumn":16},{"ruleId":"140","severity":1,"message":"167","line":24,"column":17,"nodeType":"142","messageId":"143","endLine":24,"endColumn":24},{"ruleId":"146","severity":1,"message":"168","line":30,"column":5,"nodeType":"142","endLine":30,"endColumn":14,"suggestions":"169"},{"ruleId":"150","severity":1,"message":"151","line":33,"column":26,"nodeType":"152","messageId":"153","endLine":33,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":50,"column":18,"nodeType":"159","messageId":"160","endLine":50,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":92,"column":30,"nodeType":"159","messageId":"160","endLine":92,"endColumn":32},{"ruleId":"140","severity":1,"message":"164","line":4,"column":18,"nodeType":"142","messageId":"143","endLine":4,"endColumn":27},{"ruleId":"140","severity":1,"message":"141","line":7,"column":10,"nodeType":"142","messageId":"143","endLine":7,"endColumn":18},{"ruleId":"140","severity":1,"message":"170","line":8,"column":8,"nodeType":"142","messageId":"143","endLine":8,"endColumn":16},{"ruleId":"140","severity":1,"message":"154","line":24,"column":11,"nodeType":"142","messageId":"143","endLine":24,"endColumn":18},{"ruleId":"157","severity":1,"message":"171","line":47,"column":14,"nodeType":"159","messageId":"160","endLine":47,"endColumn":16},{"ruleId":"140","severity":1,"message":"172","line":1,"column":16,"nodeType":"142","messageId":"143","endLine":1,"endColumn":24},{"ruleId":"140","severity":1,"message":"164","line":1,"column":26,"nodeType":"142","messageId":"143","endLine":1,"endColumn":35},{"ruleId":"140","severity":1,"message":"173","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":13},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["176"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loading' is assigned a value but never used.",["177"],"'increment' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'actual_price' is assigned a value but never used.","'handleMenuBtn' is assigned a value but never used.","'handleSearchBox' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["178"],"'Register' is defined but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [fetchData]",{"range":"184","text":"185"},{"range":"186","text":"185"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"187","text":"188"},[941,943],"[fetchData]",[623,625],[2141,2141],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]"]