[{"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\index.jsx":"1","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\store\\store.js":"2","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\app.jsx":"3","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\reducer\\reducer.js":"4","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\action\\action.js":"5","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\home\\home.js":"6","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx":"7","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx":"8","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx":"9","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Footer\\Footer.jsx":"10","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx":"11","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx":"12","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx":"13","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx":"14","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Admin\\Admin.jsx":"15","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Login\\Login.jsx":"16","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Register\\Register.jsx":"17","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Header\\Header.jsx":"18","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx":"19","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx":"20"},{"size":347,"mtime":1648868798096,"results":"21","hashOfConfig":"22"},{"size":219,"mtime":1648868798096,"results":"23","hashOfConfig":"22"},{"size":3428,"mtime":1650076091645,"results":"24","hashOfConfig":"22"},{"size":286,"mtime":1648868798095,"results":"25","hashOfConfig":"22"},{"size":124,"mtime":1648868798094,"results":"26","hashOfConfig":"22"},{"size":2655,"mtime":1649295000447,"results":"27","hashOfConfig":"22"},{"size":1333,"mtime":1649295000400,"results":"28","hashOfConfig":"22"},{"size":6659,"mtime":1649723780051,"results":"29","hashOfConfig":"22"},{"size":1838,"mtime":1649295000411,"results":"30","hashOfConfig":"22"},{"size":1693,"mtime":1649457377797,"results":"31","hashOfConfig":"22"},{"size":8095,"mtime":1649723780053,"results":"32","hashOfConfig":"22"},{"size":2923,"mtime":1649295000443,"results":"33","hashOfConfig":"22"},{"size":810,"mtime":1649295000428,"results":"34","hashOfConfig":"22"},{"size":13902,"mtime":1650058704410,"results":"35","hashOfConfig":"22"},{"size":1016,"mtime":1650075945803,"results":"36","hashOfConfig":"22"},{"size":2824,"mtime":1650058704408,"results":"37","hashOfConfig":"22"},{"size":7158,"mtime":1650058704412,"results":"38","hashOfConfig":"22"},{"size":2984,"mtime":1650058704407,"results":"39","hashOfConfig":"22"},{"size":6460,"mtime":1650061756554,"results":"40","hashOfConfig":"22"},{"size":1680,"mtime":1650076140828,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fumc2g",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\index.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\store\\store.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\app.jsx",["89","90","91","92"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\reducer\\reducer.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\action\\action.js",[],["93","94"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\home\\home.js",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\AboutUs\\AboutUs.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\CreateItem.jsx",["95","96","97"],"import React, {useState, useEffect} from \"react\";\r\nimport './CreateItem.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nfunction CreateItem () {\r\n\r\n    const [item_id, set_id] = useState(\"\");\r\n    const [item_type, set_type] = useState(\"\");\r\n    const [item_name, set_name ] = useState(\"\");\r\n    const [item_description, set_description] = useState(\"\");\r\n    const [item_price, set_price ] = useState(\"\");\r\n    const [item_stock, set_stock] = useState(\"\");\r\n    const [item_sale, set_sale] = useState(\"\");\r\n    const [item_sale_price, set_sale_price] = useState(\"\");\r\n    const [image_file, setImageFile] = useState(\"\");\r\n    const [image_name, setImageName] = useState(\"\");\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const createItem = () => {\r\n        uploadImage();\r\n\r\n        Axios.post(\"api/insert/item\", {\r\n            id : item_id,\r\n            type : item_type,\r\n            name : item_name,\r\n            description : item_description,\r\n            price : item_price,\r\n            stock : item_stock,\r\n            sale : item_sale,\r\n            sale_price : item_sale_price,\r\n            image : image_name\r\n        });\r\n\r\n    }\r\n    const uploadImage = event => {\r\n        const data = new FormData();\r\n\r\n        data.append('name', image_name);\r\n        data.append('image', image_file); \r\n\r\n        /* debug purposes\r\n        Axios.post(\"https://httpbin.org/anything\", data, {\r\n            \r\n        }).then(res => console.log(res)).catch(err => console.log(err));\r\n        */\r\n\r\n        Axios.post(\"/api/upload/image\", \r\n            data, \r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                },\r\n            }\r\n        ).then(res => console.log(res)).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> Create <span>Item</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {/*<form>*/}\r\n\r\n                        <span className=\"input_label\" >Item ID:</span>\r\n                        <input \r\n                            value={item_id} \r\n                            onChange={event => set_id(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Name\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Type:</span>\r\n                        <input \r\n                            value={item_type} \r\n                            onChange={event => set_type(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Type\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Name:</span>\r\n                        <input \r\n                            value={item_name} \r\n                            onChange={event => set_name(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Description:</span>\r\n                        <textarea\r\n                            value={item_description} \r\n                            onChange={event => set_description(event.target.value)}\r\n                            className=\"item_description\" \r\n                            placeholder={item_description}\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >Item Price</span>\r\n                        <input \r\n                            value={item_price} \r\n                            onChange={event => set_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Price\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Stock:</span>\r\n                        <input \r\n                            value={item_stock} \r\n                            onChange={event => set_stock(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Stock\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >On Sale:</span>\r\n                        <input \r\n                            value={item_sale} \r\n                            onChange={event => set_sale(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"On Sale?\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item On Sale Price</span>\r\n                        <input \r\n                            value={item_sale_price} \r\n                            onChange={event => set_sale_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Item Sale Price\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Image</span>\r\n                        <input\r\n                            onChange={event => {\r\n                                const file = event.target.files[0];\r\n                                const name = file.name;\r\n                                setImageFile(file);\r\n                                setImageName(name);\r\n                            }}\r\n                            name=\"Upload File\"\r\n                            className=\"item_input\" \r\n                            type=\"file\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={createItem} >Create Item</button>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default CreateItem;","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ContactSection\\ContactSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Footer\\Footer.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\ModifyItem.jsx",["98","99","100","101","102","103"],"import React, {useState, useEffect} from \"react\";\r\nimport './CreateItem.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ModifyItem () {\r\n\r\n    const [item_id, set_id] = useState(\"\");\r\n    const [item_type, set_type] = useState(\"\");\r\n    const [item_name, set_name ] = useState(\"\");\r\n    const [item_description, set_description] = useState(\"\");\r\n    const [item_price, set_price ] = useState(\"\");\r\n    const [item_stock, set_stock] = useState(\"\");\r\n    const [item_sale, set_sale] = useState(\"\");\r\n    const [item_sale_price, set_sale_price] = useState(\"\");\r\n    const [image_file, setImageFile] = useState(\"\");\r\n    const [image_name, setImageName] = useState(\"\");\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    let {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const fetchData = () =>{\r\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\r\n            (response) => {\r\n                let items = JSON.parse(JSON.stringify(response.data));\r\n                console.log(items);\r\n\r\n                items.map(item => {\r\n                    if(item.item_id === id){\r\n                        set_id(item.item_id);\r\n                        set_type(item.item_type);\r\n                        set_name(item.item_name);\r\n                        set_description(item.item_description);\r\n                        set_price(item.item_price);\r\n                        set_stock(item.item_stock);\r\n                        set_sale(item.item_onsale);\r\n                        set_sale_price(item.item_saleprice)\r\n                        setImageName(item.item_image);\r\n                    }\r\n                    \r\n                });\r\n\r\n                loaded();\r\n            }\r\n        );\r\n    }\r\n\r\n    const modifyItem = () => {\r\n        uploadImage();\r\n\r\n        Axios.post(\"api/modifyItem\", {\r\n            id : item_id,\r\n            name : item_name,\r\n            type : item_type,\r\n            description : item_description,\r\n            price : item_price,\r\n            stock : item_stock,\r\n            sale : item_sale,\r\n            sale_price : item_sale_price,\r\n            image : image_name\r\n        });\r\n\r\n    }\r\n\r\n    const uploadImage = event => {\r\n        const data = new FormData();\r\n\r\n        data.append('name', image_name);\r\n        data.append('image', image_file); \r\n\r\n        /* debug purposes\r\n        Axios.post(\"https://httpbin.org/anything\", data, {\r\n            \r\n        }).then(res => console.log(res)).catch(err => console.log(err));\r\n        */\r\n\r\n        Axios.post(\"/api/upload/image\", \r\n            data, \r\n            {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                },\r\n            }\r\n        ).then(res => console.log(res)).catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    const loading = () =>{\r\n        setLoading(true);\r\n    }\r\n\r\n    const loaded = () => {\r\n        setLoading(false);\r\n    }\r\n\r\n\r\n    if (isLoading){\r\n        //returns only this until data is done loading\r\n        return <div className=\"App\">Fetching Data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> Modify <span>Item</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {/*<form>*/}\r\n\r\n                        <span className=\"input_label\" >Item ID:</span>\r\n                        <input \r\n                            value={item_id} \r\n                            onChange={event => set_id(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_id}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Type:</span>\r\n                        <input \r\n                            value={item_type} \r\n                            onChange={event => set_type(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_type}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Item Name:</span>\r\n                        <input \r\n                            value={item_name} \r\n                            onChange={event => set_name(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_name}\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Description:</span>\r\n                        <textarea\r\n                            value={item_description} \r\n                            onChange={event => set_description(event.target.value)}\r\n                            className=\"item_description\" \r\n                            placeholder={item_description}\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >Item Price</span>\r\n                        <input \r\n                            value={item_price} \r\n                            onChange={event => set_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Stock:</span>\r\n                        <input \r\n                            value={item_stock} \r\n                            onChange={event => set_stock(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_stock}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >On Sale:</span>\r\n                        <input \r\n                            value={item_sale} \r\n                            onChange={event => set_sale(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item On Sale Price</span>\r\n                        <input \r\n                            value={item_sale_price} \r\n                            onChange={event => set_sale_price(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder={item_sale_price}\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Item Image</span>\r\n                        <input \r\n                            onChange={event => {\r\n                                const file = event.target.files[0];\r\n                                const name = file.name;\r\n                                setImageFile(file);\r\n                                setImageName(name);\r\n                            }}\r\n                            name=\"Upload File\"\r\n                            className=\"item_input\" \r\n                            type=\"file\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={modifyItem} >Update Item</button>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n}\r\n\r\nexport default ModifyItem;","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ReviewSection\\ReviewSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\HomeSection\\HomeSection.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\MenuSection\\MenuSection.jsx",["104","105","106","107","108","109","110","111","112","113","114","115","116","117"],"import React, {useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport Header from '../Header/Header'\r\nimport './MenuSection.css'\r\nimport { Navigate, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nfunction MenuSection () {\r\n\r\n    let tempInventory = [];\r\n    const [constInventory, setConstInventory] = useState();\r\n    const [displayInventory, setDisplayInventory] = useState();\r\n    const [constOrders, setConstOrders] = useState();\r\n    const [displayOrders, setDisplayOrders] = useState();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [searchValue, setSearch] = useState(\"\");\r\n    const imageBase = './images/'\r\n    let {user} = useParams();\r\n\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    },[]);\r\n\r\n    const fetchData = () =>{\r\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\r\n            (response) => {\r\n                let items = JSON.parse(JSON.stringify(response.data));\r\n                setDisplayInventory(items);\r\n                setConstInventory(items);\r\n                loaded();\r\n            }\r\n        );\r\n    }\r\n    const search = () => {\r\n        tempInventory = []; //reset list\r\n        setDisplayInventory(constInventory);//reset display inventory\r\n        loading();\r\n        var searchInput = searchValue;\r\n\r\n        //check for whitespace only\r\n        if (/^\\s*$/.test(searchInput)){\r\n            loaded();\r\n            return;\r\n        }else{\r\n            constInventory.map(item => {\r\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase()) || item.item_description.toLowerCase().includes(searchInput.toLowerCase())){\r\n                    console.log(\"Pushing item\", item.item_name);\r\n                    tempInventory.push(item);\r\n                }else{\r\n                    console.log(item.item_name.toLowerCase(), \"Does not include\", searchInput.toLowerCase());\r\n                }\r\n            });\r\n        }\r\n        //set display to the filtered list\r\n        setDisplayInventory(tempInventory);\r\n        console.log(\"Here is the display inventory after update\\n\", displayInventory);\r\n        loaded();\r\n    };\r\n\r\n    const sortByName = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_name > b.item_name) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n\r\n\r\n    const sortByPrice = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_price > b.item_price) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n\r\n\r\n    const sortByAvailability = () => {\r\n        //reset the temp inventory list\r\n        tempInventory = [];\r\n        //add all current items to list\r\n        displayInventory.map(item => {\r\n            tempInventory.push(item);\r\n        });\r\n\r\n        tempInventory.sort((a,b) => (a.item_stock > b.item_stock) ? 1 : -1);\r\n        setDisplayInventory(tempInventory);\r\n    }\r\n   \r\n    const addToCart = () => {\r\n        alert(\"Added to cart!\");\r\n    }\r\n\r\n    const deleteItem = (item_id) => {\r\n        console.log(\"Item\", item_id);\r\n    }\r\n\r\n    const createItem = (item_id) => {\r\n        navigate(\"/createItem\");\r\n    }\r\n\r\n    const modifyItem = (item_id) => {\r\n        navigate(\"/modifyItem\" + item_id);\r\n    }\r\n\r\n    const loading = () =>{\r\n        setLoading(true);\r\n    }\r\n\r\n    const loaded = () => {\r\n        setLoading(false);\r\n    }\r\n\r\n    if (isLoading){\r\n        //returns only this until data is done loading\r\n        return <div className=\"App\">Loading Data...</div>;\r\n    }\r\n\r\n    //once data is done loading, we do this!\r\n    return (\r\n        <>\r\n            <section className=\"menu\" id=\"Menu\">\r\n                {/* OLD ONE <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>*/}\r\n                <h1 className=\"heading\"> OUR <span> PRODUCTS </span> </h1>\r\n                <div class=\"search\">\r\n                    <div className=\"search_head\" for=\"search\"> Search Inventory </div>\r\n                    <input \r\n                        value={searchValue} \r\n                        onChange={event => setSearch(event.target.value)}\r\n                        className=\"search_input\"\r\n                        type=\"search\" \r\n                        id=\"search\"\r\n                    />\r\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\r\n                \r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\r\n                </div>\r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\r\n                </div>\r\n                <div class=\"box\">\r\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\r\n                </div>\r\n                </div>\r\n                {user == 1 &&\r\n                    <div class=\"box\">\r\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\r\n                    </div> \r\n                }\r\n                <div className=\"box-container\">\r\n                    {/*For every item in inventory_list, create a box and list details of item*/}\r\n                    {}    \r\n                    {console.log(\"Items loaded\", constInventory)}\r\n                    {displayInventory.map(item => \r\n                        {\r\n                            console.log(item.item_name);\r\n                            var crossout = \"\";\r\n                            var price;\r\n                            if(item.item_onsale){\r\n                                price = item.item_saleprice.toFixed(2);\r\n                                crossout = item.item_price.toFixed(2);\r\n                            }else{\r\n                                price = item.item_price.toFixed(2);\r\n                            }\r\n                            if(item.item_stock > 0){\r\n                                return( \r\n                                    <div className=\"box\">\r\n                                        <img src={imageBase + item.item_image} alt=\"\" />\r\n                                        <h3>{item.item_name}</h3>\r\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\r\n                                        <div className=\"desc\">{item.item_description}</div>\r\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\r\n                                        {/* if the user is admin, have option to modify and delete the item\"*/}\r\n                                        { user == 1 ? <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button> :\r\n                                            <button className=\"btn\" type=\"submit\" onClick={addToCart} >Add to Cart</button>}\r\n                                        {user == 1 && <button className=\"btn\" type=\"submit\" onClick={() => deleteItem(item.item_id)} >Delete Item</button>}\r\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\r\n                                    </div>\r\n                                )\r\n                            }else{\r\n                                return( \r\n                                    <div className=\"box\">\r\n                                        <img src={imageBase + item.item_image} alt=\"\" />\r\n                                        <h3>{item.item_name}</h3>\r\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\r\n                                        <div className=\"desc\">{item.item_description}</div>\r\n                                        <div className=\"text\">Out of stock!</div>\r\n                                        <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>\r\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\r\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        }\r\n                    )}\r\n                </div>\r\n            </section>\r\n            \r\n        </>\r\n    )\r\n\r\n    /* ZAKARIAH'S ORIGINAL  and input this above every ahref= {/* eslint-disable-next-line /}\r\n    return (\r\n        <>\r\n\r\n            <section className=\"menu\" id=\"Menu\">\r\n\r\n                <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>\r\n\r\n                <div className=\"box-container\">\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n                    <div className=\"box\">\r\n                        {inventory_list.map(item => \r\n                            {\r\n                                return( \r\n                                    <div> {item.item_id} </div> \r\n                                )\r\n                            }\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\r\n                        <button className=\"btn\" type=\"submit\" onClick={fetchInventory} >Fetch Inventory</button>\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[3]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[5]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                    <div className=\"box\">\r\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\r\n                        <h3>{selector[3].menuHeading}</h3>\r\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\r\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </section>\r\n            \r\n        </>\r\n    )\r\n\r\n    */\r\n}\r\n\r\nexport default MenuSection\r\n","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Admin\\Admin.jsx",["118"],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Login\\Login.jsx",["119","120","121"],"\r\n\r\nimport * as React from 'react';\r\nimport {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\n\r\nconst Login = ({onLogin}) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n\r\n\r\n  const test = () =>{\r\n    onLogin(10, 11);\r\n  }\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    alert(\"Login check callled\") //debugging purposes\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n      if (response.data === \"USERERR\"){\r\n        alert(\"User not found, please register with us!\")\r\n      }else if (response.data === \"PASSERR\"){\r\n        alert(\"Incorrect combination of username and password\");\r\n      }else{\r\n          let users = JSON.parse(JSON.stringify(response.data));\r\n          console.log(users);\r\n          onLogin(users.user_id, users.user_admin);\r\n          navigate(\"/home\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n    alert(`The name you entered was : ${frontName}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <button className=\"btn\" type=\"submit\" onClick={goRegister} >Register</button>\r\n          <button className=\"btn\" type=\"submit\" onClick={test} >Send (1,2)</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Register\\Register.jsx",["122","123"],"import React, {useState,useEffect} from \"react\";\r\nimport Axios from 'axios';\r\nimport './Register.css'\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Register(){\r\n\r\n    const [frontEmail, setEmail] = useState(\"\")\r\n    const [frontFirst, setFirst] = useState(\"\")\r\n    const [frontLast, setLast] = useState(\"\")\r\n    const [frontPW, setPW] = useState(\"\")\r\n    const [frontConfirm, setConfirm] = useState(\"\")\r\n    const [frontAddress, setAddress] = useState(\"\")\r\n    const [frontNumber, setNumber] = useState(\"\")\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const submitInfo = () =>{\r\n        if(frontConfirm === frontPW){\r\n            Axios.post(\"/api/register/insert\",{\r\n            first: frontFirst,\r\n            last: frontLast,\r\n            email: frontEmail,\r\n            address: frontAddress,\r\n            number: frontNumber,\r\n            password : frontPW,\r\n            });\r\n\r\n            alert(\"Thank you for registering \", frontFirst, \"!\")\r\n            navigate(\"/Login\")\r\n        }else{\r\n            alert(\"The passwords do not match, please check and try again\")\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n    \r\n    return (\r\n        <div className=\"create_item\">\r\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\r\n                <div className=\"create_page\">\r\n\r\n                    <div className=\"logo\">\r\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                        <span className=\"input_label\" >User Email:</span>\r\n                        <input \r\n                            //value={item_id} \r\n                            onChange={event => setEmail(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\">First Name:</span>\r\n                        <input \r\n                            //value={item_type} \r\n                            onChange={event => setFirst(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"First Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\">Last Name:</span>\r\n                        <input \r\n                            //value={item_name} \r\n                            onChange={event => setLast(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Last Name\"\r\n                            required \r\n                        />\r\n\r\n                        <span className=\"input_label\" >Phone Number:</span>\r\n                        <input \r\n                            id=\"phoneNumber\" \r\n                            maxLength={16}\r\n                            //value={item_description} \r\n                            onChange={event => setNumber(event.target.value)}\r\n                            className=\"item_input\"\r\n                            placeholder=\"INPUT NUMBERS ONLY\"\r\n                            required\r\n                        />\r\n\r\n\r\n                        <span className=\"input_label\" >User Address:</span>\r\n                        <input \r\n                            //value={item_price} \r\n                            onChange={event => setAddress(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"text\"\r\n                            placeholder=\"Address\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Password:</span>\r\n                        <input \r\n                            //value={item_stock} \r\n                            onChange={event => setPW(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                        />\r\n\r\n                        <span className=\"input_label\" >Confirm Password:</span>\r\n                        <input \r\n                            //value={item_sale} \r\n                            onChange={event => setConfirm(event.target.value)}\r\n                            className=\"item_input\" \r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                        />\r\n\r\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\r\n\r\n                        <span className=\"create__head2\">Sign Up for emails to get special news and offers</span>\r\n                        <span className=\"create__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n                    {/*</form>*/}\r\n\r\n                </div>\r\n        </div>\r\n    );  \r\n\r\n    /*\r\n    return(\r\n        <div className =\"Register\"> <h1>Register</h1>\r\n        <div className ='input'>\r\n            <label> First Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontName\"\r\n                onChange={(e)=> {\r\n                    setName(e.target.value)\r\n                }}/>\r\n                <label>Last Name</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontLast\"\r\n                onChange={(e)=> {\r\n                    setLast(e.target.value)\r\n                }}/>\r\n\r\n                <label>Phone Number</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontNumber\"\r\n                onChange={(e)=> {\r\n                    setNumber(e.target.value)\r\n                }}/>\r\n               \r\n\r\n            <label>Email</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontEmail\"\r\n                onChange={(e)=> {\r\n                    setEmail(e.target.value)\r\n                }}/>\r\n\r\n            <label>Address</label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"frontAddress\"\r\n                onChange={(e)=> {\r\n                    setAddress(e.target.value)\r\n                }}/>\r\n\r\n            <label>Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontPW\"\r\n                onChange={(e)=> {\r\n                    setPW(e.target.value)\r\n                }}/>\r\n\r\n            <label>Confirm Password</label>\r\n            <input\r\n                type=\"password\"\r\n                name=\"frontConfirm\"\r\n                onChange={(e)=> {\r\n                    setConfirm(e.target.value)\r\n                }}/>\r\n            \r\n            <button onClick ={submitInfo}>Register</button>\r\n\r\n\r\n            \r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n    */\r\n\r\n};\r\n\r\nexport default Register\r\n","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\ModifyUser\\ModifyUser.jsx",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139"],"import React, {useState,useEffect} from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport Axios from 'axios';\r\nimport './ModifyUser.css';\r\n\r\n\r\nfunction ModifyUser(){\r\n    //setting all the needed states for intitial variables.\r\n    const [InEmail,setInEmail] = useState(\"\")\r\n    const [Email,setEmail] = useState(\"\")\r\n    const [Password,setPassword]= useState(\"\")\r\n    const [FirstName,setFirstName] = useState(\"\")\r\n    const [LastName,setLastName] = useState(\"\")\r\n    const [Phone,setPhone] = useState(\"\")\r\n    const [Address,setAddress] = useState(\"\")\r\n    const [OldEmail,setOldEmail] = useState(\"\")\r\n    const [OldPassword,setOldPassword]= useState(\"\")\r\n    const [OldFirstName,setOldFirstName] = useState(\"\")\r\n    const [OldLastName,setOldLastName] = useState(\"\")\r\n    const [OldPhone,setOldPhone] = useState(\"\")\r\n    const [OldAddress,setOldAddress] = useState(\"\")\r\n    const [UserID,setUserID] = useState(\"\")\r\n    const [Response,setResponse] = useState(\"\")\r\n    const [Test,setTest] = useState(\"\")\r\n\r\n\r\n    const [UserList, makeList] = useState([])\r\n\r\n    //populates the user info list whenever a user is found.\r\n    useEffect(() => {\r\n\r\n\r\n        if(Response == \"User Found\"){\r\n        UserList.map(val => {\r\n\r\n                  \r\n            setUserID(val.user_id)\r\n            setOldEmail(val.user_email)\r\n            setOldFirstName(val.user_first_name)\r\n            setOldLastName(val.user_last_name)\r\n            setOldAddress(val.user_address)\r\n            setOldPhone(val.phone)\r\n            setOldPassword(val.password)\r\n            \r\n           \r\n          });\r\n        }\r\n        \r\n       \r\n        if (Response != \"User Updated\"){\r\n        if(Email == \"\"){\r\n            setEmail(OldEmail)\r\n        }\r\n        if(FirstName == \"\"){\r\n            setFirstName(OldFirstName)\r\n        }\r\n        if(LastName == \"\"){\r\n            setLastName(OldLastName)\r\n        }\r\n        if(Phone == \"\"){\r\n            setPhone(OldPhone)\r\n        }\r\n        if(Address == \"\"){\r\n            setAddress(OldAddress)\r\n        }\r\n        if(Password == \"\"){\r\n            setPassword(OldPassword)\r\n        }\r\n    }\r\n        \r\n    });\r\n\r\n    //finduser function, activated from the find button on the page\r\n    const findUser =() =>{\r\n\r\n        const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\r\n\r\n        \r\n        if(!emailRegex.test(InEmail)){\r\n            alert(\"Please enter a valid email address\")\r\n            return;\r\n            \r\n        }\r\n       \r\n\r\n        //api call to admin user find location in backend\r\n        Axios.post(\"/api/admin/user/find\",{\r\n            //sends over the email to search from db in backend\r\n            email: InEmail\r\n            \r\n\r\n        }).then((response) => { //reading the information sent back from backend \r\n\r\n          if (response.data == \"\"){ //conditional statement using the sent back information\r\n\r\n              makeList(response.data)\r\n                setResponse(\"User was not found\") //tells the page that a user was not found\r\n             }else{ \r\n                makeList(response.data) //makes the list for the user that stores all the information received from backend\r\n                setResponse(\"User Found\") //tells the page that a user was found\r\n            }\r\n        });\r\n    }\r\n\r\n        //update user function\r\n        const updateUser = () =>{\r\n\r\n            if(Response == \"\" || Response == \"User updated\"){\r\n                setResponse(\"Please find a user first\")\r\n                return\r\n            }\r\n            //setting userID\r\n          setUserID(UserID)\r\n      \r\n    \r\n            \r\n            \r\n        \r\n            //api call to update users\r\n            //sends all the information to backend for db\r\n            Axios.post(\"/api/admin/user/update\",{\r\n\r\n                email:Email,\r\n                firstname:FirstName,\r\n                lastname:LastName,\r\n                phone:Phone,\r\n                address:Address,\r\n                password:Password,\r\n                userID:UserID\r\n\r\n            })\r\n                setResponse(\"User Updated\")\r\n        }\r\n\r\n\r\n    return(\r\n\r\n      \r\n        <div className = 'inputs'>\r\n            <h1>email of user</h1>\r\n            <input  \r\n                type=\"text\"\r\n                name=\"InEmail\"\r\n                onChange={(e)=> {\r\n                    setInEmail(e.target.value)\r\n                }}/>\r\n\r\n\r\n\r\n            <button onClick ={findUser}>Find</button>\r\n                <label>{Response}</label>\r\n\r\n                {UserList.map((val,key)=> {\r\n      return (\r\n        <div className = \"UserInfo\" key = {key}>\r\n        <label style={{fontSize: '15px'}}>\r\n          Email: {val.user_email} \r\n          <br/>\r\n          Name: {val.user_first_name} {val.user_last_name}\r\n          <br/>\r\n          Phone: {val.user_phone}\r\n          <br/>\r\n          Address: {val.user_address}\r\n          <br/>\r\n          Password: {val.password}\r\n          \r\n        </label>\r\n        </div>\r\n      );\r\n    })}\r\n            <h1>Email</h1>\r\n                <input\r\n                type = \"text\"\r\n                name = \"Email\"\r\n                onChange={(e)=>{\r\n                    setEmail(e.target.value)\r\n                }}/>\r\n            <h1>First Name</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Firstname\"\r\n                onChange={(e)=>{\r\n                    setFirstName(e.target.value)\r\n                }}/>\r\n            <h1>Last Name</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Lastname\"\r\n                onChange={(e)=>{\r\n                    setLastName(e.target.value)\r\n                }}/>\r\n            <h1>Phone</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Phone\"\r\n                onChange={(e)=>{\r\n                    setPhone(e.target.value)\r\n                }}/>\r\n            <h1>Address</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Address\"\r\n                onChange={(e)=>{\r\n                    setAddress(e.target.value)\r\n                }}/>\r\n            <h1>password</h1>\r\n            <input\r\n                type = \"text\"\r\n                name = \"Password\"\r\n                onChange={(e)=>{\r\n                    setPassword(e.target.value)\r\n                }}/>\r\n\r\n                <button onClick ={updateUser}>Update</button>\r\n\r\n         \r\n        </div>        \r\n\r\n        \r\n\r\n    );\r\n\r\n\r\n      \r\n\r\n};\r\n\r\n\r\n\r\nexport default ModifyUser","C:\\Users\\Kevin\\Desktop\\Group13\\ui\\frontend\\src\\components\\Discounts\\Discounts.jsx",["140"],{"ruleId":"141","severity":1,"message":"142","line":18,"column":50,"nodeType":"143","messageId":"144","endLine":18,"endColumn":61},{"ruleId":"141","severity":1,"message":"145","line":18,"column":63,"nodeType":"143","messageId":"144","endLine":18,"endColumn":69},{"ruleId":"141","severity":1,"message":"146","line":32,"column":12,"nodeType":"143","messageId":"144","endLine":32,"endColumn":18},{"ruleId":"141","severity":1,"message":"147","line":33,"column":12,"nodeType":"143","messageId":"144","endLine":33,"endColumn":19},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"141","severity":1,"message":"152","line":1,"column":26,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"153","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"154","line":20,"column":9,"nodeType":"143","messageId":"144","endLine":20,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"155","line":5,"column":8,"nodeType":"143","messageId":"144","endLine":5,"endColumn":13},{"ruleId":"141","severity":1,"message":"154","line":23,"column":9,"nodeType":"143","messageId":"144","endLine":23,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":29,"column":7,"nodeType":"158","endLine":29,"endColumn":9,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":37,"column":32,"nodeType":"162","messageId":"163","endLine":37,"endColumn":34},{"ruleId":"141","severity":1,"message":"164","line":97,"column":11,"nodeType":"143","messageId":"144","endLine":97,"endColumn":18},{"ruleId":"141","severity":1,"message":"165","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":14},{"ruleId":"141","severity":1,"message":"153","line":5,"column":10,"nodeType":"143","messageId":"144","endLine":5,"endColumn":18},{"ruleId":"141","severity":1,"message":"166","line":12,"column":12,"nodeType":"143","messageId":"144","endLine":12,"endColumn":23},{"ruleId":"141","severity":1,"message":"167","line":12,"column":25,"nodeType":"143","messageId":"144","endLine":12,"endColumn":39},{"ruleId":"141","severity":1,"message":"168","line":13,"column":12,"nodeType":"143","messageId":"144","endLine":13,"endColumn":25},{"ruleId":"141","severity":1,"message":"169","line":13,"column":27,"nodeType":"143","messageId":"144","endLine":13,"endColumn":43},{"ruleId":"156","severity":1,"message":"157","line":23,"column":7,"nodeType":"158","endLine":23,"endColumn":9,"suggestions":"170"},{"ruleId":"160","severity":1,"message":"161","line":46,"column":37,"nodeType":"162","messageId":"163","endLine":46,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":65,"column":35,"nodeType":"162","messageId":"163","endLine":65,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":78,"column":35,"nodeType":"162","messageId":"163","endLine":78,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":91,"column":35,"nodeType":"162","messageId":"163","endLine":91,"endColumn":37},{"ruleId":"171","severity":1,"message":"172","line":155,"column":23,"nodeType":"173","messageId":"174","endLine":155,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":184,"column":48,"nodeType":"173","messageId":"174","endLine":184,"endColumn":50},{"ruleId":"171","severity":1,"message":"172","line":186,"column":47,"nodeType":"173","messageId":"174","endLine":186,"endColumn":49},{"ruleId":"141","severity":1,"message":"153","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":18},{"ruleId":"141","severity":1,"message":"152","line":4,"column":18,"nodeType":"143","messageId":"144","endLine":4,"endColumn":27},{"ruleId":"141","severity":1,"message":"153","line":7,"column":10,"nodeType":"143","messageId":"144","endLine":7,"endColumn":18},{"ruleId":"141","severity":1,"message":"175","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":16},{"ruleId":"141","severity":1,"message":"152","line":1,"column":25,"nodeType":"143","messageId":"144","endLine":1,"endColumn":34},{"ruleId":"141","severity":1,"message":"153","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":18},{"ruleId":"141","severity":1,"message":"176","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":21},{"ruleId":"141","severity":1,"message":"177","line":24,"column":12,"nodeType":"143","messageId":"144","endLine":24,"endColumn":16},{"ruleId":"141","severity":1,"message":"178","line":24,"column":17,"nodeType":"143","messageId":"144","endLine":24,"endColumn":24},{"ruleId":"156","severity":1,"message":"179","line":30,"column":5,"nodeType":"143","endLine":30,"endColumn":14,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"172","line":33,"column":21,"nodeType":"173","messageId":"174","endLine":33,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":34,"column":26,"nodeType":"162","messageId":"163","endLine":34,"endColumn":28},{"ruleId":"171","severity":1,"message":"181","line":50,"column":22,"nodeType":"173","messageId":"174","endLine":50,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":51,"column":18,"nodeType":"173","messageId":"174","endLine":51,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":54,"column":22,"nodeType":"173","messageId":"174","endLine":54,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":57,"column":21,"nodeType":"173","messageId":"174","endLine":57,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":60,"column":18,"nodeType":"173","messageId":"174","endLine":60,"endColumn":20},{"ruleId":"171","severity":1,"message":"172","line":63,"column":20,"nodeType":"173","messageId":"174","endLine":63,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":66,"column":21,"nodeType":"173","messageId":"174","endLine":66,"endColumn":23},{"ruleId":"171","severity":1,"message":"172","line":94,"column":29,"nodeType":"173","messageId":"174","endLine":94,"endColumn":31},{"ruleId":"171","severity":1,"message":"172","line":108,"column":25,"nodeType":"173","messageId":"174","endLine":108,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":108,"column":43,"nodeType":"173","messageId":"174","endLine":108,"endColumn":45},{"ruleId":"141","severity":1,"message":"176","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":21},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'userID' is assigned a value but never used.","'adminID' is assigned a value but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'useEffect' is defined but never used.","'Navigate' is defined but never used.","'navigate' is assigned a value but never used.","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["184"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loading' is assigned a value but never used.","'Header' is defined but never used.","'constOrders' is assigned a value but never used.","'setConstOrders' is assigned a value but never used.","'displayOrders' is assigned a value but never used.","'setDisplayOrders' is assigned a value but never used.",["185"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Register' is defined but never used.","'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["186"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"187","fix":"188"},{"desc":"187","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [fetchData]",{"range":"192","text":"193"},{"range":"194","text":"193"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"195","text":"196"},[941,943],"[fetchData]",[775,777],[2136,2136],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]"]