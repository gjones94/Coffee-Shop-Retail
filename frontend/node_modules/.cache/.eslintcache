[{"/home/trey/Documents/aws/ui/frontend/src/index.jsx":"1","/home/trey/Documents/aws/ui/frontend/src/components/store/store.js":"2","/home/trey/Documents/aws/ui/frontend/src/app.jsx":"3","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js":"4","/home/trey/Documents/aws/ui/frontend/src/components/action/action.js":"5","/home/trey/Documents/aws/ui/frontend/src/components/home/home.js":"6","/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx":"7","/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx":"8","/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx":"9","/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx":"10","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx":"11","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx":"12","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx":"13","/home/trey/Documents/aws/ui/frontend/src/components/Discounts/Discounts.jsx":"14","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx":"15","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx":"16","/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx":"17","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx":"18","/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx":"19","/home/trey/Documents/aws/ui/frontend/src/components/Discounts/ModifyDiscount.jsx":"20","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx":"21","/home/trey/Documents/aws/ui/frontend/src/components/Orders/Orders.jsx":"22"},{"size":334,"mtime":1650194581641,"results":"23","hashOfConfig":"24"},{"size":212,"mtime":1650502606459,"results":"25","hashOfConfig":"24"},{"size":4150,"mtime":1650608685219,"results":"26","hashOfConfig":"24"},{"size":272,"mtime":1650502606459,"results":"27","hashOfConfig":"24"},{"size":117,"mtime":1650194581645,"results":"28","hashOfConfig":"24"},{"size":2592,"mtime":1650194581645,"results":"29","hashOfConfig":"24"},{"size":1292,"mtime":1650194581641,"results":"30","hashOfConfig":"24"},{"size":1718,"mtime":1650502606455,"results":"31","hashOfConfig":"24"},{"size":1793,"mtime":1650194581645,"results":"32","hashOfConfig":"24"},{"size":782,"mtime":1650194581645,"results":"33","hashOfConfig":"24"},{"size":14334,"mtime":1650613792689,"results":"34","hashOfConfig":"24"},{"size":6857,"mtime":1650610901152,"results":"35","hashOfConfig":"24"},{"size":8112,"mtime":1650502606455,"results":"36","hashOfConfig":"24"},{"size":4848,"mtime":1650531164945,"results":"37","hashOfConfig":"24"},{"size":3860,"mtime":1650502606455,"results":"38","hashOfConfig":"24"},{"size":2854,"mtime":1650194581645,"results":"39","hashOfConfig":"24"},{"size":2717,"mtime":1650519153831,"results":"40","hashOfConfig":"24"},{"size":8275,"mtime":1650519153831,"results":"41","hashOfConfig":"24"},{"size":1620,"mtime":1650519153831,"results":"42","hashOfConfig":"24"},{"size":3212,"mtime":1650608255347,"results":"43","hashOfConfig":"24"},{"size":11083,"mtime":1650608340578,"results":"44","hashOfConfig":"24"},{"size":14978,"mtime":1650616144017,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbqbax",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/trey/Documents/aws/ui/frontend/src/index.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/store/store.js",[],"/home/trey/Documents/aws/ui/frontend/src/app.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/action/action.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/home/home.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx",["99","100","101","102","103","104","105","106","107"],"import React, {useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport './MenuSection.css'\nimport { useNavigate} from \"react-router-dom\";\n\n\n/*\n    Author: Trey Jones\n\n    Overview:\n    Menu section is the product page that shows all the stores' inventory. \n    It is where users go to add to cart, and where admins go to modify and create items.\n\n    Users can also search for inventory by name and by description.\n    They can also sort inventory by name, price, and availability\n\n*/\n\nfunction MenuSection ({uid, admin}) {\n\n    let tempInventory = [];\n    //This holds a copy of all the current inventory that was received from the database, it will not be updated\n    const [constInventory, setConstInventory] = useState(); \n    //This is updated with only the inventory that is selected when being searched for.\n    const [unsortedInventory, setUnsortedInventory] = useState();\n    const [displayInventory, setDisplayInventory] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [searchValue, setSearch] = useState(\"\");\n    const [cart, setCart] = useState();\n\n    //used to sort states (ascending, descending, etc)\n    const [sortNameOrder, setNameSort] = useState(0)\n    const [sortPriceOrder, setPriceSort] = useState(0)\n    const [sortAOrder, setASort] = useState(0)\n\n    const imageBase = './images/'\n\n    let navigate = useNavigate();\n\n    /*\n        Function: UseEffect\n        Use Effect is performed when the page first loads. \n    */\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    /* \n        Function: fetchData\n        Fetch Data calls the api on the backend through axios\n        This call goes to the backend process running on the server which handles\n        all API calls.\n        It parses through the JSON response data received, and sets two constant variables that hold the \n        state of the page. \n    */\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                setDisplayInventory(items);\n                setConstInventory(items);\n                setUnsortedInventory(items);\n                loaded();\n            }\n        );\n        /* Backup cart information\n        if(uid != null){\n            Axios.post(\"api/getcart\", {\n                id : uid\n            }).then((response) => \n                {\n                    let tempcart = JSON.parse(JSON.stringify(response.data));\n                    setCart(tempcart);\n                }\n            );\n        }\n        */\n    }\n\n\n    /*\n        Function: search\n        1) It then resets the display inventory to show all items\n        2) This sets up a temporary inventory list which will hold the results that the user searched for\n        3) It then sets the display inventory to be the inventory items that we populated in our temporary list that matched the search criteria\n        \n    */\n    const search = () => {\n        tempInventory = []; //reset list\n        setDisplayInventory(constInventory);//reset display inventory\n        loading();\n        var searchInput = searchValue;\n\n        //check for whitespace only\n        if (/^\\s*$/.test(searchInput)){\n            setUnsortedInventory(constInventory)\n            loaded();\n            return;\n        }else{\n            constInventory.map(item => {\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase()) || item.item_description.toLowerCase().includes(searchInput.toLowerCase())){\n                    tempInventory.push(item);\n                }else{\n                }\n            });\n        }\n        //set display to the filtered list\n        setDisplayInventory(tempInventory);\n        setUnsortedInventory(tempInventory);\n        loaded();\n    };\n\n    /*\n        Function: sortByName\n        This sorts the inventory by the item name\n        It uses temp list to populate all the currently displayed inventory and then sorts it, and sets it as the new display inventory\n    */\n    const sortByName = () => {\n        //reset other sorts\n        setPriceSort(0);\n        setASort(0);\n\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        if(sortNameOrder === 0){\n            //Ascending\n            tempInventory.sort((a, b) => (a.item_name > b.item_name) ? 1 : -1);\n            setNameSort(1)\n        }else if(sortNameOrder === 1){\n            //Descending\n            tempInventory.sort((a, b) => (a.item_name < b.item_name) ? 1 : -1);\n            setNameSort(2)\n        }else if(sortNameOrder === 2){\n            //Normal\n            tempInventory = unsortedInventory\n            setNameSort(0)\n        }\n\n        setDisplayInventory(tempInventory);\n    }\n\n\n    /*\n        Function: sortByPrice\n        This sorts the inventory by the item price\n        It uses temp list to populate all the currently displayed inventory and then sorts it, and sets it as the new display inventory\n    */\n    const sortByPrice = () => {\n        //reset other sorts\n        setNameSort(0);\n        setASort(0);\n\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        if(sortPriceOrder === 0){\n            //Ascending\n            tempInventory.sort((a, b) => (a.item_price > b.item_price) ? 1 : -1);\n            setPriceSort(1)\n        }else if(sortPriceOrder === 1){\n            //Descending\n            tempInventory.sort((a, b) => (a.item_price < b.item_price) ? 1 : -1);\n            setPriceSort(2)\n        }else if(sortPriceOrder === 2){\n            //Normal\n            tempInventory = unsortedInventory\n            setPriceSort(0)\n        }\n\n        setDisplayInventory(tempInventory);\n    }\n\n\n    /*\n        Function: sortByAvailability\n        This sorts the inventory by the item stock\n        It uses temp list to populate all the currently displayed inventory and then sorts it, and sets it as the new display inventory\n    */\n    const sortByAvailability = () => {\n        //reset other sorts\n        setNameSort(0);\n        setPriceSort(0);\n\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        if(sortAOrder === 0){\n            //Ascending\n            tempInventory.sort((a, b) => (a.item_stock > b.item_stock) ? 1 : -1);\n            setASort(1)\n        }else if(sortAOrder === 1){\n            //Descending\n            tempInventory.sort((a, b) => (a.item_stock < b.item_stock) ? 1 : -1);\n            setASort(2)\n        }else if(sortAOrder === 2){\n            //Normal\n            tempInventory = unsortedInventory\n            setASort(0)\n        }\n\n        setDisplayInventory(tempInventory);\n    }\n   \n   \n    /*\n        Function: addToCart\n        May not be used. Holding up\n    */\n    const addToCart = (item) => {\n        let temp_cart = [];\n\n        if(uid == null){\n            alert(\"You must login to add to your cart\");\n        }else{\n            let actual_price = 0\n            if(item.item_onsale == 1){\n                actual_price = item.item_sale_price;\n            }else{\n                actual_price = item.item_price;\n            }\n\n            //set default cart states\n            let empty = true \n            let item_exists = false\n\n            //put everything into a temp cart to modify\n            cart.map(cart_item => {\n                empty = false; //cart was not empty\n                temp_cart.push(cart_item);\n            });\n\n            \n            //create the new item\n            let new_item = {\n                \"user_id\" : uid,\n                \"item_id\" : item.item_id,\n                \"item_qty\" : 1\n            }\n\n            temp_cart.map(temp => {\n                if(temp.item_id === item.item_id){\n                   item_exists = true  //item already existed\n                   temp.item_qty += 1\n                   Axios.post(\"api/updateCartQty\", {\n                      item_id : item.item_id,\n                      qty : temp.item_qty\n                   });\n                }\n            })\n\n            if(!item_exists || empty){\n                Axios.post(\"api/addToCart\",{\n                    uid : uid,\n                    id : item.item_id,\n                    qty : 1\n                });\n                temp_cart.push(new_item) //do this to save local state\n            }\n            \n            setCart(temp_cart)\n            /*\n            Axios.post(\"api/addtocart\", {\n                user : uid,\n                id : item_id,\n                price : actual_price\n            });\n            */\n            alert(\"Added to cart!\");\n        }\n    }\n\n\n    /*\n        Function: createItem\n\n        Simply navigates to the create item page\n    */\n    const createItem = () => {\n        navigate(\"/createItem\");\n    }\n\n    /*\n        Function: modifyItem\n\n        Simply navigates to the modify item page\n    */\n    const modifyItem = (item_id) => {\n        navigate(\"/modifyItem\" + item_id);\n    }\n\n    /*\n        Function(s): loading, loaded\n        sets the loading variable to ensure the page only loads once data is fetched\n    */\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n    //Returns Loading data if isLoading is true\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Loading Data...</div>;\n    }\n\n    //once data is done loading, it displays the page properly with all the inventory\n    return (\n        <>\n            <section className=\"menu\" id=\"Menu\">\n                <h1 className=\"heading\"> OUR <span> PRODUCTS </span> </h1>\n                <div class=\"search\">\n                    <div className=\"search_head\" for=\"search\"> Search Inventory </div>\n                    <input \n                        value={searchValue} \n                        onChange={event => setSearch(event.target.value)}\n                        className=\"search_input\"\n                        type=\"search\" \n                        id=\"search\"\n                    />\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\n                \n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\n                </div>\n                {admin === 1 &&\n                    <div class=\"box\">\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\n                    </div> \n                }\n                </div>\n                <div className=\"box-container\">\n                    {displayInventory.map(item => \n                        {\n                            var crossout = \"\";\n                            var price;\n                            if(item.item_onsale){\n                                price = item.item_saleprice.toFixed(2);\n                                crossout = item.item_price.toFixed(2);\n                            }else{\n                                price = item.item_price.toFixed(2);\n                            }\n                            if(admin){\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\n                                        <div className=\"price\">Available: {item.item_stock} </div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/* if the user is admin, have option to modify the item\"*/}\n                                        <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button>\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }else{\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\n                                        <div className=\"price\">Available: {item.item_stock} </div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        {item.item_stock > 0 && <button className=\"btn\" type=\"submit\" onClick={() => addToCart(item)} >Add to Cart</button>} \n                                        {item.item_stock === 0 && <div className=\"price\">Out of Stock</div> && <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>}\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }\n                        }\n                    )}\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default MenuSection\n","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx",["108","109"],"import React, {useState} from \"react\";\nimport './CreateItem.css';\nimport Axios from 'axios';\nimport {useNavigate } from \"react-router-dom\";\n\n\nfunction CreateItem () {\n\n    const [item_id, set_id] = useState(\"\");\n    const [item_type, set_type] = useState(\"\");\n    const [item_name, set_name ] = useState(\"\");\n    const [item_description, set_description] = useState(\"\");\n    const [item_price, set_price ] = useState(\"\");\n    const [item_stock, set_stock] = useState(\"\");\n    const [item_sale, set_sale] = useState(\"\");\n    const [item_sale_price, set_sale_price] = useState(\"\");\n    const [image_file, setImageFile] = useState(\"\");\n    const [image_name, setImageName] = useState(\"\");\n\n    let navigate = useNavigate();\n\n    const createItem = () => {\n\n        let name_okay = uploadImage();\n        \n        if(name_okay){\n            Axios.post(\"api/insert/item\", {\n            id : item_id,\n            type : item_type,\n            name : item_name,\n            description : item_description,\n            price : item_price,\n            stock : item_stock,\n            sale : item_sale,\n            sale_price : item_sale_price,\n            image : image_name\n            });\n            alert(\"Item Created\")\n            navigate(\"/menu\")\n        }\n    }\n    const uploadImage = () => {\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,<>\\/?~]/;\n        if(format.test(image_name)){\n            alert(\"Name for image must not contain any special characters other than '.' and must not contain spaces\")\n            return false\n        }\n        if(image_file){\n            const data = new FormData();\n\n            data.append('name', image_name);\n            data.append('image', image_file); \n\n            Axios.post(\"/api/upload/image\", \n                data, \n                {\n                    headers: {\n                        \"Content-type\": \"multipart/form-data\"\n                    },\n                }\n            ).then(res => console.log(res)).catch(err => console.log(err));\n        }else{\n            console.log(\"No image uploaded for item, no upload occurs\");\n        }\n        return true\n        \n    }\n\n\n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> Create <span>Item</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                    {/*<form>*/}\n\n                        <span className=\"input_label\" >Item ID:</span>\n                        <input \n                            value={item_id} \n                            onChange={event => set_id(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Name\"\n                            required\n                        />\n\n                        <span className=\"input_label\">Item Type:</span>\n                        <input \n                            value={item_type} \n                            onChange={event => set_type(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Type\"\n                            required \n                        />\n\n                        <span className=\"input_label\">Item Name:</span>\n                        <input \n                            value={item_name} \n                            onChange={event => set_name(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\" >Item Description:</span>\n                        <textarea\n                            value={item_description} \n                            onChange={event => set_description(event.target.value)}\n                            className=\"item_description\" \n                            placeholder={item_description}\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >Item Price</span>\n                        <input \n                            value={item_price} \n                            onChange={event => set_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Price\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Stock:</span>\n                        <input \n                            value={item_stock} \n                            onChange={event => set_stock(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Stock\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >On Sale:</span>\n                        <input \n                            value={item_sale} \n                            onChange={event => set_sale(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"On Sale?\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item On Sale Price</span>\n                        <input \n                            value={item_sale_price} \n                            onChange={event => set_sale_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Sale Price\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Image</span>\n                        <input\n                            onChange={event => {\n                                const file = event.target.files[0];\n                                const name = file.name;\n                                setImageFile(file);\n                                setImageName(name);\n                            }}\n                            name=\"Upload File\"\n                            className=\"item_input\" \n                            type=\"file\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={createItem} >Create Item</button>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n}\n\nexport default CreateItem;","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx",["110","111","112","113","114"],"import React, {useState, useEffect} from \"react\";\nimport './CreateItem.css';\nimport Axios from 'axios';\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\n\nfunction ModifyItem ({uid, admin}) {\n\n    const [item_id, set_id] = useState(\"\");\n    const [item_id_update, set_updated_id] = useState(\"\");\n    const [item_type, set_type] = useState(\"\");\n    const [item_name, set_name ] = useState(\"\");\n    const [item_description, set_description] = useState(\"\");\n    const [item_price, set_price ] = useState(\"\");\n    const [item_stock, set_stock] = useState(\"\");\n    const [item_sale, set_sale] = useState(\"\");\n    const [item_sale_price, set_sale_price] = useState(\"\");\n    const [image_file, setImageFile] = useState(\"\");\n    const [image_name, setImageName] = useState(\"\");\n\n    const [isLoading, setLoading] = useState(true);\n\n    let navigate = useNavigate();\n\n    let {id} = useParams();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                console.log(items);\n\n                items.map(item => {\n                    if(item.item_id === id){\n                        set_id(item.item_id);\n                        set_updated_id(item.item_id);\n                        set_type(item.item_type);\n                        set_name(item.item_name);\n                        set_description(item.item_description);\n                        set_price(item.item_price);\n                        set_stock(item.item_stock);\n                        set_sale(item.item_onsale);\n                        set_sale_price(item.item_saleprice)\n                        setImageName(item.item_image);\n                    }\n                    \n                });\n\n                loaded();\n            }\n        );\n    }\n\n    const modifyItem = () => {\n        uploadImage();\n\n        Axios.post(\"api/modifyItem\", {\n            id : item_id,\n            updated_id : item_id_update,\n            name : item_name,\n            type : item_type,\n            description : item_description,\n            price : item_price,\n            stock : item_stock,\n            sale : item_sale,\n            sale_price : item_sale_price,\n            image : image_name\n        });\n        //navigate back to main menu\n        navigate(\"/menu\");\n    }\n\n    const uploadImage = event => {\n        const data = new FormData();\n\n        data.append('name', image_name);\n        data.append('image', image_file); \n\n        Axios.post(\"/api/upload/image\", \n            data, \n            {\n                headers: {\n                    \"Content-type\": \"multipart/form-data\"\n                },\n            }\n        ).then(res => console.log(res)).catch(err => console.log(err));\n    }\n\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Fetching Data...</div>;\n    }\n\n\n    //Redirect people who logged out back to home\n    if(admin == null){\n        navigate('/home');\n    }\n\n    //Logged in, but not an admin\n    if(admin == 0){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }\n\n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> Modify <span>Item</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                        <span className=\"input_label\" >Item ID:</span>\n                        <input \n                            value={item_id_update}\n                            onChange={event => set_updated_id(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_id_update}\n                            required\n                        />\n\n                        <span className=\"input_label\">Item Type:</span>\n                        <input \n                            value={item_type} \n                            onChange={event => set_type(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_type}\n                            required \n                        />\n\n                        <span className=\"input_label\">Item Name:</span>\n                        <input \n                            value={item_name} \n                            onChange={event => set_name(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_name}\n                            required \n                        />\n\n                        <span className=\"input_label\" >Item Description:</span>\n                        <textarea\n                            value={item_description} \n                            onChange={event => set_description(event.target.value)}\n                            className=\"item_description\" \n                            placeholder={item_description}\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >Item Price</span>\n                        <input \n                            value={item_price} \n                            onChange={event => set_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_price}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Stock:</span>\n                        <input \n                            value={item_stock} \n                            onChange={event => set_stock(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_stock}\n                            required\n                        />\n\n                        <span className=\"input_label\" >On Sale:</span>\n                        <input \n                            value={item_sale} \n                            onChange={event => set_sale(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_sale}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item On Sale Price</span>\n                        <input \n                            value={item_sale_price} \n                            onChange={event => set_sale_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_sale_price}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Image</span>\n                        <input \n                            onChange={event => {\n                                const file = event.target.files[0];\n                                const name = file.name;\n                                setImageFile(file);\n                                setImageName(name);\n                            }}\n                            name=\"Upload File\"\n                            className=\"item_input\" \n                            type=\"file\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={modifyItem} >Update Item</button>\n\n                </div>\n        </div>\n    );  \n}\n\nexport default ModifyItem;","/home/trey/Documents/aws/ui/frontend/src/components/Discounts/Discounts.jsx",["115","116"],"import React, {useState,useEffect} from \"react\";\nimport \"./Discounts.css\";\nimport axios from \"axios\";\nimport { useNavigate} from \"react-router-dom\";\n\nfunction Discount ({admin}){\n    const[Code,setCode] = useState(\"\")\n    const[Percent,setPercent] = useState(\"\")\n    const [discountList, setDiscountList] = useState();\n    const [isLoading, setLoading] = useState(true)\n\n    let navigate = useNavigate();\n    \n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        axios.post(\"/api/admin/discount/get\").then((response) =>\n        {\n            let items = JSON.parse(JSON.stringify(response.data));\n            setDiscountList(items);\n            loaded();\n        })\n    }\n\n    const loaded = () =>{\n        setLoading(false)\n    }\n\n    const loading = () => {\n        setLoading(true)\n    }\n\n    const addDiscount = () =>{\n        axios.post(\"/api/admin/discount/insert\",{\n            code:Code,\n            percent:Percent\n        })\n        loading();\n        fetchData();\n    }\n\n    const modifyDiscount = (code) => {\n        navigate(\"/modifyDiscount\" + code)\n    }\n\n    if(isLoading){\n        return <>Loading..</>\n    }\n\n    //Redirect people who logged out back to home\n    admin = 1\n    if(admin == null){\n            navigate('/home');\n    }\n    if(admin == 0){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }else{\n        return (\n            <>\n            <section className=\"menu\" id=\"Menu\">\n            <div className=\"create_discount\">\n                    <h1 className=\"heading\"> Add <span>Discount</span></h1>\n                    <div className=\"create_page\">\n    \n                        <div className=\"logo\">\n                            <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                        </div>\n                            <span className=\"input_label\" >Discount Code</span>\n                            <input \n                                onChange={event => setCode(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Discount Code\"\n                                required\n                            />\n                            <span className=\"input_label\">Discount Amount:</span>\n                            <input \n                                onChange={event => setPercent(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Percent Amount\"\n                                required \n                            />\n                            <button className=\"btn\" type=\"submit\" onClick={addDiscount}> Add Discount </button>\n                    </div>\n            </div>\n            </section>\n            <section className=\"menu\" id=\"Menu\">\n                <h1 className=\"heading\"> CURRENT <span> DISCOUNTS </span> </h1>\n                    <div className=\"box-container\">\n                        {discountList.map(discount => \n                            {\n                                return(\n                                    <div className=\"box\">\n                                        <h3>Code: {discount.discount_code}</h3>\n                                        <div className=\"code\">Amount: {discount.discount_percent}%</div>\n                                        <button className=\"btn\" type=\"Modify\" onClick={() => modifyDiscount(discount.discount_code)} >Modify Discount</button>\n                                    </div>\n                                )\n                            }\n                        )\n                        }\n                    </div>\n            </section>\n            </>\n        )\n    }\n\n   \n\n    /*\n    return(\n        <div>\n            {DiscountList.map((val,key)=> {\n      return (\n        <div className = \"DiscountInfo\" key = {key}>\n        <label style={{fontSize: '15px'}}>\n          Discount ID: {val.discount_id}   \n          <br/>\n          Discount code: {val.discount_code} \n          <br/>\n          Discount percent: {val.discount_percent}\n          <br/>\n        </label>\n        </div>\n      );\n    })}\n    <div>\n\n        <label>Add Discounts<br/></label>\n\n        <label>Code:</label>\n    <input  \n                type=\"text\"\n                name=\"Code\"\n                onChange={(e)=> {\n                    setCode(e.target.value)\n                }}/>\n    </div>\n\n        <label>Percent</label>\n        <input\n            type =\"test\"\n            name = \"Percent\"\n            onChange={(e) => {\n                setPercent(e.target.value)\n            }}/>\n\n            <button onClick ={addDiscount}>Add</button>\n        </div>\n\n    );\n            */\n}\n\nexport default Discount","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx",["117","118"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './Header.css'\n\nconst NavBar = ({u_name ,uid, admin, signOut}) => {\n    const handleMenuBtn = () => {\n    let navbar = document.querySelector('.navbar');\n    let searchForm = document.querySelector('.search-form');\n    navbar.classList.toggle('active');\n    searchForm.classList.remove('active');\n    }\n\n    const handleSearchBox = () => {\n        let navbar = document.querySelector('.navbar');\n        let searchForm = document.querySelector('.search-form');\n\n        searchForm.classList.toggle('active');\n        navbar.classList.remove('active');\n    }\n\n\n    return (\n        <>\n            <div className=\"header\">\n                {/* eslint-disable-next-line */}\n                <div className=\"logo\">\n                    <img src={'./images/logo.png'} alt=\"\" /> \n                </div>\n\n                <nav className=\"navbar\">\n                    <Link style={{textDecoration: 'none'}} to=\"/\">\n                        <span className=\"header__navItems\">Home</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/menu\">\n                        <span className=\"header_navItems\">Products</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/reviews\">\n                        <span className=\"header__navItems\">Reviews</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/about\">\n                        <span className=\"header__navItems\">About</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/contact\">\n                        <span className=\"header_navItems\">Contact</span>\n                     </Link>\n                    {/* User Not Signed In */}\n                    {uid == null &&\n                        <Link style={{textDecoration: 'none'}} to=\"/login\">\n                        <span className=\"header__navItems\">Log In</span>\n                        </Link>\n                    }\n                    {/* User is an admin */}\n                    {admin === 1 &&\n                        <Link style={{textDecoration: 'none'}} to=\"/admin\">\n                            <span className=\"header__navItems\">Admin</span>\n                        </Link>\n                    }\n                    {uid != null && \n                        <Link className=\"fas fa-shopping-cart\" style={{textDecoration: 'none'}} to=\"/cart\"></Link>\n                    }\n\n                </nav>\n                {/*\n                    <div>\n                        <h1 className=\"heading\"> Welcome {u_name} </h1>\n                    </div>\n                }\n                */}\n                {uid != null &&\n                    <div>\n                        <button className=\"btn\" type=\"submit\" onClick={signOut}>Sign Out</button>\n                    </div> \n                }\n                <div className=\"icons\">\n                    {uid != null &&\n                        <h1 className=\"heading\"> {u_name} </h1>\n                    }\n                    {/* \n                    <div className=\"fas fa-search\" id=\"search-btn\" onClick={handleSearchBox}></div>\n                    <div className=\"fas fa-bars\" id=\"menu-btn\" onClick={handleMenuBtn}></div>\n                    <div className=\"fas fa-user\" id =\"user-btn\"></div>\n                    <div className=\"fas fa-shopping-cart\" id=\"cart-btn\" onClick={handleCart}></div>\n                    */}\n                </div>\n\n                <div className=\"search-form\">\n                    <input type=\"search\" id=\"search-box\" placeholder=\"Search\" />\n                    <label htmlFor=\"search-box\" className=\"fas fa-search\"></label>\n                </div>\n                \n\n\n            </div>\n            \n        </>\n    )\n}\n\nexport default NavBar\n","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx",["119","120","121"],"\r\n\r\nimport * as React from 'react';\r\nimport {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\n\r\nconst Login = ({uid, admin, onLogin}) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n      if (response.data === \"USERERR\"){\r\n        alert(\"User not found, please register with us!\")\r\n      }else if (response.data === \"PASSERR\"){\r\n        alert(\"Incorrect combination of username and password\");\r\n      }else{\r\n\r\n          let users = JSON.parse(JSON.stringify(response.data));\r\n          console.log(users);\r\n          console.log(users[0].user_id, users[0].user_admin)\r\n          onLogin(users[0].user_first_name, users[0].user_id, users[0].user_admin);\r\n          navigate(\"/home\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n            placeholder =\"Email\"\r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <button className=\"btn\" type=\"submit\" onClick={goRegister} >Register</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx",["122","123","124","125","126"],"import React, {useState,useEffect} from \"react\";\nimport Axios from 'axios';\nimport './Register.css'\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\n\nfunction Register(){\n\n    const [frontEmail, setEmail] = useState(\"\")\n    const [frontFirst, setFirst] = useState(\"\")\n    const [frontLast, setLast] = useState(\"\")\n    const [frontPW, setPW] = useState(\"\")\n    const [frontConfirm, setConfirm] = useState(\"\")\n    const [frontAddress, setAddress] = useState(\"\")\n    const [frontNumber, setNumber] = useState(\"\")\n\n    let navigate = useNavigate();\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\n    const passwordRegex = /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/\n    const numberRegex = /^[0-9]+$/\n\n\n    const submitInfo = () =>{\n        const validBreak = 0;\n        if(!emailRegex.test(frontEmail)){\n            alert(\"Please enter a valid email address\")\n            return;\n        }\n        if(!passwordRegex.test(frontPW)){\n            alert(\"Please enter a valid password.\\nPasswords must contain 8 characters,1 upper case,1 lower case, 1 number, and 1 special character(!,@,#,$,%,etc)\")\n            return;\n        }\n        if(!numberRegex.test(frontNumber)){\n            alert(\"Please enter a valid number.\\nNo dashes, hyphens, or characters please.\")\n            return;\n        }\n\n        Axios.post(\"/api/register/validate\",{\n            email: frontEmail\n        }).then((response) =>{\n            console.log(response)\n            if(response.data == \"not valid\"){\n                alert(\"This email already has an account associated with it\")\n                return;\n            }\n\n            if(response.data == \"valid\"){\n\n                if(frontConfirm === frontPW){\n         \n\n                    Axios.post(\"/api/register/insert\",{\n                    first: frontFirst,\n                    last: frontLast,\n                    email: frontEmail,\n                    address: frontAddress,\n                    number: frontNumber,\n                    password : frontPW,\n                    });\n        \n                    alert(\"Thank you for registering \", frontFirst, \"!\")\n                    navigate(\"/Login\")\n                }else{\n                    alert(\"The passwords do not match, please check and try again\")\n                }\n                \n            }\n\n        });\n\n       \n\n        \n    }\n\n   \n    \n    \n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                        <span className=\"input_label\" >User Email:</span>\n                        <input \n                            //value={item_id} \n                            onChange={event => setEmail(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <span className=\"input_label\">First Name:</span>\n                        <input \n                            //value={item_type} \n                            onChange={event => setFirst(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\">Last Name:</span>\n                        <input \n                            //value={item_name} \n                            onChange={event => setLast(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\" >Phone Number:</span>\n                        <input \n                            id=\"phoneNumber\" \n                            maxLength={16}\n                            //value={item_description} \n                            onChange={event => setNumber(event.target.value)}\n                            className=\"item_input\"\n                            placeholder=\"Phone\"\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >User Address:</span>\n                        <input \n                            //value={item_price} \n                            onChange={event => setAddress(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Address\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Password:</span>\n                        <input \n                            //value={item_stock} \n                            onChange={event => setPW(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Confirm Password:</span>\n                        <input \n                            //value={item_sale} \n                            onChange={event => setConfirm(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\n\n                        <span className=\"create__head2\">Sign Up for emails to get special news and offers</span>\n                        <span className=\"create__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n\n    /*\n    return(\n        <div className =\"Register\"> <h1>Register</h1>\n        <div className ='input'>\n            <label> First Name</label>\n            <input\n                type=\"text\"\n                name=\"frontName\"\n                onChange={(e)=> {\n                    setName(e.target.value)\n                }}/>\n                <label>Last Name</label>\n            <input\n                type=\"text\"\n                name=\"frontLast\"\n                onChange={(e)=> {\n                    setLast(e.target.value)\n                }}/>\n\n                <label>Phone Number</label>\n            <input\n                type=\"text\"\n                name=\"frontNumber\"\n                onChange={(e)=> {\n                    setNumber(e.target.value)\n                }}/>\n               \n\n            <label>Email</label>\n            <input\n                type=\"text\"\n                name=\"frontEmail\"\n                onChange={(e)=> {\n                    setEmail(e.target.value)\n                }}/>\n\n            <label>Address</label>\n            <input\n                type=\"text\"\n                name=\"frontAddress\"\n                onChange={(e)=> {\n                    setAddress(e.target.value)\n                }}/>\n\n            <label>Password</label>\n            <input\n                type=\"password\"\n                name=\"frontPW\"\n                onChange={(e)=> {\n                    setPW(e.target.value)\n                }}/>\n\n            <label>Confirm Password</label>\n            <input\n                type=\"password\"\n                name=\"frontConfirm\"\n                onChange={(e)=> {\n                    setConfirm(e.target.value)\n                }}/>\n            \n            <button onClick ={submitInfo}>Register</button>\n\n\n            \n            </div>\n           \n        </div>\n    );\n    */\n\n};\n\nexport default Register\n","/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Discounts/ModifyDiscount.jsx",["127","128","129"],"import React, {useState, useEffect} from \"react\";\n//import './ModifyDiscount.css';\nimport Axios from 'axios';\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\n\n\nfunction ModifyDiscount (admin) {\n\n    const[Code,setCode] = useState(\"\")\n    const[Percent,setPercent] = useState(\"\")\n    const[Id, setId] = useState(\"\"); \n\n    const [isLoading, setLoading] = useState(true);\n    let navigate = useNavigate();\n\n    let {id} = useParams();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        \n        console.log(\"parameter_code\", id);\n        Axios.post('/api/get/discount', {\n            code: id\n        }).then((response) => {\n            loading();\n            let temp = JSON.parse(JSON.stringify(response.data));\n            console.log(\"discount\",temp[0])\n            setCode(temp[0].discount_code)\n            setPercent(temp[0].discount_percent)\n            setId(temp[0].discount_id)\n            console.log(\"new discount is\", temp);\n            loaded();\n        })\n    }\n\n    const modifyDiscount = () => {\n\n        Axios.post(\"api/modify/discount\", {\n            code : Code,\n            percent : Percent,\n            id : Id\n        });\n        //navigate back to main menu\n        navigate(\"/Discounts\");\n    }\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Fetching Data...</div>;\n    }\n\n    //Redirect people who logged out back to home\n    if(admin == null){\n        navigate('/home');\n    }\n\n    //Logged in, but not an admin\n    if(admin == 0){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }\n\n    return (\n        <div className=\"modify_item\">\n                <h1 className=\"heading\"> Modify <span>Discount</span></h1>\n                <div className=\"modify_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                        <span className=\"input_label\" >Discount Code:</span>\n                        <input \n                            value={Code}\n                            onChange={event => setCode(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={Code}\n                            required\n                        />\n\n                        <span className=\"input_label\">Discount Percent:</span>\n                        <input \n                            value={Percent} \n                            onChange={event => setPercent(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={Percent}\n                            required \n                        />\n                        <button className=\"btn\" type=\"submit\" onClick={modifyDiscount} >Update Discount</button>\n\n                </div>\n        </div>\n    );  \n}\n\nexport default ModifyDiscount;","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx",["130","131","132","133","134","135","136"],"import React, {useState,useEffect} from \"react\";\nimport { useSelector } from 'react-redux'\nimport Axios from 'axios';\nimport './ModifyUser.css';\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\nfunction ModifyUser({admin}){\n    //setting all the needed states for intitial variables.\n    const [InEmail,setInEmail] = useState(\"\")\n    const [Email,setEmail] = useState(\"\")\n    const [Password,setPassword]= useState(\"\")\n    const [FirstName,setFirstName] = useState(\"\")\n    const [LastName,setLastName] = useState(\"\")\n    const [Phone,setPhone] = useState(\"\")\n    const [Address,setAddress] = useState(\"\")\n    const [OldEmail,setOldEmail] = useState(\"\")\n    const [OldPassword,setOldPassword]= useState(\"\")\n    const [OldFirstName,setOldFirstName] = useState(\"\")\n    const [OldLastName,setOldLastName] = useState(\"\")\n    const [OldPhone,setOldPhone] = useState(\"\")\n    const [OldAddress,setOldAddress] = useState(\"\")\n    const [UserID,setUserID] = useState(\"\")\n    const [Response,setResponse] = useState(\"\")\n    const [Test,setTest] = useState(\"\")\n\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\n    const passwordRegex = /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/\n    let navigate = useNavigate();\n\n    const [UserList, makeList] = useState([])\n\n    //populates the user info list whenever a user is found.\n    useEffect(() => {\n\n        if(Response === \"User Found\"){\n        UserList.map(val => {\n\n                  \n            setUserID(val.user_id)\n            setOldEmail(val.user_email)\n            setOldFirstName(val.user_first_name)\n            setOldLastName(val.user_last_name)\n            setOldAddress(val.user_address)\n            setOldPhone(val.phone)\n            setOldPassword(val.password)\n            \n           \n          });\n        }\n        \n       \n        if (Response !== \"User Updated\"){\n        if(Email == \"\"){\n            setEmail(OldEmail)\n        }\n        if(FirstName === \"\"){\n            setFirstName(OldFirstName)\n        }\n        if(LastName === \"\"){\n            setLastName(OldLastName)\n        }\n        if(Phone === \"\"){\n            setPhone(OldPhone)\n        }\n        if(Address === \"\"){\n            setAddress(OldAddress)\n        }\n        if(Password === \"\"){\n            setPassword(OldPassword)\n        }\n    }\n        \n    });\n\n\n\n    //finduser function, activated from the find button on the page\n    const findUser = () =>{\n\n\n        \n        if(!emailRegex.test(InEmail)){\n            alert(\"Please enter a valid email address\")\n            return;\n            \n        }\n       \n\n        //api call to admin user find location in backend\n        Axios.post(\"/api/admin/user/find\",{\n            //sends over the email to search from db in backend\n            email: InEmail\n            \n\n        }).then((response) => { //reading the information sent back from backend \n            if(response.data == \"\"){ //conditional statement using the sent back information\n                makeList(response.data)\n                alert(\"User could not be found\")\n                //setResponse(\"User was not found\") //tells the page that a user was not found\n            }else{ \n                \n                makeList(response.data) //makes the list for the user that stores all the information received from backend\n                //setResponse(\"User Found\") //tells the page that a user was found\n            }\n        });\n    }\n\n    //update user function\n    const updateUser = () =>{\n\n        if(Response === \"\" || Response === \"User updated\"){\n            setResponse(\"Please find a user first\")\n            return\n        }\n\n\n        \n        if(!emailRegex.test(Email)){\n            alert(\"Please enter a valid email address\")\n            return;\n            \n        }\n        if(!passwordRegex.test(Password)){\n            alert(\"Please enter a valid password\\nPassword must contain 8 characters, 1 upper case, 1 lower case, 1 number, and 1 special character.\")\n            return;\n        }\n        \n        //setting userID\n        setUserID(UserID)\n    \n        //api call to update users\n        //sends all the information to backend for db\n        Axios.post(\"/api/admin/user/update\",{\n\n            email:Email,\n            firstname:FirstName,\n            lastname:LastName,\n            phone:Phone,\n            address:Address,\n            password:Password,\n            userID:UserID\n\n        })\n        \n        setResponse(\"User Updated\")\n    }\n\n   if(admin == null){\n        navigate('/home');\n   }\n    \n\n    return(\n        <div className =\"create_item\">\n            <h1 className = \"heading\">Modify<span>USER</span></h1>\n            <div className =\"create_page\">\n                <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                </div>\n\n                <span className=\"input_label\" >Find Email:</span>\n                        <input \n                            //value={item_id} \n                            onChange={event => setInEmail(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Email\"\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={findUser} >Find</button>\n\n            </div>\n\n            <div className =\"create_item\">\n            <h1 className = \"heading\"><span>USER</span></h1>\n                <div className =\"create_page\">\n                {UserList.map((val,key)=> {\n                    return (\n                        <div className = \"UserInfo\" key = {key}>\n                        <label style={{fontSize: '15px'}}>\n                        Email: {val.user_email} \n                        <br/>\n                        Name: {val.user_first_name} {val.user_last_name}\n                        <br/>\n                        Phone: {val.user_phone}\n                        <br/>\n                        Address: {val.user_address}\n                        <br/>\n                        Password: {val.password}\n                        \n                        </label>\n                        </div>\n      );\n    })}\n                </div>\n            </div>\n\n            <div className=\"create_item\">\n                <h1 className = \"heading\">MODIFY</h1>\n                <div className = \"create_page\">\n                    <span className=\"input_label\" >Email</span>\n                            <input \n                                onChange={event => setEmail(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Email\"\n                            />\n                            <span className=\"input_label\" >First Name</span>\n                        <input \n                            onChange={event => setFirstName(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"First Name\"\n                        />\n                        <span className=\"input_label\" >Last Name</span>\n                        <input \n                            onChange={event => setLastName(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                        />\n                        <span className=\"input_label\" >Phone</span>\n                        <input \n                            onChange={event => setPhone(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Phone\"\n                        />\n                        <span className=\"input_label\" >Address</span>\n                        <input \n                            onChange={event => setAddress(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Address\"\n                        />\n                        <span className=\"input_label\" >Password</span>\n                        <input \n                            onChange={event => setPassword(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Password\"\n                        />\n\n                            <button className=\"btn\" type=\"submit\" onClick={updateUser} >Update</button>\n\n                </div>\n\n            </div>\n\n\n\n\n        </div>\n\n        \n    )\n\n    /*return(\n\n      \n        <div className = 'inputs'>\n            <h1>email of user</h1>\n            <input\n                className= \"item_input\"  \n                type=\"text\"\n                name=\"InEmail\"\n                placeholder=\"Email\"\n                onChange={(e)=> {\n                    setInEmail(e.target.value)\n                }}/>\n\n\n\n            <button onClick ={findUser}>Find</button>\n                <label>{Response}</label>\n\n                {UserList.map((val,key)=> {\n      return (\n        <div className = \"UserInfo\" key = {key}>\n        <label style={{fontSize: '15px'}}>\n          Email: {val.user_email} \n          <br/>\n          Name: {val.user_first_name} {val.user_last_name}\n          <br/>\n          Phone: {val.user_phone}\n          <br/>\n          Address: {val.user_address}\n          <br/>\n          Password: {val.password}\n          \n        </label>\n        </div>\n      );\n    })}\n            <h1>Email</h1>\n                <input\n                type = \"text\"\n                name = \"Email\"\n                onChange={(e)=>{\n                    setEmail(e.target.value)\n                }}/>\n            <h1>First Name</h1>\n            <input\n                type = \"text\"\n                name = \"Firstname\"\n                onChange={(e)=>{\n                    setFirstName(e.target.value)\n                }}/>\n            <h1>Last Name</h1>\n            <input\n                type = \"text\"\n                name = \"Lastname\"\n                onChange={(e)=>{\n                    setLastName(e.target.value)\n                }}/>\n            <h1>Phone</h1>\n            <input\n                type = \"text\"\n                name = \"Phone\"\n                onChange={(e)=>{\n                    setPhone(e.target.value)\n                }}/>\n            <h1>Address</h1>\n            <input\n                type = \"text\"\n                name = \"Address\"\n                onChange={(e)=>{\n                    setAddress(e.target.value)\n                }}/>\n            <h1>password</h1>\n            <input\n                type = \"text\"\n                name = \"Password\"\n                onChange={(e)=>{\n                    setPassword(e.target.value)\n                }}/>\n\n                <button onClick ={updateUser}>Update</button>\n\n         \n        </div>        \n\n        \n\n    ); */\n\n\n      \n\n};\n\n\n\nexport default ModifyUser","/home/trey/Documents/aws/ui/frontend/src/components/Orders/Orders.jsx",["137","138","139","140","141","142","143","144","145","146","147","148"],{"ruleId":"149","severity":1,"message":"150","line":46,"column":7,"nodeType":"151","endLine":46,"endColumn":9,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":100,"column":37,"nodeType":"155","messageId":"156","endLine":100,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":126,"column":35,"nodeType":"155","messageId":"156","endLine":126,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":161,"column":35,"nodeType":"155","messageId":"156","endLine":161,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":196,"column":35,"nodeType":"155","messageId":"156","endLine":196,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":229,"column":33,"nodeType":"159","messageId":"160","endLine":229,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":232,"column":17,"nodeType":"163","messageId":"164","endLine":232,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":240,"column":32,"nodeType":"155","messageId":"156","endLine":240,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":253,"column":32,"nodeType":"155","messageId":"156","endLine":253,"endColumn":34},{"ruleId":"165","severity":1,"message":"166","line":43,"column":41,"nodeType":"167","messageId":"168","endLine":43,"endColumn":42,"suggestions":"169"},{"ruleId":"165","severity":1,"message":"170","line":43,"column":57,"nodeType":"167","messageId":"168","endLine":43,"endColumn":58,"suggestions":"171"},{"ruleId":"161","severity":1,"message":"172","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":28,"column":7,"nodeType":"151","endLine":28,"endColumn":9,"suggestions":"173"},{"ruleId":"153","severity":1,"message":"154","line":36,"column":32,"nodeType":"155","messageId":"156","endLine":36,"endColumn":34},{"ruleId":"161","severity":1,"message":"174","line":93,"column":11,"nodeType":"163","messageId":"164","endLine":93,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":114,"column":14,"nodeType":"159","messageId":"160","endLine":114,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":16,"column":7,"nodeType":"151","endLine":16,"endColumn":9,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"158","line":57,"column":14,"nodeType":"159","messageId":"160","endLine":57,"endColumn":16},{"ruleId":"161","severity":1,"message":"176","line":6,"column":11,"nodeType":"163","messageId":"164","endLine":6,"endColumn":24},{"ruleId":"161","severity":1,"message":"177","line":13,"column":11,"nodeType":"163","messageId":"164","endLine":13,"endColumn":26},{"ruleId":"161","severity":1,"message":"178","line":4,"column":18,"nodeType":"163","messageId":"164","endLine":4,"endColumn":27},{"ruleId":"161","severity":1,"message":"172","line":7,"column":10,"nodeType":"163","messageId":"164","endLine":7,"endColumn":18},{"ruleId":"161","severity":1,"message":"179","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"172","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"180","line":25,"column":15,"nodeType":"163","messageId":"164","endLine":25,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":43,"column":30,"nodeType":"159","messageId":"160","endLine":43,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":48,"column":30,"nodeType":"159","messageId":"160","endLine":48,"endColumn":32},{"ruleId":"161","severity":1,"message":"172","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":20,"column":7,"nodeType":"151","endLine":20,"endColumn":9,"suggestions":"181"},{"ruleId":"157","severity":1,"message":"158","line":69,"column":14,"nodeType":"159","messageId":"160","endLine":69,"endColumn":16},{"ruleId":"161","severity":1,"message":"182","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"161","severity":1,"message":"183","line":27,"column":12,"nodeType":"163","messageId":"164","endLine":27,"endColumn":16},{"ruleId":"161","severity":1,"message":"184","line":27,"column":17,"nodeType":"163","messageId":"164","endLine":27,"endColumn":24},{"ruleId":"149","severity":1,"message":"185","line":36,"column":5,"nodeType":"163","endLine":36,"endColumn":14,"suggestions":"186"},{"ruleId":"153","severity":1,"message":"154","line":39,"column":26,"nodeType":"155","messageId":"156","endLine":39,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":56,"column":18,"nodeType":"159","messageId":"160","endLine":56,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":99,"column":30,"nodeType":"159","messageId":"160","endLine":99,"endColumn":32},{"ruleId":"161","severity":1,"message":"187","line":22,"column":9,"nodeType":"163","messageId":"164","endLine":22,"endColumn":17},{"ruleId":"149","severity":1,"message":"188","line":52,"column":7,"nodeType":"151","endLine":52,"endColumn":14,"suggestions":"189"},{"ruleId":"153","severity":1,"message":"154","line":96,"column":24,"nodeType":"155","messageId":"156","endLine":96,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":98,"column":30,"nodeType":"155","messageId":"156","endLine":98,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":109,"column":47,"nodeType":"159","messageId":"160","endLine":109,"endColumn":49},{"ruleId":"153","severity":1,"message":"154","line":157,"column":35,"nodeType":"155","messageId":"156","endLine":157,"endColumn":37},{"ruleId":"157","severity":1,"message":"158","line":158,"column":36,"nodeType":"159","messageId":"160","endLine":158,"endColumn":38},{"ruleId":"153","severity":1,"message":"154","line":181,"column":35,"nodeType":"155","messageId":"156","endLine":181,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":201,"column":33,"nodeType":"155","messageId":"156","endLine":201,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":235,"column":33,"nodeType":"155","messageId":"156","endLine":235,"endColumn":35},{"ruleId":"153","severity":1,"message":"154","line":269,"column":32,"nodeType":"155","messageId":"156","endLine":269,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":303,"column":33,"nodeType":"155","messageId":"156","endLine":303,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["190"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'actual_price' is assigned a value but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["191","192"],"Unnecessary escape character: \\/.",["193","194"],"'Navigate' is defined but never used.",["195"],"'loading' is assigned a value but never used.",["196"],"'handleMenuBtn' is assigned a value but never used.","'handleSearchBox' is assigned a value but never used.","'useEffect' is defined but never used.","'Register' is defined but never used.","'validBreak' is assigned a value but never used.",["197"],"'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["198"],"'navigate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'combineUsersOrders'. Either include it or remove the dependency array.",["199"],{"desc":"200","fix":"201"},{"messageId":"202","fix":"203","desc":"204"},{"messageId":"205","fix":"206","desc":"207"},{"messageId":"202","fix":"208","desc":"204"},{"messageId":"205","fix":"209","desc":"207"},{"desc":"200","fix":"210"},{"desc":"200","fix":"211"},{"desc":"200","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [fetchData]",{"range":"217","text":"218"},"removeEscape",{"range":"219","text":"220"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"221","text":"222"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"223","text":"220"},{"range":"224","text":"222"},{"range":"225","text":"218"},{"range":"226","text":"218"},{"range":"227","text":"218"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"228","text":"229"},"Update the dependencies array to be: [combineUsersOrders, users]",{"range":"230","text":"231"},[1533,1535],"[fetchData]",[1334,1335],"",[1334,1334],"\\",[1350,1351],[1350,1350],[956,958],[459,461],[504,506],[2357,2357],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",[1982,1989],"[combineUsersOrders, users]"]