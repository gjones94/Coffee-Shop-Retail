[{"/home/trey/Documents/aws/ui/frontend/src/index.jsx":"1","/home/trey/Documents/aws/ui/frontend/src/components/store/store.js":"2","/home/trey/Documents/aws/ui/frontend/src/app.jsx":"3","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js":"4","/home/trey/Documents/aws/ui/frontend/src/components/action/action.js":"5","/home/trey/Documents/aws/ui/frontend/src/components/home/home.js":"6","/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx":"7","/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx":"8","/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx":"9","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx":"10","/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx":"11","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx":"12","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx":"13","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx":"14","/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx":"15","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx":"16","/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx":"17","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx":"18","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx":"19"},{"size":334,"mtime":1649397766135,"results":"20","hashOfConfig":"21"},{"size":212,"mtime":1649397766135,"results":"22","hashOfConfig":"21"},{"size":3590,"mtime":1650035108605,"results":"23","hashOfConfig":"21"},{"size":272,"mtime":1649397766135,"results":"24","hashOfConfig":"21"},{"size":117,"mtime":1649397766135,"results":"25","hashOfConfig":"21"},{"size":2592,"mtime":1649397766135,"results":"26","hashOfConfig":"21"},{"size":1292,"mtime":1649397766123,"results":"27","hashOfConfig":"21"},{"size":1650,"mtime":1649407973680,"results":"28","hashOfConfig":"21"},{"size":782,"mtime":1649397766123,"results":"29","hashOfConfig":"21"},{"size":13526,"mtime":1649964557523,"results":"30","hashOfConfig":"21"},{"size":1793,"mtime":1649397766123,"results":"31","hashOfConfig":"21"},{"size":6486,"mtime":1649580982367,"results":"32","hashOfConfig":"21"},{"size":7872,"mtime":1649580923935,"results":"33","hashOfConfig":"21"},{"size":2906,"mtime":1649963882350,"results":"34","hashOfConfig":"21"},{"size":3442,"mtime":1650050423750,"results":"35","hashOfConfig":"21"},{"size":2854,"mtime":1649397766135,"results":"36","hashOfConfig":"21"},{"size":810,"mtime":1649961786489,"results":"37","hashOfConfig":"21"},{"size":5993,"mtime":1649885513553,"results":"38","hashOfConfig":"21"},{"size":6633,"mtime":1650049634878,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbqbax",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/home/trey/Documents/aws/ui/frontend/src/index.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/store/store.js",[],"/home/trey/Documents/aws/ui/frontend/src/app.jsx",["86","87","88","89","90","91"],"import React, { useLayoutEffect, useState } from 'react'\nimport './app.css'\nimport AboutUs from './components/AboutUs/AboutUs'\nimport ContactSection from './components/ContactSection/ContactSection'\nimport Footer from './components/Footer/Footer'\nimport HomeSection from './components/HomeSection/HomeSection'\nimport MenuSection from './components/MenuSection/MenuSection'\nimport CreateItem from './components/MenuSection/CreateItem'\nimport ModifyItem from './components/MenuSection/ModifyItem'\nimport Header from './components/Header/Header'\nimport ReviewSection from './components/ReviewSection/ReviewSection'\nimport Login from './components/Login/Login'\nimport { fetchData } from './components/action/action'\nimport { useDispatch } from 'react-redux'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport { homeData } from './components/home/home'\nimport { BrowserRouter as Router, Route, Routes, useNavigate, Switch} from 'react-router-dom';\nimport Register from './components/Register/Register'\nimport Admin from './components/Admin/Admin'\nimport ModifyUser from './components/ModifyUser/ModifyUser'\n//import Orders from './components/orders/orders'\n\n\n\nfunction App() {\n\n    const dispatch = useDispatch()\n\n    const [data, setData] = useState(null)\n    const [userId, set_uid] = useState(null)\n    const [adminId, set_aid] = useState(null)\n    \n    const cbUserInfo = (u_id, a_id) =>{\n        console.log(\"test before set => userID: \", u_id);\n        set_uid(u_id)\n        set_aid(a_id)\n    }\n\n    const users = [\n        { id: '1', fullName: 'Robin Wieruch' },\n        { id: '2', fullName: 'Sarah Finnley' },\n    ];\n    const id = 1\n\n    useLayoutEffect(() => {\n        try {\n            setTimeout(() => {\n                dispatch(fetchData(homeData))\n                setData(homeData)\n            }, 5000)\n        }\n        catch (e) {\n            console.log(e)\n        }\n    })\n\n    const test = () => {\n        console.log(\"User ID\", userId);\n        alert(userId);\n    }\n\n    return (\n        <>\n\n            {data && <>\n              <Router>\n                <div className=\"app\"> \n                <Header />\n                {/*<Login parent_cb={cbUserInfo}/>*/}\n                <Routes>\n                    <Route path=\"/\" element={<HomeSection/>} />\n                    <Route path=\"/home\" element={<HomeSection/>} />\n                    <Route path=\"/menu:user\" element={<MenuSection/>} />\n                    <Route path=\"/reviews\" element={<ReviewSection/>} />\n                    <Route path=\"/about\" element={<AboutUs/>} />\n                    <Route path=\"/contact\" element={<ContactSection/>} />\n                    <Route path=\"/Login\" element={<Login/>} />\n                    <Route path =\"/ModifyUser\" element ={<ModifyUser/>}/>\n                    <Route path = \"/Register\" element = {<Register/>}/>\n                    <Route path=\"/login\" element={<Login idd={id} />} />\n                    <Route path =\"/admin\" element ={<Admin/>}/>\n                    <Route path =\"/createItem\" element={<CreateItem/>}/>\n                    <Route path =\"/modifyItem:id\" element={<ModifyItem/>}/>\n                    <Route path =\"/orders\" element ={<orders/>}/>\n                </Routes>\n                <Footer />\n                </div>\n                <div>\n                    <button className=\"btn\" type=\"submit\" onClick={test}>test</button>\n                </div>\n              </Router>\n            </>}\n\n            {!data} {/* Delay for data to load */}\n\n        </>\n    )\n}\n\nexport default App\n","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/action/action.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/home/home.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx",["92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React, {useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport Header from '../Header/Header'\nimport './MenuSection.css'\nimport { Navigate, useNavigate, useParams} from \"react-router-dom\";\n\nfunction MenuSection () {\n\n    let tempInventory = [];\n    const [constInventory, setConstInventory] = useState();\n    const [displayInventory, setDisplayInventory] = useState();\n    const [constOrders, setConstOrders] = useState();\n    const [displayOrders, setDisplayOrders] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [searchValue, setSearch] = useState(\"\");\n    const imageBase = './images/'\n    let {user} = useParams();\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                setDisplayInventory(items);\n                setConstInventory(items);\n                loaded();\n            }\n        );\n    }\n    const search = () => {\n        tempInventory = []; //reset list\n        setDisplayInventory(constInventory);//reset display inventory\n        loading();\n        var searchInput = searchValue;\n\n        //check for whitespace only\n        if (/^\\s*$/.test(searchInput)){\n            loaded();\n            return;\n        }else{\n            constInventory.map(item => {\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase()) || item.item_description.toLowerCase().includes(searchInput.toLowerCase())){\n                    console.log(\"Pushing item\", item.item_name);\n                    tempInventory.push(item);\n                }else{\n                    console.log(item.item_name.toLowerCase(), \"Does not include\", searchInput.toLowerCase());\n                }\n            });\n        }\n        //set display to the filtered list\n        setDisplayInventory(tempInventory);\n        console.log(\"Here is the display inventory after update\\n\", displayInventory);\n        loaded();\n    };\n\n    const sortByName = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_name > b.item_name) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByPrice = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_price > b.item_price) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByAvailability = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_stock > b.item_stock) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n   \n    const addToCart = () => {\n        alert(\"Added to cart!\");\n    }\n\n    const deleteItem = (item_id) => {\n        console.log(\"Item\", item_id);\n    }\n\n    const createItem = (item_id) => {\n        navigate(\"/createItem\");\n    }\n\n    const modifyItem = (item_id) => {\n        navigate(\"/modifyItem\" + item_id);\n    }\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Loading Data...</div>;\n    }\n\n    //once data is done loading, we do this!\n    return (\n        <>\n            <section className=\"menu\" id=\"Menu\">\n                {/* OLD ONE <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>*/}\n                <h1 className=\"heading\"> OUR <span> MENU </span> </h1>\n                <div class=\"search-wrapper\">\n                    <label className=\"desc\" for=\"search\"> Search Inventory </label>\n                    <input \n                        value={searchValue} \n                        onChange={event => setSearch(event.target.value)}\n                        type=\"search\" \n                        id=\"search\"\n                    />\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\n                </div>\n                {user == 1 &&\n                    <div class=\"box\">\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\n                    </div> \n                }\n                <div className=\"box-container\">\n                    {/*For every item in inventory_list, create a box and list details of item*/}\n                    {}    \n                    {console.log(\"Items loaded\", constInventory)}\n                    {displayInventory.map(item => \n                        {\n                            console.log(item.item_name);\n                            var crossout = \"\";\n                            var price;\n                            if(item.item_onsale){\n                                price = item.item_saleprice.toFixed(2);\n                                crossout = item.item_price.toFixed(2);\n                            }else{\n                                price = item.item_price.toFixed(2);\n                            }\n                            if(item.item_stock > 0){\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/* if the user is admin, have option to modify and delete the item\"*/}\n                                        { user == 1 ? <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button> :\n                                            <button className=\"btn\" type=\"submit\" onClick={addToCart} >Add to Cart</button>}\n                                        {user == 1 && <button className=\"btn\" type=\"submit\" onClick={() => deleteItem(item.item_id)} >Delete Item</button>}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }else{\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        <div className=\"text\">Out of stock!</div>\n                                        <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }\n                        }\n                    )}\n                </div>\n            </section>\n            \n        </>\n    )\n\n    /* ZAKARIAH'S ORIGINAL  and input this above every ahref= {/* eslint-disable-next-line /}\n    return (\n        <>\n\n            <section className=\"menu\" id=\"Menu\">\n\n                <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>\n\n                <div className=\"box-container\">\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n                    <div className=\"box\">\n                        {inventory_list.map(item => \n                            {\n                                return( \n                                    <div> {item.item_id} </div> \n                                )\n                            }\n                        )}\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\n                        <button className=\"btn\" type=\"submit\" onClick={fetchInventory} >Fetch Inventory</button>\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[3]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[5]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[4]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[0]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[1]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                    <div className=\"box\">\n                        <img src={selector[3].menuImages[2]} alt=\"\" />\n                        <h3>{selector[3].menuHeading}</h3>\n                        <div className=\"price\">${selector[3].menuPrice} <span>{selector[3].menuDiscountPrice}</span></div>\n                        <a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>\n                    </div>\n\n                </div>\n\n            </section>\n            \n        </>\n    )\n\n    */\n}\n\nexport default MenuSection\n","/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx",["106","107","108"],"import React, {useState, useEffect} from \"react\";\nimport './CreateItem.css';\nimport Axios from 'axios';\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\nfunction CreateItem () {\n\n    const [item_id, set_id] = useState(\"\");\n    const [item_type, set_type] = useState(\"\");\n    const [item_name, set_name ] = useState(\"\");\n    const [item_description, set_description] = useState(\"\");\n    const [item_price, set_price ] = useState(\"\");\n    const [item_stock, set_stock] = useState(\"\");\n    const [item_sale, set_sale] = useState(\"\");\n    const [item_sale_price, set_sale_price] = useState(\"\");\n    const [image_file, setImageFile] = useState(\"\");\n    const [image_name, setImageName] = useState(\"\");\n\n    let navigate = useNavigate();\n\n    const createItem = () => {\n        uploadImage();\n\n        Axios.post(\"api/insert/item\", {\n            id : item_id,\n            type : item_type,\n            name : item_name,\n            description : item_description,\n            price : item_price,\n            stock : item_stock,\n            sale : item_sale,\n            sale_price : item_sale_price,\n            image : image_name\n        });\n\n    }\n    const uploadImage = event => {\n        const data = new FormData();\n\n        data.append('name', image_name);\n        data.append('image', image_file); \n\n        /* debug purposes\n        Axios.post(\"https://httpbin.org/anything\", data, {\n            \n        }).then(res => console.log(res)).catch(err => console.log(err));\n        */\n\n        Axios.post(\"/api/upload/image\", \n            data, \n            {\n                headers: {\n                    \"Content-type\": \"multipart/form-data\"\n                },\n            }\n        ).then(res => console.log(res)).catch(err => console.log(err));\n    }\n\n\n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> Create <span>Item</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                    {/*<form>*/}\n\n                        <span className=\"input_label\" >Item ID:</span>\n                        <input \n                            value={item_id} \n                            onChange={event => set_id(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Name\"\n                            required\n                        />\n\n                        <span className=\"input_label\">Item Type:</span>\n                        <input \n                            value={item_type} \n                            onChange={event => set_type(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Type\"\n                            required \n                        />\n\n                        <span className=\"input_label\">Item Name:</span>\n                        <input \n                            value={item_name} \n                            onChange={event => set_name(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\" >Item Description:</span>\n                        <textarea\n                            value={item_description} \n                            onChange={event => set_description(event.target.value)}\n                            className=\"item_description\" \n                            placeholder={item_description}\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >Item Price</span>\n                        <input \n                            value={item_price} \n                            onChange={event => set_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Price\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Stock:</span>\n                        <input \n                            value={item_stock} \n                            onChange={event => set_stock(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Stock\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >On Sale:</span>\n                        <input \n                            value={item_sale} \n                            onChange={event => set_sale(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"On Sale?\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item On Sale Price</span>\n                        <input \n                            value={item_sale_price} \n                            onChange={event => set_sale_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Item Sale Price\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Image</span>\n                        <input\n                            onChange={event => {\n                                const file = event.target.files[0];\n                                const name = file.name;\n                                setImageFile(file);\n                                setImageName(name);\n                            }}\n                            name=\"Upload File\"\n                            className=\"item_input\" \n                            type=\"file\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={createItem} >Create Item</button>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n}\n\nexport default CreateItem;","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx",["109","110","111","112","113","114"],"import React, {useState, useEffect} from \"react\";\nimport './CreateItem.css';\nimport Axios from 'axios';\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\n\nfunction ModifyItem () {\n\n    const [item_id, set_id] = useState(\"\");\n    const [item_type, set_type] = useState(\"\");\n    const [item_name, set_name ] = useState(\"\");\n    const [item_description, set_description] = useState(\"\");\n    const [item_price, set_price ] = useState(\"\");\n    const [item_stock, set_stock] = useState(\"\");\n    const [item_sale, set_sale] = useState(\"\");\n    const [item_sale_price, set_sale_price] = useState(\"\");\n    const [image_file, setImageFile] = useState(\"\");\n    const [image_name, setImageName] = useState(\"\");\n\n    const [isLoading, setLoading] = useState(true);\n\n    let navigate = useNavigate();\n\n    let {id} = useParams();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                console.log(items);\n\n                items.map(item => {\n                    if(item.item_id === id){\n                        set_id(item.item_id);\n                        set_type(item.item_type);\n                        set_name(item.item_name);\n                        set_description(item.item_description);\n                        set_price(item.item_price);\n                        set_stock(item.item_stock);\n                        set_sale(item.item_onsale);\n                        set_sale_price(item.item_saleprice)\n                        setImageName(item.item_image);\n                    }\n                    \n                });\n\n                loaded();\n            }\n        );\n    }\n\n    const modifyItem = () => {\n        uploadImage();\n\n        Axios.post(\"api/modifyItem\", {\n            id : item_id,\n            name : item_name,\n            type : item_type,\n            description : item_description,\n            price : item_price,\n            stock : item_stock,\n            sale : item_sale,\n            sale_price : item_sale_price,\n            image : image_name\n        });\n\n    }\n\n    const uploadImage = event => {\n        const data = new FormData();\n\n        data.append('name', image_name);\n        data.append('image', image_file); \n\n        /* debug purposes\n        Axios.post(\"https://httpbin.org/anything\", data, {\n            \n        }).then(res => console.log(res)).catch(err => console.log(err));\n        */\n\n        Axios.post(\"/api/upload/image\", \n            data, \n            {\n                headers: {\n                    \"Content-type\": \"multipart/form-data\"\n                },\n            }\n        ).then(res => console.log(res)).catch(err => console.log(err));\n    }\n\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Fetching Data...</div>;\n    }\n\n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> Modify <span>Item</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                    {/*<form>*/}\n\n                        <span className=\"input_label\" >Item ID:</span>\n                        <input \n                            value={item_id} \n                            onChange={event => set_id(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_id}\n                            required\n                        />\n\n                        <span className=\"input_label\">Item Type:</span>\n                        <input \n                            value={item_type} \n                            onChange={event => set_type(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_type}\n                            required \n                        />\n\n                        <span className=\"input_label\">Item Name:</span>\n                        <input \n                            value={item_name} \n                            onChange={event => set_name(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_name}\n                            required \n                        />\n\n                        <span className=\"input_label\" >Item Description:</span>\n                        <textarea\n                            value={item_description} \n                            onChange={event => set_description(event.target.value)}\n                            className=\"item_description\" \n                            placeholder={item_description}\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >Item Price</span>\n                        <input \n                            value={item_price} \n                            onChange={event => set_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_price}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Stock:</span>\n                        <input \n                            value={item_stock} \n                            onChange={event => set_stock(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_stock}\n                            required\n                        />\n\n                        <span className=\"input_label\" >On Sale:</span>\n                        <input \n                            value={item_sale} \n                            onChange={event => set_sale(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_sale}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item On Sale Price</span>\n                        <input \n                            value={item_sale_price} \n                            onChange={event => set_sale_price(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder={item_sale_price}\n                            required\n                        />\n\n                        <span className=\"input_label\" >Item Image</span>\n                        <input \n                            onChange={event => {\n                                const file = event.target.files[0];\n                                const name = file.name;\n                                setImageFile(file);\n                                setImageName(name);\n                            }}\n                            name=\"Upload File\"\n                            className=\"item_input\" \n                            type=\"file\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={modifyItem} >Update Item</button>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n}\n\nexport default ModifyItem;","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx",["115","116","117","118","119"],"\r\n\r\nimport * as React from 'react';\r\nimport {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n  const [UserList, makeList] = useState([])\r\n  const [responseText,setresponseText] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n      Axios.get(\"/api/get\").then((response) => {\r\n      \tmakeList(response.data)\r\n      });\r\n    \r\n  },[]);\r\n\r\n  const test = () =>{\r\n    console.log(props.idd);\r\n  }\r\n\r\n  const submitInfo = () => {\r\n    let PwStrength = 0;\r\n    while (PwStrength == 0){\r\n        if (/\\d/.test(frontPassword)){\r\n            if(/[a-z]/.test(frontPassword)){\r\n                if(/[A-Z]/.test(frontPassword)){\r\n            PwStrength = 1;\r\n            setresponseText([frontName] +\" Has been registered \\n Welcome to Beans & Leaves!\")\r\n                }}\r\n        }else {\r\n            setresponseText(\"Password is too weak\")\r\n            submitInfo()}\r\n    }\r\n    Axios.post(\"/api/insert\",{\r\n\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    });\r\n  \r\n    makeList([...UserList, {Name: frontName , Password : frontPassword},]);\r\n  };\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    alert(\"Login check callled\") //debugging purposes\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n     \r\n      if (response.data === \"SUCCESS\"){\r\n        navigate(\"/home\");\r\n      }else if (response.data === \"USERERR\"){\r\n\t      navigate(\"/Register\")\r\n      }else if (response.data === \"PASSERR\"){\r\n        alert(\"Incorrect combination of username and password\");\r\n      }\r\n\r\n    });\r\n    \r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n    alert(`The name you entered was : ${frontName}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <button className=\"btn\" type=\"submit\" onClick={test}>test</button>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx",["120"],"import React from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\nfunction Admin(){\n\n  let navigate = useNavigate();\n\n\n  return (\n    <div>\n      <h1>Admin Page</h1>\n      <button onClick ={() =>{\n        navigate(\"/modifyUser\");\n      }}>\n        Admin Page\n      </button>\n\n      <button onClick ={() =>{\n        navigate(\"/menu1\");\n      }}>\n        View/Edit Inventory\n      </button>\n\n      <button onClick ={() =>{\n        //navigate(\"/orders\");\n      }}>\n        View Orders\n      </button>\n    </div>\n  );\n};\n/*return (\n  <div>\n    <h1>Orders</h1>\n    <button className=\"btn\" type=\"submit\" onClick={Orders} >See Orders</button>\n  </div>\n  <div>\n    <h1>Items</h1>\n    <button className=\"btn\" type=\"submit\" onClick={Items} >See Items</button>\n  </div>\n);*/\n\n  \nexport default Admin;","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React, {useState,useEffect} from \"react\";\nimport { useSelector } from 'react-redux'\nimport Axios from 'axios';\nimport './ModifyUser.css';\n\n\nfunction ModifyUser(){\n    //setting all the needed states for intitial variables.\n    const [InEmail,setInEmail] = useState(\"\")\n    const [Email,setEmail] = useState(\"\")\n    const [Password,setPassword]= useState(\"\")\n    const [FirstName,setFirstName] = useState(\"\")\n    const [LastName,setLastName] = useState(\"\")\n    const [Phone,setPhone] = useState(\"\")\n    const [Address,setAddress] = useState(\"\")\n    const [OldEmail,setOldEmail] = useState(\"\")\n    const [OldPassword,setOldPassword]= useState(\"\")\n    const [OldFirstName,setOldFirstName] = useState(\"\")\n    const [OldLastName,setOldLastName] = useState(\"\")\n    const [OldPhone,setOldPhone] = useState(\"\")\n    const [OldAddress,setOldAddress] = useState(\"\")\n    const [UserID,setUserID] = useState(\"\")\n    const [Response,setResponse] = useState(\"\")\n    const [Test,setTest] = useState(\"\")\n\n\n    const [UserList, makeList] = useState([])\n\n    //populates the user info list whenever a user is found.\n    useEffect(() => {\n\n        if(Response == \"User Found\"){\n        UserList.map(val => {\n\n                  \n            setUserID(val.user_id)\n            setOldEmail(val.user_email)\n            setOldFirstName(val.user_first_name)\n            setOldLastName(val.user_last_name)\n            setOldAddress(val.user_address)\n            setOldPhone(val.phone)\n            setOldPassword(val.password)\n            \n           \n          });\n        }\n        \n       \n        if (Response != \"User Updated\"){\n        if(Email == \"\"){\n            setEmail(OldEmail)\n        }\n        if(FirstName == \"\"){\n            setFirstName(OldFirstName)\n        }\n        if(LastName == \"\"){\n            setLastName(OldLastName)\n        }\n        if(Phone == \"\"){\n            setPhone(OldPhone)\n        }\n        if(Address == \"\"){\n            setAddress(OldAddress)\n        }\n        if(Password == \"\"){\n            setPassword(OldPassword)\n        }\n    }\n        \n    });\n\n    //finduser function, activated from the find button on the page\n    const findUser =() =>{\n\n        //api call to admin user find location in backend\n        Axios.post(\"/api/admin/user/find\",{\n            //sends over the email to search from db in backend\n            email: InEmail\n            \n\n        }).then((response) => { //reading the information sent back from backend \n\n          if (response.data == \"\"){ //conditional statement using the sent back information\n\n              makeList(response.data)\n                setResponse(\"User was not found\") //tells the page that a user was not found\n             }else{ \n                makeList(response.data) //makes the list for the user that stores all the information received from backend\n                setResponse(\"User Found\") //tells the page that a user was found\n            }\n        });\n    }\n\n        //update user function\n        const updateUser = () =>{\n\n            if(Response == \"\" || Response == \"User updated\"){\n                setResponse(\"Please find a user first\")\n                return\n            }\n            //setting userID\n          setUserID(UserID)\n      \n    \n            \n            \n        \n            //api call to update users\n            //sends all the information to backend for db\n            Axios.post(\"/api/admin/user/update\",{\n\n                email:Email,\n                firstname:FirstName,\n                lastname:LastName,\n                phone:Phone,\n                address:Address,\n                password:Password,\n                userID:UserID\n\n            })\n                setResponse(\"User Updated\")\n        }\n\n\n    return(\n\n      \n        <div className = 'inputs'>\n            <h1>email of user</h1>\n            <input  \n                type=\"text\"\n                name=\"InEmail\"\n                onChange={(e)=> {\n                    setInEmail(e.target.value)\n                }}/>\n\n\n\n            <button onClick ={findUser}>Find</button>\n                <label>{Response}</label>\n\n                {UserList.map((val,key)=> {\n      return (\n        <div className = \"UserInfo\" key = {key}>\n        <label style={{fontSize: '15px'}}>\n          Email: {val.user_email} \n          <br/>\n          Name: {val.user_first_name} {val.user_last_name}\n          <br/>\n          Phone: {val.user_phone}\n          <br/>\n          Address: {val.user_address}\n          <br/>\n          Password: {val.password}\n          \n        </label>\n        </div>\n      );\n    })}\n            <h1>Email</h1>\n                <input\n                type = \"text\"\n                name = \"Email\"\n                onChange={(e)=>{\n                    setEmail(e.target.value)\n                }}/>\n            <h1>First Name</h1>\n            <input\n                type = \"text\"\n                name = \"Firstname\"\n                onChange={(e)=>{\n                    setFirstName(e.target.value)\n                }}/>\n            <h1>Last Name</h1>\n            <input\n                type = \"text\"\n                name = \"Lastname\"\n                onChange={(e)=>{\n                    setLastName(e.target.value)\n                }}/>\n            <h1>Phone</h1>\n            <input\n                type = \"text\"\n                name = \"Phone\"\n                onChange={(e)=>{\n                    setPhone(e.target.value)\n                }}/>\n            <h1>Address</h1>\n            <input\n                type = \"text\"\n                name = \"Address\"\n                onChange={(e)=>{\n                    setAddress(e.target.value)\n                }}/>\n            <h1>password</h1>\n            <input\n                type = \"text\"\n                name = \"Password\"\n                onChange={(e)=>{\n                    setPassword(e.target.value)\n                }}/>\n\n                <button onClick ={updateUser}>Update</button>\n\n         \n        </div>        \n\n        \n\n    );\n\n\n      \n\n};\n\n\n\nexport default ModifyUser","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx",["137","138"],"import React, {useState,useEffect} from \"react\";\nimport Axios from 'axios';\nimport './Register.css'\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\n\nfunction Register(){\n\n    const [frontEmail, setEmail] = useState(\"\")\n    const [frontFirst, setFirst] = useState(\"\")\n    const [frontLast, setLast] = useState(\"\")\n    const [frontPW, setPW] = useState(\"\")\n    const [frontConfirm, setConfirm] = useState(\"\")\n    const [frontAddress, setAddress] = useState(\"\")\n    const [frontNumber, setNumber] = useState(\"\")\n\n    let navigate = useNavigate();\n\n    const submitInfo = () =>{\n        if(frontConfirm === frontPW){\n            Axios.post(\"/api/register/insert\",{\n            first: frontFirst,\n            last: frontLast,\n            email: frontEmail,\n            address: frontAddress,\n            number: frontNumber,\n            password : frontPW,\n            });\n\n            alert(\"Thank you for registering \", frontFirst, \"!\")\n            navigate(\"/Login\")\n        }else{\n            alert(\"The passwords do not match, please check and try again\")\n        }\n    }\n\n   \n    \n    \n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                        <span className=\"input_label\" >User Email:</span>\n                        <input \n                            //value={item_id} \n                            onChange={event => setEmail(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <span className=\"input_label\">First Name:</span>\n                        <input \n                            //value={item_type} \n                            onChange={event => setFirst(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\">Last Name:</span>\n                        <input \n                            //value={item_name} \n                            onChange={event => setLast(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\" >Phone Number:</span>\n                        <input \n                            id=\"phoneNumber\" \n                            maxLength={16}\n                            //value={item_description} \n                            onChange={event => setNumber(event.target.value)}\n                            className=\"item_input\"\n                            placeholder=\"INPUT NUMBERS ONLY\"\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >User Address:</span>\n                        <input \n                            //value={item_price} \n                            onChange={event => setAddress(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Address\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Password:</span>\n                        <input \n                            //value={item_stock} \n                            onChange={event => setPW(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Confirm Password:</span>\n                        <input \n                            //value={item_sale} \n                            onChange={event => setConfirm(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n\n    /*\n    return(\n        <div className =\"Register\"> <h1>Register</h1>\n        <div className ='input'>\n            <label> First Name</label>\n            <input\n                type=\"text\"\n                name=\"frontName\"\n                onChange={(e)=> {\n                    setName(e.target.value)\n                }}/>\n                <label>Last Name</label>\n            <input\n                type=\"text\"\n                name=\"frontLast\"\n                onChange={(e)=> {\n                    setLast(e.target.value)\n                }}/>\n\n                <label>Phone Number</label>\n            <input\n                type=\"text\"\n                name=\"frontNumber\"\n                onChange={(e)=> {\n                    setNumber(e.target.value)\n                }}/>\n               \n\n            <label>Email</label>\n            <input\n                type=\"text\"\n                name=\"frontEmail\"\n                onChange={(e)=> {\n                    setEmail(e.target.value)\n                }}/>\n\n            <label>Address</label>\n            <input\n                type=\"text\"\n                name=\"frontAddress\"\n                onChange={(e)=> {\n                    setAddress(e.target.value)\n                }}/>\n\n            <label>Password</label>\n            <input\n                type=\"password\"\n                name=\"frontPW\"\n                onChange={(e)=> {\n                    setPW(e.target.value)\n                }}/>\n\n            <label>Confirm Password</label>\n            <input\n                type=\"password\"\n                name=\"frontConfirm\"\n                onChange={(e)=> {\n                    setConfirm(e.target.value)\n                }}/>\n            \n            <button onClick ={submitInfo}>Register</button>\n\n\n            \n            </div>\n           \n        </div>\n    );\n    */\n\n};\n\nexport default Register\n",{"ruleId":"139","severity":1,"message":"140","line":16,"column":8,"nodeType":"141","messageId":"142","endLine":16,"endColumn":14},{"ruleId":"139","severity":1,"message":"143","line":18,"column":50,"nodeType":"141","messageId":"142","endLine":18,"endColumn":61},{"ruleId":"139","severity":1,"message":"144","line":18,"column":63,"nodeType":"141","messageId":"142","endLine":18,"endColumn":69},{"ruleId":"139","severity":1,"message":"145","line":32,"column":12,"nodeType":"141","messageId":"142","endLine":32,"endColumn":19},{"ruleId":"139","severity":1,"message":"146","line":34,"column":11,"nodeType":"141","messageId":"142","endLine":34,"endColumn":21},{"ruleId":"139","severity":1,"message":"147","line":40,"column":11,"nodeType":"141","messageId":"142","endLine":40,"endColumn":16},{"ruleId":"139","severity":1,"message":"148","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":14},{"ruleId":"139","severity":1,"message":"149","line":5,"column":10,"nodeType":"141","messageId":"142","endLine":5,"endColumn":18},{"ruleId":"139","severity":1,"message":"150","line":12,"column":12,"nodeType":"141","messageId":"142","endLine":12,"endColumn":23},{"ruleId":"139","severity":1,"message":"151","line":12,"column":25,"nodeType":"141","messageId":"142","endLine":12,"endColumn":39},{"ruleId":"139","severity":1,"message":"152","line":13,"column":12,"nodeType":"141","messageId":"142","endLine":13,"endColumn":25},{"ruleId":"139","severity":1,"message":"153","line":13,"column":27,"nodeType":"141","messageId":"142","endLine":13,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":23,"column":7,"nodeType":"156","endLine":23,"endColumn":9,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":46,"column":37,"nodeType":"160","messageId":"161","endLine":46,"endColumn":39},{"ruleId":"158","severity":1,"message":"159","line":65,"column":35,"nodeType":"160","messageId":"161","endLine":65,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":78,"column":35,"nodeType":"160","messageId":"161","endLine":78,"endColumn":37},{"ruleId":"158","severity":1,"message":"159","line":91,"column":35,"nodeType":"160","messageId":"161","endLine":91,"endColumn":37},{"ruleId":"162","severity":1,"message":"163","line":153,"column":23,"nodeType":"164","messageId":"165","endLine":153,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":182,"column":48,"nodeType":"164","messageId":"165","endLine":182,"endColumn":50},{"ruleId":"162","severity":1,"message":"163","line":184,"column":47,"nodeType":"164","messageId":"165","endLine":184,"endColumn":49},{"ruleId":"139","severity":1,"message":"166","line":1,"column":26,"nodeType":"141","messageId":"142","endLine":1,"endColumn":35},{"ruleId":"139","severity":1,"message":"149","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":18},{"ruleId":"139","severity":1,"message":"167","line":20,"column":9,"nodeType":"141","messageId":"142","endLine":20,"endColumn":17},{"ruleId":"139","severity":1,"message":"149","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":18},{"ruleId":"139","severity":1,"message":"168","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":13},{"ruleId":"139","severity":1,"message":"167","line":23,"column":9,"nodeType":"141","messageId":"142","endLine":23,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":29,"column":7,"nodeType":"156","endLine":29,"endColumn":9,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"159","line":37,"column":32,"nodeType":"160","messageId":"161","endLine":37,"endColumn":34},{"ruleId":"139","severity":1,"message":"170","line":97,"column":11,"nodeType":"141","messageId":"142","endLine":97,"endColumn":18},{"ruleId":"139","severity":1,"message":"149","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":18},{"ruleId":"139","severity":1,"message":"171","line":16,"column":10,"nodeType":"141","messageId":"142","endLine":16,"endColumn":22},{"ruleId":"139","severity":1,"message":"172","line":29,"column":9,"nodeType":"141","messageId":"142","endLine":29,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":31,"column":23,"nodeType":"164","messageId":"165","endLine":31,"endColumn":25},{"ruleId":"139","severity":1,"message":"173","line":51,"column":9,"nodeType":"141","messageId":"142","endLine":51,"endColumn":19},{"ruleId":"139","severity":1,"message":"149","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"174","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"175","line":24,"column":12,"nodeType":"141","messageId":"142","endLine":24,"endColumn":16},{"ruleId":"139","severity":1,"message":"176","line":24,"column":17,"nodeType":"141","messageId":"142","endLine":24,"endColumn":24},{"ruleId":"154","severity":1,"message":"177","line":30,"column":5,"nodeType":"141","endLine":30,"endColumn":14,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"163","line":32,"column":21,"nodeType":"164","messageId":"165","endLine":32,"endColumn":23},{"ruleId":"158","severity":1,"message":"159","line":33,"column":26,"nodeType":"160","messageId":"161","endLine":33,"endColumn":28},{"ruleId":"162","severity":1,"message":"179","line":49,"column":22,"nodeType":"164","messageId":"165","endLine":49,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":50,"column":18,"nodeType":"164","messageId":"165","endLine":50,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":53,"column":22,"nodeType":"164","messageId":"165","endLine":53,"endColumn":24},{"ruleId":"162","severity":1,"message":"163","line":56,"column":21,"nodeType":"164","messageId":"165","endLine":56,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":59,"column":18,"nodeType":"164","messageId":"165","endLine":59,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":62,"column":20,"nodeType":"164","messageId":"165","endLine":62,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":65,"column":21,"nodeType":"164","messageId":"165","endLine":65,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":83,"column":29,"nodeType":"164","messageId":"165","endLine":83,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":97,"column":25,"nodeType":"164","messageId":"165","endLine":97,"endColumn":27},{"ruleId":"162","severity":1,"message":"163","line":97,"column":43,"nodeType":"164","messageId":"165","endLine":97,"endColumn":45},{"ruleId":"139","severity":1,"message":"166","line":1,"column":25,"nodeType":"141","messageId":"142","endLine":1,"endColumn":34},{"ruleId":"139","severity":1,"message":"149","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":18},"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Switch' is defined but never used.","'adminId' is assigned a value but never used.","'cbUserInfo' is assigned a value but never used.","'users' is assigned a value but never used.","'Header' is defined but never used.","'Navigate' is defined but never used.","'constOrders' is assigned a value but never used.","'setConstOrders' is assigned a value but never used.","'displayOrders' is assigned a value but never used.","'setDisplayOrders' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["180"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'axios' is defined but never used.",["181"],"'loading' is assigned a value but never used.","'responseText' is assigned a value but never used.","'submitInfo' is assigned a value but never used.","'goRegister' is assigned a value but never used.","'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["182"],"Expected '!==' and instead saw '!='.",{"desc":"183","fix":"184"},{"desc":"183","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [fetchData]",{"range":"188","text":"189"},{"range":"190","text":"189"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"191","text":"192"},[753,755],"[fetchData]",[913,915],[2065,2065],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]"]