[{"/home/trey/Documents/aws/ui/frontend/src/index.jsx":"1","/home/trey/Documents/aws/ui/frontend/src/components/store/store.js":"2","/home/trey/Documents/aws/ui/frontend/src/app.jsx":"3","/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js":"4","/home/trey/Documents/aws/ui/frontend/src/components/action/action.js":"5","/home/trey/Documents/aws/ui/frontend/src/components/home/home.js":"6","/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx":"7","/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx":"8","/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx":"9","/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx":"10","/home/trey/Documents/aws/ui/frontend/src/components/Cart/Cart.jsx":"11","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx":"12","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx":"13","/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx":"14","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx":"15","/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx":"16","/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx":"17","/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx":"18","/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx":"19","/home/trey/Documents/aws/ui/frontend/src/components/Orders/Orders.jsx":"20","/home/trey/Documents/aws/ui/frontend/src/components/Discounts/Discounts.jsx":"21","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx":"22"},{"size":334,"mtime":1650194581641,"results":"23","hashOfConfig":"24"},{"size":212,"mtime":1650194581641,"results":"25","hashOfConfig":"24"},{"size":3642,"mtime":1650194903583,"results":"26","hashOfConfig":"24"},{"size":272,"mtime":1650194581641,"results":"27","hashOfConfig":"24"},{"size":117,"mtime":1650194581645,"results":"28","hashOfConfig":"24"},{"size":2592,"mtime":1650194581645,"results":"29","hashOfConfig":"24"},{"size":1292,"mtime":1650194581641,"results":"30","hashOfConfig":"24"},{"size":782,"mtime":1650194581645,"results":"31","hashOfConfig":"24"},{"size":1793,"mtime":1650194581645,"results":"32","hashOfConfig":"24"},{"size":1718,"mtime":1650194581645,"results":"33","hashOfConfig":"24"},{"size":7095,"mtime":1650453237993,"results":"34","hashOfConfig":"24"},{"size":10295,"mtime":1650194581645,"results":"35","hashOfConfig":"24"},{"size":6340,"mtime":1650194581645,"results":"36","hashOfConfig":"24"},{"size":3860,"mtime":1650194581645,"results":"37","hashOfConfig":"24"},{"size":8391,"mtime":1650457633156,"results":"38","hashOfConfig":"24"},{"size":2854,"mtime":1650194581645,"results":"39","hashOfConfig":"24"},{"size":2713,"mtime":1650194581645,"results":"40","hashOfConfig":"24"},{"size":1649,"mtime":1650194581641,"results":"41","hashOfConfig":"24"},{"size":7716,"mtime":1650453237993,"results":"42","hashOfConfig":"24"},{"size":1694,"mtime":1650456857118,"results":"43","hashOfConfig":"24"},{"size":5025,"mtime":1650456066197,"results":"44","hashOfConfig":"24"},{"size":11078,"mtime":1650456667074,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbqbax",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},"/home/trey/Documents/aws/ui/frontend/src/index.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/store/store.js",[],"/home/trey/Documents/aws/ui/frontend/src/app.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/reducer/reducer.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/action/action.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/home/home.js",[],"/home/trey/Documents/aws/ui/frontend/src/components/AboutUs/AboutUs.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/HomeSection/HomeSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/ContactSection/ContactSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Footer/Footer.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Cart/Cart.jsx",["98","99","100","101","102","103","104","105"],"import React, {useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport './Cart.css'\n\nconst Cart = ({uid, uname}) =>{ \n\n    let cart_item_details = []\n    let temp_cart = []\n    const [discountCode, setDiscountCode] = useState()\n    const [usedDiscount, setUsedDiscount] = useState(false);\n    const [isLoading, setLoading] = useState(true);\n    const [cart, setCart] = useState(null);\n    const [cartDetails, setDetails] = useState(null);\n    const [empty, setEmpty] = useState(true);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        fetchCart(); \n    },[]);\n\n\n    const fetchCart = () => {\n        let allItems = [] //get temp list of all items in inventory\n        let total = 0\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                items.map(item =>{\n                    allItems.push(item)\n                })\n            }\n        );\n\n        Axios.post(\"/api/get/cart\",{\n            id : uid\n        }).then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data)); //get items in the user's cart\n                setCart(items); \n                console.log(\"Cart is\", items);\n\n                //get item details for the items in the cart\n                items.map(item => {\n                    setEmpty(false);\n                    temp_cart.push(item);\n                    allItems.map(allItem => {\n                        if(allItem.item_id === item.item_id){\n                            let price = allItem.item_price\n                            if(allItem.item_onsale == 1){\n                                price = allItem.item_saleprice\n                            }\n                            total += (price * item.item_qty)\n                            cart_item_details.push(allItem); //add item details to list\n                        }\n                    })        \n                })\n                setDetails(cart_item_details);\n                setTotal(total)\n\n                loaded();\n            }\n        );\n    }\n\n    const loaded = () => {\n        setLoading(false)\n    }\n    const loading = () => {\n        setLoading(true)\n    }\n\n    const checkout = () => {\n       loading();\n       console.log(\"Cart items\", cart);\n       var obj = {}\n       cart.map(item =>{\n            var key = item.item_id\n            obj[key] = item.item_qty\n       })\n       console.log(\"Objects are\", obj);\n       loaded();\n    }\n\n\n    const applyDiscount = () => {\n        if(usedDiscount){\n            alert(\"Sorry, you can only use one discount code per order\");\n        }else{\n            Axios.post('/api/get/discount', {\n                code: discountCode\n            }).then((response) => {\n                loading();\n                let temp = JSON.parse(JSON.stringify(response.data));\n                temp = temp[0].discount_percent / 100\n                console.log(\"new discount is\", temp);\n                let new_total = total * (1-temp)\n                console.log(\"new total is\", new_total);\n                setTotal(new_total);\n                loaded();\n            })\n            setUsedDiscount(true);\n        }\n    }\n\n    if(isLoading){\n        return <h1 className=\"heading\"> FETCHING<span>DATA</span></h1>\n    }else if(uid == null){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }else{\n        return (\n            <div className=\"cart_item\">\n                    <h1 className=\"heading\"> {uname}'s <span> CART </span></h1>\n                    <div className=\"cart_page\">\n    \n                        <div className=\"logo\">\n                            <img className=\"cart_logo\" src=\"./images/logo.png\" alt=\"\" />\n                        </div>\n    \n                        <div className=\"app-container\">\n                        <table>\n                            <thead className=\"cart_header\">\n                                <tr>\n                                    <th>Item</th>\n                                    <th>Price</th>\n                                    <th>Quantity</th>\n                                </tr>\n                            </thead>\n                                {cartDetails.map(d_item => {\n                                    console.log(\"loading\", d_item)\n                                    let price = d_item.item_price\n                                    if(d_item.item_onsale == 1){\n                                        price = d_item.item_saleprice\n                                    }\n                                    return (\n                                        <>\n                                            <tr className=\"cart_header\">\n                                                <td>{d_item.item_name}</td>\n                                            </tr>\n                                            <tr className=\"cart_header\">\n                                                <td>${price}</td>\n                                            </tr>\n                                            {cart.map(item => {\n                                                if(item.item_id === d_item.item_id){\n                                                    return(\n                                                        <>\n                                                            <tr className=\"cart_header\">\n                                                                <td>{item.item_qty}</td>\n                                                            </tr>\n                                                        </>\n                                                    )\n                                                }\n                                            })}\n                                        </>\n                                    )\n                                    })\n                                }\n                            </table>\n                        </div>\n                        {empty && \n                           <div>\n                               Cart is Empty\n                            </div> \n                        }\n                        <span className=\"cart_label\" >Discount Code</span>\n                        <input \n                            onChange={event => setDiscountCode(event.target.value)}\n                            className=\"cart_input\" \n                            type=\"text\"\n                            placeholder=\"XXXXX\"\n                        />\n                            <button className=\"btn\" type=\"submit\" onClick={applyDiscount} >Apply Discount</button>\n                        <span className=\"cart_label\" >Total: ${total.toFixed(2)}</span>\n                            <button className=\"btn\" type=\"submit\" onClick={checkout} >Checkout</button>\n                        {/*</form>*/}\n                    </div>\n            </div>\n        );  \n    }\n}\n\nexport default Cart;","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/MenuSection.jsx",["106","107","108","109","110","111","112","113","114","115","116","117"],"import React, {useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport './MenuSection.css'\nimport { useNavigate} from \"react-router-dom\";\n\nfunction MenuSection ({uid, admin}) {\n\n    let tempInventory = [];\n    const [constInventory, setConstInventory] = useState();\n    const [displayInventory, setDisplayInventory] = useState();\n    const [isLoading, setLoading] = useState(true);\n    const [searchValue, setSearch] = useState(\"\");\n    const [cart, setCart] = useState();\n    const imageBase = './images/'\n\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        Axios.get(\"/api/get/inventory\").then( //calls the backend server.js with this api command\n            (response) => {\n                let items = JSON.parse(JSON.stringify(response.data));\n                setDisplayInventory(items);\n                setConstInventory(items);\n                loaded();\n            }\n        );\n        if(uid != null){\n            Axios.post(\"api/getcart\", {\n                id : uid\n            }).then((response) => \n                {\n                    let tempcart = JSON.parse(JSON.stringify(response.data));\n                    setCart(tempcart);\n                }\n            );\n        }\n    }\n\n    const search = () => {\n        tempInventory = []; //reset list\n        setDisplayInventory(constInventory);//reset display inventory\n        loading();\n        var searchInput = searchValue;\n\n        //check for whitespace only\n        if (/^\\s*$/.test(searchInput)){\n            loaded();\n            return;\n        }else{\n            constInventory.map(item => {\n                if(item.item_name.toLowerCase().includes(searchInput.toLowerCase()) || item.item_description.toLowerCase().includes(searchInput.toLowerCase())){\n                    tempInventory.push(item);\n                }else{\n                }\n            });\n        }\n        //set display to the filtered list\n        setDisplayInventory(tempInventory);\n        loaded();\n    };\n\n    const sortByName = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_name > b.item_name) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByPrice = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_price > b.item_price) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n\n\n    const sortByAvailability = () => {\n        //reset the temp inventory list\n        tempInventory = [];\n        //add all current items to list\n        displayInventory.map(item => {\n            tempInventory.push(item);\n        });\n\n        tempInventory.sort((a,b) => (a.item_stock > b.item_stock) ? 1 : -1);\n        setDisplayInventory(tempInventory);\n    }\n   \n   \n    const addToCart = (item) => {\n        let temp_cart = [];\n\n        if(uid == null){\n            alert(\"You must login to add to your cart\");\n        }else{\n            let actual_price = 0\n            if(item.item_onsale == 1){\n                actual_price = item.item_sale_price;\n            }else{\n                actual_price = item.item_price;\n            }\n\n            //set default cart states\n            let empty = true \n            let item_exists = false\n\n            //put everything into a temp cart to modify\n            cart.map(cart_item => {\n                empty = false; //cart was not empty\n                temp_cart.push(cart_item);\n            });\n\n            \n            //create the new item\n            let new_item = {\n                \"user_id\" : uid,\n                \"item_id\" : item.item_id,\n                \"item_qty\" : 1\n            }\n\n            temp_cart.map(temp => {\n                if(temp.item_id === item.item_id){\n                   item_exists = true  //item already existed\n                   temp.item_qty += 1\n                   Axios.post(\"api/updateCartQty\", {\n                      item_id : item.item_id,\n                      qty : temp.item_qty\n                   });\n                }\n            })\n\n            if(!item_exists || empty){\n                Axios.post(\"api/addToCart\",{\n                    uid : uid,\n                    id : item.item_id,\n                    qty : 1\n                });\n                temp_cart.push(new_item) //do this to save local state\n            }\n            \n            setCart(temp_cart)\n            /*\n            Axios.post(\"api/addtocart\", {\n                user : uid,\n                id : item_id,\n                price : actual_price\n            });\n            */\n            alert(\"Added to cart!\");\n        }\n    }\n\n    const deleteItem = (item_id) => {\n        console.log(\"Item\", item_id);\n    }\n\n    const createItem = () => {\n        navigate(\"/createItem\");\n    }\n\n    const modifyItem = (item_id) => {\n        navigate(\"/modifyItem\" + item_id);\n    }\n\n    const loading = () =>{\n        setLoading(true);\n    }\n\n    const loaded = () => {\n        setLoading(false);\n    }\n\n    if (isLoading){\n        //returns only this until data is done loading\n        return <div className=\"App\">Loading Data...</div>;\n    }\n\n    //once data is done loading, we do this!\n    return (\n        <>\n            <section className=\"menu\" id=\"Menu\">\n                {/* OLD ONE <h1 className=\"heading\"> {selector[3].sectionName[0]} <span>{selector[3].sectionName[1]}</span> </h1>*/}\n                <h1 className=\"heading\"> OUR <span> PRODUCTS </span> </h1>\n                <div class=\"search\">\n                    <div className=\"search_head\" for=\"search\"> Search Inventory </div>\n                    <input \n                        value={searchValue} \n                        onChange={event => setSearch(event.target.value)}\n                        className=\"search_input\"\n                        type=\"search\" \n                        id=\"search\"\n                    />\n                    <button className=\"btn\" type=\"submit\" onClick={search}>Submit</button>\n                \n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByName}>Sort By Name</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByAvailability}>Sort By Availability</button>\n                </div>\n                <div class=\"box\">\n                    <button className=\"btn\" type=\"submit\" onClick={sortByPrice}>Sort By Price</button>\n                </div>\n                {admin == 1 &&\n                    <div class=\"box\">\n                        <button className=\"btn\" type=\"submit\" onClick={createItem}>Create Item</button>\n                    </div> \n                }\n                </div>\n                <div className=\"box-container\">\n                    {displayInventory.map(item => \n                        {\n                            var crossout = \"\";\n                            var price;\n                            if(item.item_onsale){\n                                price = item.item_saleprice.toFixed(2);\n                                crossout = item.item_price.toFixed(2);\n                            }else{\n                                price = item.item_price.toFixed(2);\n                            }\n                            if(item.item_stock > 0){\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${price}<span>{crossout}</span></div>\n                                        <div className=\"price\">Available: {item.item_stock} </div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/* if the user is admin, have option to modify and delete the item\"*/}\n                                        { admin == 1 ? <button className=\"btn\" type=\"Modify\" onClick={() => modifyItem(item.item_id)} >Modify Item</button> :\n                                            <button className=\"btn\" type=\"submit\" onClick={() => addToCart(item)} >Add to Cart</button>}\n                                        { admin == 1 && <button className=\"btn\" type=\"submit\" onClick={() => deleteItem(item.item_id)} >Delete Item</button>}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }else{\n                                return( \n                                    <div className=\"box\">\n                                        <img src={imageBase + item.item_image} alt=\"\" />\n                                        <h3>{item.item_name}</h3>\n                                        <div className=\"price\">${item.item_price}<span> ${item.item_saleprice}</span></div>\n                                        <div className=\"price\">Available: {item.item_stock} </div>\n                                        <div className=\"desc\">{item.item_description}</div>\n                                        <div className=\"text\">Out of stock!</div>\n                                        <button className=\"btnDisabled\" type=\"submit\">Add to Cart</button>\n                                        {/*<div className=\"price\">${item.item_description}</div>*/}\n                                        {/*OLD ADD TO CART<a href=\"#\" className=\"btn\">{selector[3].menuBtn}</a>*/}\n                                    </div>\n                                )\n                            }\n                        }\n                    )}\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default MenuSection\n","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/CreateItem.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Header/Header.jsx",["118","119"],"import React from 'react'\nimport { Link } from 'react-router-dom';\nimport './Header.css'\n\nconst NavBar = ({u_name ,uid, admin, signOut}) => {\n    const handleMenuBtn = () => {\n    let navbar = document.querySelector('.navbar');\n    let searchForm = document.querySelector('.search-form');\n    navbar.classList.toggle('active');\n    searchForm.classList.remove('active');\n    }\n\n    const handleSearchBox = () => {\n        let navbar = document.querySelector('.navbar');\n        let searchForm = document.querySelector('.search-form');\n\n        searchForm.classList.toggle('active');\n        navbar.classList.remove('active');\n    }\n\n\n    return (\n        <>\n            <div className=\"header\">\n                {/* eslint-disable-next-line */}\n                <div className=\"logo\">\n                    <img src={'./images/logo.png'} alt=\"\" /> \n                </div>\n\n                <nav className=\"navbar\">\n                    <Link style={{textDecoration: 'none'}} to=\"/\">\n                        <span className=\"header__navItems\">Home</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/menu\">\n                        <span className=\"header_navItems\">Products</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/reviews\">\n                        <span className=\"header__navItems\">Reviews</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/about\">\n                        <span className=\"header__navItems\">About</span>\n                     </Link>\n                    <Link style={{textDecoration: 'none'}} to=\"/contact\">\n                        <span className=\"header_navItems\">Contact</span>\n                     </Link>\n                    {/* User Not Signed In */}\n                    {uid == null &&\n                        <Link style={{textDecoration: 'none'}} to=\"/login\">\n                        <span className=\"header__navItems\">Log In</span>\n                        </Link>\n                    }\n                    {/* User is an admin */}\n                    {admin === 1 &&\n                        <Link style={{textDecoration: 'none'}} to=\"/admin\">\n                            <span className=\"header__navItems\">Admin</span>\n                        </Link>\n                    }\n                    {uid != null && \n                        <Link className=\"fas fa-shopping-cart\" style={{textDecoration: 'none'}} to=\"/cart\"></Link>\n                    }\n\n                </nav>\n                {/*\n                    <div>\n                        <h1 className=\"heading\"> Welcome {u_name} </h1>\n                    </div>\n                }\n                */}\n                {uid != null &&\n                    <div>\n                        <button className=\"btn\" type=\"submit\" onClick={signOut}>Sign Out</button>\n                    </div> \n                }\n                <div className=\"icons\">\n                    {uid != null &&\n                        <h1 className=\"heading\"> {u_name} </h1>\n                    }\n                    {/* \n                    <div className=\"fas fa-search\" id=\"search-btn\" onClick={handleSearchBox}></div>\n                    <div className=\"fas fa-bars\" id=\"menu-btn\" onClick={handleMenuBtn}></div>\n                    <div className=\"fas fa-user\" id =\"user-btn\"></div>\n                    <div className=\"fas fa-shopping-cart\" id=\"cart-btn\" onClick={handleCart}></div>\n                    */}\n                </div>\n\n                <div className=\"search-form\">\n                    <input type=\"search\" id=\"search-box\" placeholder=\"Search\" />\n                    <label htmlFor=\"search-box\" className=\"fas fa-search\"></label>\n                </div>\n                \n\n\n            </div>\n            \n        </>\n    )\n}\n\nexport default NavBar\n","/home/trey/Documents/aws/ui/frontend/src/components/MenuSection/ModifyItem.jsx",["120","121","122","123","124","125"],"/home/trey/Documents/aws/ui/frontend/src/components/ReviewSection/ReviewSection.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Login/Login.jsx",["126","127","128"],"\r\n\r\nimport * as React from 'react';\r\nimport {useState,useEffect} from \"react\";\r\nimport './Login.css';\r\nimport Axios from 'axios';\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\n\r\nconst Login = ({uid, admin, onLogin}) => {\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [frontName, setName] = useState(\"\");\r\n  const [frontPassword, setPassword] = useState(\"\");\r\n\r\n  const goRegister = () => {\r\n    navigate(\"/Register\")\r\n  }\r\n  \r\n  const loginCheck = () =>{\r\n    Axios.post(\"/api/login/auth\",{\r\n      PassName : frontName,\r\n      PassPW : frontPassword,\r\n    }).then((response) => {\r\n      if (response.data === \"USERERR\"){\r\n        alert(\"User not found, please register with us!\")\r\n      }else if (response.data === \"PASSERR\"){\r\n        alert(\"Incorrect combination of username and password\");\r\n      }else{\r\n          console.log(\"HERE\");\r\n          let users = JSON.parse(JSON.stringify(response.data));\r\n          console.log(users);\r\n          console.log(users[0].user_id, users[0].user_admin)\r\n          onLogin(users[0].user_first_name, users[0].user_id, users[0].user_admin);\r\n          navigate(\"/home\");\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  //this is just for debugging\r\n  const handleSubmit = (event) =>{\r\n    event.preventDefault();\t\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h1 className=\"heading\"> Log <span> In </span></h1>\r\n      <div className=\"login__page\">\r\n\r\n        <div className=\"logo\">\r\n          <img className=\"login__logo\" src=\"./images/logo.png\" alt=\"\" />\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span className=\"login__email\" >Email Address:</span>\r\n          <input \r\n            value={frontName} \r\n            onChange={event => setName(event.target.value)}\r\n            className=\"login__input\" \r\n          />\r\n\r\n          <span className=\"login__password\">Password:</span>\r\n          <input \r\n            value={frontPassword} \r\n            onChange={event => setPassword(event.target.value)}\r\n            className=\"login__input\" \r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            required \r\n          />\r\n\r\n          <button className=\"btn\" type=\"submit\" onClick={loginCheck} >Log In</button>\r\n          <button className=\"btn\" type=\"submit\" onClick={goRegister} >Register</button>\r\n          <span className=\"login__head2\">Sign Up for emails to get special news and offers</span>\r\n          <span className=\"login__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/home/trey/Documents/aws/ui/frontend/src/components/Admin/Admin.jsx",[],"/home/trey/Documents/aws/ui/frontend/src/components/Register/Register.jsx",["129","130"],"import React, {useState,useEffect} from \"react\";\nimport Axios from 'axios';\nimport './Register.css'\nimport { Navigate, useNavigate } from \"react-router-dom\";\n\n\n\nfunction Register(){\n\n    const [frontEmail, setEmail] = useState(\"\")\n    const [frontFirst, setFirst] = useState(\"\")\n    const [frontLast, setLast] = useState(\"\")\n    const [frontPW, setPW] = useState(\"\")\n    const [frontConfirm, setConfirm] = useState(\"\")\n    const [frontAddress, setAddress] = useState(\"\")\n    const [frontNumber, setNumber] = useState(\"\")\n\n    let navigate = useNavigate();\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\n    const passwordRegex = /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/\n    const numberRegex = /^[0-9]+$/\n    const submitInfo = () =>{\n\n        if(!emailRegex.test(frontEmail)){\n            alert(\"Please enter a valid email address\")\n            return;\n        }\n        if(!passwordRegex.test(frontPW)){\n            alert(\"Please enter a valid password.\\nPasswords must contain 8 characters,1 upper case,1 lower case, 1 number, and 1 special character(!,@,#,$,%,etc)\")\n            return;\n        }\n        if(!numberRegex.test(frontNumber)){\n            alert(\"Please enter a valid number.\\nNo dashes, hyphens, or characters please.\")\n            return;\n        }\n\n        if(frontConfirm === frontPW){\n            Axios.post(\"/api/register/insert\",{\n            first: frontFirst,\n            last: frontLast,\n            email: frontEmail,\n            address: frontAddress,\n            number: frontNumber,\n            password : frontPW,\n            });\n\n            alert(\"Thank you for registering \", frontFirst, \"!\")\n            navigate(\"/Login\")\n        }else{\n            alert(\"The passwords do not match, please check and try again\")\n        }\n    }\n\n   \n    \n    \n    return (\n        <div className=\"create_item\">\n                <h1 className=\"heading\"> REGISTER <span>USER</span></h1>\n                <div className=\"create_page\">\n\n                    <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                    </div>\n\n                        <span className=\"input_label\" >User Email:</span>\n                        <input \n                            //value={item_id} \n                            onChange={event => setEmail(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Email\"\n                            required\n                        />\n\n                        <span className=\"input_label\">First Name:</span>\n                        <input \n                            //value={item_type} \n                            onChange={event => setFirst(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"First Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\">Last Name:</span>\n                        <input \n                            //value={item_name} \n                            onChange={event => setLast(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                            required \n                        />\n\n                        <span className=\"input_label\" >Phone Number:</span>\n                        <input \n                            id=\"phoneNumber\" \n                            maxLength={16}\n                            //value={item_description} \n                            onChange={event => setNumber(event.target.value)}\n                            className=\"item_input\"\n                            placeholder=\"INPUT NUMBERS ONLY\"\n                            required\n                        />\n\n\n                        <span className=\"input_label\" >User Address:</span>\n                        <input \n                            //value={item_price} \n                            onChange={event => setAddress(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Address\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Password:</span>\n                        <input \n                            //value={item_stock} \n                            onChange={event => setPW(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Password\"\n                            required\n                        />\n\n                        <span className=\"input_label\" >Confirm Password:</span>\n                        <input \n                            //value={item_sale} \n                            onChange={event => setConfirm(event.target.value)}\n                            className=\"item_input\" \n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            required\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={submitInfo} >Register</button>\n\n                        <span className=\"create__head2\">Sign Up for emails to get special news and offers</span>\n                        <span className=\"create__head3\">By signing up, you agree to our <span className=\"underlineHead3\">Privacy Policy</span> and <span className=\"underlineHead3\">Terms of Use</span></span>\n                    {/*</form>*/}\n\n                </div>\n        </div>\n    );  \n\n    /*\n    return(\n        <div className =\"Register\"> <h1>Register</h1>\n        <div className ='input'>\n            <label> First Name</label>\n            <input\n                type=\"text\"\n                name=\"frontName\"\n                onChange={(e)=> {\n                    setName(e.target.value)\n                }}/>\n                <label>Last Name</label>\n            <input\n                type=\"text\"\n                name=\"frontLast\"\n                onChange={(e)=> {\n                    setLast(e.target.value)\n                }}/>\n\n                <label>Phone Number</label>\n            <input\n                type=\"text\"\n                name=\"frontNumber\"\n                onChange={(e)=> {\n                    setNumber(e.target.value)\n                }}/>\n               \n\n            <label>Email</label>\n            <input\n                type=\"text\"\n                name=\"frontEmail\"\n                onChange={(e)=> {\n                    setEmail(e.target.value)\n                }}/>\n\n            <label>Address</label>\n            <input\n                type=\"text\"\n                name=\"frontAddress\"\n                onChange={(e)=> {\n                    setAddress(e.target.value)\n                }}/>\n\n            <label>Password</label>\n            <input\n                type=\"password\"\n                name=\"frontPW\"\n                onChange={(e)=> {\n                    setPW(e.target.value)\n                }}/>\n\n            <label>Confirm Password</label>\n            <input\n                type=\"password\"\n                name=\"frontConfirm\"\n                onChange={(e)=> {\n                    setConfirm(e.target.value)\n                }}/>\n            \n            <button onClick ={submitInfo}>Register</button>\n\n\n            \n            </div>\n           \n        </div>\n    );\n    */\n\n};\n\nexport default Register\n","/home/trey/Documents/aws/ui/frontend/src/components/Orders/Orders.jsx",["131","132","133"],"import React, {useState, useEffect } from 'react'\nimport {useNavigate } from \"react-router-dom\";\nimport Axios from 'axios'\n//import { useSelector } from 'react-redux'\nimport './Orders.css'\n\nfunction Orders({admin}){\n\n    let navigate = useNavigate();\n\n    const users = () => {\n        navigate(\"/ModifyUser\");\n    }\n    const discounts = () => {\n        navigate(\"/Discounts\")\n    }\n    const inventory = () => {\n        navigate(\"/Menu\")\n    }\n  \n\n\n    //redirect people who logout back to home\n    if(admin == null){\n        navigate('/home');\n    }\n\n    admin = 1; // REMOVE LATER\n    if(admin !== 1){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }\n\n\n    return(\n        <>\n        <div className=\"Orders\">\n                    <h1 className=\"heading\"> Admin Order <span>Portal</span></h1>\n                    <div className=\"create_page\">\n                        <div className=\"logo\">\n                            <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                        </div>\n                            <span className=\"input_label\" >Users</span>\n                            <button className=\"btn\" type=\"submit\" onClick={users} >Users</button>\n                            <span className=\"input_label\">Discounts</span>\n                            <button className=\"btn\" type=\"submit\" onClick={discounts} >Discounts</button>\n                            <span className=\"input_label\">Inventory</span>\n                            <button className=\"btn\" type=\"submit\" onClick={inventory} >Inventory</button>\n                    </div>\n            </div>\n        </>\n    )\n}\n  \nexport default Orders;","/home/trey/Documents/aws/ui/frontend/src/components/Discounts/Discounts.jsx",["134","135","136","137"],"import React, {useState,useEffect} from \"react\";\nimport \"./Discounts.css\";\nimport axios from \"axios\";\nimport { useNavigate} from \"react-router-dom\";\n\nfunction Discount ({admin}){\n    const[Code,setCode] = useState(\"\")\n    const[Percent,setPercent] = useState(\"\")\n    const [discountList, setDiscountList] = useState();\n    const [isLoading, setLoading] = useState(true)\n    const [loggedIn, setLoggedIn] = useState(true)\n\n    let navigate = useNavigate();\n    \n    useEffect(() => {\n        fetchData();\n    },[]);\n\n    const fetchData = () =>{\n        axios.post(\"/api/admin/discount/get\").then((response) =>\n        {\n            let items = JSON.parse(JSON.stringify(response.data));\n            setDiscountList(items);\n            loaded();\n        })\n    }\n    const loaded = () =>{\n        setLoading(false)\n    }\n    const loading = () => {\n        setLoading(true)\n    }\n\n    const addDiscount = () =>{\n        axios.post(\"/api/admin/discount/insert\",{\n            code:Code,\n            percent:Percent\n        })\n        loading();\n        fetchData();\n    }\n\n    const modifyDiscount = (id) => {\n        alert(\"Modified\");\n    }\n\n    const deleteDiscount = (id) => {\n        alert(\"Deleted\");\n    }\n\n    if(isLoading){\n        return <>Loading..</>\n    }\n\n    //Redirect people who logged out back to home\n    if(admin == null){\n            navigate('/home');\n    }\n    if(admin == 0){\n        return(\n            <h1 className=\"heading\"> UNAUTHORIZED<span>ACCESS</span></h1>\n        )\n    }else{\n        return (\n            <>\n            <div className=\"create_discount\">\n                    <h1 className=\"heading\"> Add <span>Discount</span></h1>\n                    <div className=\"create_page\">\n    \n                        <div className=\"logo\">\n                            <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                        </div>\n                            <span className=\"input_label\" >Discount Code</span>\n                            <input \n                                onChange={event => setCode(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Discount Code\"\n                                required\n                            />\n                            <span className=\"input_label\">Discount Amount:</span>\n                            <input \n                                onChange={event => setPercent(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Percent Amount\"\n                                required \n                            />\n                            <button className=\"btn\" type=\"submit\" onClick={addDiscount} >Create Discount</button>\n                    </div>\n            </div>\n    \n            <section className=\"menu\" id=\"Menu\">\n                <h1 className=\"heading\"> CURRENT <span> DISCOUNTS </span> </h1>\n                    <div className=\"box-container\">\n                        {discountList.map(discount => \n                            {\n                                return(\n                                    <div className=\"box\">\n                                        <h3>Code: {discount.discount_code}</h3>\n                                        <div className=\"code\">Amount: {discount.discount_percent}%</div>\n                                        <button className=\"btn\" type=\"Modify\" onClick={() => modifyDiscount(discount.discount_id)} >Modify Discount</button>\n                                        <button className=\"btn\" type=\"submit\" onClick={() => deleteDiscount(discount.discount_id)} >Delete Discount</button>\n                                    </div>\n                                )\n                            }\n                        )\n                        }\n                    </div>\n            </section>\n            </>\n        )\n    }\n\n   \n\n    /*\n    return(\n        <div>\n            {DiscountList.map((val,key)=> {\n      return (\n        <div className = \"DiscountInfo\" key = {key}>\n        <label style={{fontSize: '15px'}}>\n          Discount ID: {val.discount_id}   \n          <br/>\n          Discount code: {val.discount_code} \n          <br/>\n          Discount percent: {val.discount_percent}\n          <br/>\n        </label>\n        </div>\n      );\n    })}\n    <div>\n\n        <label>Add Discounts<br/></label>\n\n        <label>Code:</label>\n    <input  \n                type=\"text\"\n                name=\"Code\"\n                onChange={(e)=> {\n                    setCode(e.target.value)\n                }}/>\n    </div>\n\n        <label>Percent</label>\n        <input\n            type =\"test\"\n            name = \"Percent\"\n            onChange={(e) => {\n                setPercent(e.target.value)\n            }}/>\n\n            <button onClick ={addDiscount}>Add</button>\n        </div>\n\n    );\n            */\n}\n\nexport default Discount","/home/trey/Documents/aws/ui/frontend/src/components/ModifyUser/ModifyUser.jsx",["138","139","140","141","142","143","144"],"import React, {useState,useEffect} from \"react\";\nimport { useSelector } from 'react-redux'\nimport Axios from 'axios';\nimport './ModifyUser.css';\nimport { useNavigate } from \"react-router-dom\";\n\n\nfunction ModifyUser({admin}){\n    //setting all the needed states for intitial variables.\n    const [InEmail,setInEmail] = useState(\"\")\n    const [Email,setEmail] = useState(\"\")\n    const [Password,setPassword]= useState(\"\")\n    const [FirstName,setFirstName] = useState(\"\")\n    const [LastName,setLastName] = useState(\"\")\n    const [Phone,setPhone] = useState(\"\")\n    const [Address,setAddress] = useState(\"\")\n    const [OldEmail,setOldEmail] = useState(\"\")\n    const [OldPassword,setOldPassword]= useState(\"\")\n    const [OldFirstName,setOldFirstName] = useState(\"\")\n    const [OldLastName,setOldLastName] = useState(\"\")\n    const [OldPhone,setOldPhone] = useState(\"\")\n    const [OldAddress,setOldAddress] = useState(\"\")\n    const [UserID,setUserID] = useState(\"\")\n    const [Response,setResponse] = useState(\"\")\n    const [Test,setTest] = useState(\"\")\n\n    const emailRegex = /\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+.[A-Za-z]{2,4}\\b/\n    const passwordRegex = /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/\n    let navigate = useNavigate();\n\n    const [UserList, makeList] = useState([])\n\n    //populates the user info list whenever a user is found.\n    useEffect(() => {\n\n        if(Response === \"User Found\"){\n        UserList.map(val => {\n\n                  \n            setUserID(val.user_id)\n            setOldEmail(val.user_email)\n            setOldFirstName(val.user_first_name)\n            setOldLastName(val.user_last_name)\n            setOldAddress(val.user_address)\n            setOldPhone(val.phone)\n            setOldPassword(val.password)\n            \n           \n          });\n        }\n        \n       \n        if (Response !== \"User Updated\"){\n        if(Email == \"\"){\n            setEmail(OldEmail)\n        }\n        if(FirstName === \"\"){\n            setFirstName(OldFirstName)\n        }\n        if(LastName === \"\"){\n            setLastName(OldLastName)\n        }\n        if(Phone === \"\"){\n            setPhone(OldPhone)\n        }\n        if(Address === \"\"){\n            setAddress(OldAddress)\n        }\n        if(Password === \"\"){\n            setPassword(OldPassword)\n        }\n    }\n        \n    });\n\n\n\n    //finduser function, activated from the find button on the page\n    const findUser = () =>{\n\n\n        \n        if(!emailRegex.test(InEmail)){\n            alert(\"Please enter a valid email address\")\n            return;\n            \n        }\n       \n\n        //api call to admin user find location in backend\n        Axios.post(\"/api/admin/user/find\",{\n            //sends over the email to search from db in backend\n            email: InEmail\n            \n\n        }).then((response) => { //reading the information sent back from backend \n            if(response.data == \"\"){ //conditional statement using the sent back information\n                makeList(response.data)\n                alert(\"User could not be found\")\n                //setResponse(\"User was not found\") //tells the page that a user was not found\n            }else{ \n                \n                makeList(response.data) //makes the list for the user that stores all the information received from backend\n                //setResponse(\"User Found\") //tells the page that a user was found\n            }\n        });\n    }\n\n    //update user function\n    const updateUser = () =>{\n\n        if(Response === \"\" || Response === \"User updated\"){\n            setResponse(\"Please find a user first\")\n            return\n        }\n\n\n        \n        if(!emailRegex.test(Email)){\n            alert(\"Please enter a valid email address\")\n            return;\n            \n        }\n        if(!passwordRegex.test(Password)){\n            alert(\"Please enter a valid password\\nPassword must contain 8 characters, 1 upper case, 1 lower case, 1 number, and 1 special character.\")\n            return;\n        }\n        \n        //setting userID\n        setUserID(UserID)\n    \n        //api call to update users\n        //sends all the information to backend for db\n        Axios.post(\"/api/admin/user/update\",{\n\n            email:Email,\n            firstname:FirstName,\n            lastname:LastName,\n            phone:Phone,\n            address:Address,\n            password:Password,\n            userID:UserID\n\n        })\n        \n        setResponse(\"User Updated\")\n    }\n\n    if(admin == null){\n        navigate('/home');\n    }\n\n    return(\n        <div className =\"create_item\">\n            <h1 className = \"heading\">Modify<span>USER</span></h1>\n            <div className =\"create_page\">\n                <div className=\"logo\">\n                        <img className=\"create_logo\" src=\"./images/logo.png\" alt=\"\" />\n                </div>\n\n                <span className=\"input_label\" >Find Email:</span>\n                        <input \n                            //value={item_id} \n                            onChange={event => setInEmail(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Email\"\n                        />\n\n                        <button className=\"btn\" type=\"submit\" onClick={findUser} >Find</button>\n\n            </div>\n\n            <div className =\"create_item\">\n            <h1 className = \"heading\"><span>USER</span></h1>\n                <div className =\"create_page\">\n                {UserList.map((val,key)=> {\n                    return (\n                        <div className = \"UserInfo\" key = {key}>\n                        <label style={{fontSize: '15px'}}>\n                        Email: {val.user_email} \n                        <br/>\n                        Name: {val.user_first_name} {val.user_last_name}\n                        <br/>\n                        Phone: {val.user_phone}\n                        <br/>\n                        Address: {val.user_address}\n                        <br/>\n                        Password: {val.password}\n                        \n                        </label>\n                        </div>\n      );\n    })}\n                </div>\n            </div>\n\n            <div className=\"create_item\">\n                <h1 className = \"heading\">MODIFY</h1>\n                <div className = \"create_page\">\n                    <span className=\"input_label\" >Email</span>\n                            <input \n                                onChange={event => setEmail(event.target.value)}\n                                className=\"item_input\" \n                                type=\"text\"\n                                placeholder=\"Email\"\n                            />\n                            <span className=\"input_label\" >First Name</span>\n                        <input \n                            onChange={event => setFirstName(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"First Name\"\n                        />\n                        <span className=\"input_label\" >Last Name</span>\n                        <input \n                            onChange={event => setLastName(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Last Name\"\n                        />\n                        <span className=\"input_label\" >Phone</span>\n                        <input \n                            onChange={event => setPhone(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Phone\"\n                        />\n                        <span className=\"input_label\" >Address</span>\n                        <input \n                            onChange={event => setAddress(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Address\"\n                        />\n                        <span className=\"input_label\" >Password</span>\n                        <input \n                            onChange={event => setPassword(event.target.value)}\n                            className=\"item_input\" \n                            type=\"text\"\n                            placeholder=\"Password\"\n                        />\n\n                            <button className=\"btn\" type=\"submit\" onClick={updateUser} >Update</button>\n\n                </div>\n\n            </div>\n\n\n\n\n        </div>\n\n        \n    )\n\n    /*return(\n\n      \n        <div className = 'inputs'>\n            <h1>email of user</h1>\n            <input\n                className= \"item_input\"  \n                type=\"text\"\n                name=\"InEmail\"\n                placeholder=\"Email\"\n                onChange={(e)=> {\n                    setInEmail(e.target.value)\n                }}/>\n\n\n\n            <button onClick ={findUser}>Find</button>\n                <label>{Response}</label>\n\n                {UserList.map((val,key)=> {\n      return (\n        <div className = \"UserInfo\" key = {key}>\n        <label style={{fontSize: '15px'}}>\n          Email: {val.user_email} \n          <br/>\n          Name: {val.user_first_name} {val.user_last_name}\n          <br/>\n          Phone: {val.user_phone}\n          <br/>\n          Address: {val.user_address}\n          <br/>\n          Password: {val.password}\n          \n        </label>\n        </div>\n      );\n    })}\n            <h1>Email</h1>\n                <input\n                type = \"text\"\n                name = \"Email\"\n                onChange={(e)=>{\n                    setEmail(e.target.value)\n                }}/>\n            <h1>First Name</h1>\n            <input\n                type = \"text\"\n                name = \"Firstname\"\n                onChange={(e)=>{\n                    setFirstName(e.target.value)\n                }}/>\n            <h1>Last Name</h1>\n            <input\n                type = \"text\"\n                name = \"Lastname\"\n                onChange={(e)=>{\n                    setLastName(e.target.value)\n                }}/>\n            <h1>Phone</h1>\n            <input\n                type = \"text\"\n                name = \"Phone\"\n                onChange={(e)=>{\n                    setPhone(e.target.value)\n                }}/>\n            <h1>Address</h1>\n            <input\n                type = \"text\"\n                name = \"Address\"\n                onChange={(e)=>{\n                    setAddress(e.target.value)\n                }}/>\n            <h1>password</h1>\n            <input\n                type = \"text\"\n                name = \"Password\"\n                onChange={(e)=>{\n                    setPassword(e.target.value)\n                }}/>\n\n                <button onClick ={updateUser}>Update</button>\n\n         \n        </div>        \n\n        \n\n    ); */\n\n\n      \n\n};\n\n\n\nexport default ModifyUser",{"ruleId":"145","severity":1,"message":"146","line":19,"column":7,"nodeType":"147","endLine":19,"endColumn":9,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":28,"column":32,"nodeType":"151","messageId":"152","endLine":28,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":43,"column":32,"nodeType":"151","messageId":"152","endLine":43,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":46,"column":42,"nodeType":"151","messageId":"152","endLine":46,"endColumn":44},{"ruleId":"153","severity":1,"message":"154","line":49,"column":52,"nodeType":"155","messageId":"156","endLine":49,"endColumn":54},{"ruleId":"149","severity":1,"message":"150","line":76,"column":22,"nodeType":"151","messageId":"152","endLine":76,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":133,"column":59,"nodeType":"155","messageId":"156","endLine":133,"endColumn":61},{"ruleId":"149","severity":1,"message":"157","line":144,"column":60,"nodeType":"151","messageId":"158","endLine":144,"endColumn":62},{"ruleId":"145","severity":1,"message":"159","line":20,"column":7,"nodeType":"147","endLine":20,"endColumn":9,"suggestions":"160"},{"ruleId":"149","severity":1,"message":"150","line":54,"column":37,"nodeType":"151","messageId":"152","endLine":54,"endColumn":39},{"ruleId":"149","severity":1,"message":"150","line":70,"column":35,"nodeType":"151","messageId":"152","endLine":70,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":83,"column":35,"nodeType":"151","messageId":"152","endLine":83,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":96,"column":35,"nodeType":"151","messageId":"152","endLine":96,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":112,"column":33,"nodeType":"155","messageId":"156","endLine":112,"endColumn":35},{"ruleId":"161","severity":1,"message":"162","line":115,"column":17,"nodeType":"163","messageId":"164","endLine":115,"endColumn":29},{"ruleId":"149","severity":1,"message":"150","line":123,"column":32,"nodeType":"151","messageId":"152","endLine":123,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":136,"column":32,"nodeType":"151","messageId":"152","endLine":136,"endColumn":34},{"ruleId":"153","severity":1,"message":"154","line":219,"column":24,"nodeType":"155","messageId":"156","endLine":219,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":246,"column":49,"nodeType":"155","messageId":"156","endLine":246,"endColumn":51},{"ruleId":"153","severity":1,"message":"154","line":248,"column":49,"nodeType":"155","messageId":"156","endLine":248,"endColumn":51},{"ruleId":"161","severity":1,"message":"165","line":6,"column":11,"nodeType":"163","messageId":"164","endLine":6,"endColumn":24},{"ruleId":"161","severity":1,"message":"166","line":13,"column":11,"nodeType":"163","messageId":"164","endLine":13,"endColumn":26},{"ruleId":"161","severity":1,"message":"167","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"168","line":5,"column":8,"nodeType":"163","messageId":"164","endLine":5,"endColumn":13},{"ruleId":"145","severity":1,"message":"159","line":30,"column":7,"nodeType":"147","endLine":30,"endColumn":9,"suggestions":"169"},{"ruleId":"149","severity":1,"message":"150","line":38,"column":32,"nodeType":"151","messageId":"152","endLine":38,"endColumn":34},{"ruleId":"161","severity":1,"message":"170","line":101,"column":11,"nodeType":"163","messageId":"164","endLine":101,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":122,"column":14,"nodeType":"155","messageId":"156","endLine":122,"endColumn":16},{"ruleId":"161","severity":1,"message":"171","line":4,"column":18,"nodeType":"163","messageId":"164","endLine":4,"endColumn":27},{"ruleId":"161","severity":1,"message":"167","line":7,"column":10,"nodeType":"163","messageId":"164","endLine":7,"endColumn":18},{"ruleId":"161","severity":1,"message":"172","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":16},{"ruleId":"161","severity":1,"message":"171","line":1,"column":25,"nodeType":"163","messageId":"164","endLine":1,"endColumn":34},{"ruleId":"161","severity":1,"message":"167","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":18},{"ruleId":"161","severity":1,"message":"173","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":24},{"ruleId":"161","severity":1,"message":"171","line":1,"column":26,"nodeType":"163","messageId":"164","endLine":1,"endColumn":35},{"ruleId":"161","severity":1,"message":"174","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":13},{"ruleId":"161","severity":1,"message":"175","line":11,"column":12,"nodeType":"163","messageId":"164","endLine":11,"endColumn":20},{"ruleId":"161","severity":1,"message":"176","line":11,"column":22,"nodeType":"163","messageId":"164","endLine":11,"endColumn":33},{"ruleId":"145","severity":1,"message":"159","line":17,"column":7,"nodeType":"147","endLine":17,"endColumn":9,"suggestions":"177"},{"ruleId":"153","severity":1,"message":"154","line":59,"column":14,"nodeType":"155","messageId":"156","endLine":59,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"161","severity":1,"message":"179","line":25,"column":12,"nodeType":"163","messageId":"164","endLine":25,"endColumn":16},{"ruleId":"161","severity":1,"message":"180","line":25,"column":17,"nodeType":"163","messageId":"164","endLine":25,"endColumn":24},{"ruleId":"145","severity":1,"message":"181","line":34,"column":5,"nodeType":"163","endLine":34,"endColumn":14,"suggestions":"182"},{"ruleId":"149","severity":1,"message":"150","line":37,"column":26,"nodeType":"151","messageId":"152","endLine":37,"endColumn":28},{"ruleId":"153","severity":1,"message":"154","line":54,"column":18,"nodeType":"155","messageId":"156","endLine":54,"endColumn":20},{"ruleId":"153","severity":1,"message":"154","line":97,"column":30,"nodeType":"155","messageId":"156","endLine":97,"endColumn":32},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCart'. Either include it or remove the dependency array.","ArrayExpression",["183"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["184"],"no-unused-vars","'actual_price' is assigned a value but never used.","Identifier","unusedVar","'handleMenuBtn' is assigned a value but never used.","'handleSearchBox' is assigned a value but never used.","'Navigate' is defined but never used.","'axios' is defined but never used.",["185"],"'loading' is assigned a value but never used.","'useEffect' is defined but never used.","'Register' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.",["186"],"'useSelector' is defined but never used.","'Test' is assigned a value but never used.","'setTest' is assigned a value but never used.","React Hook useEffect contains a call to 'setEmail'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword] as a second argument to the useEffect Hook.",["187"],{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"190","fix":"192"},{"desc":"190","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [fetchCart]",{"range":"196","text":"197"},"Update the dependencies array to be: [fetchData]",{"range":"198","text":"199"},{"range":"200","text":"199"},{"range":"201","text":"199"},"Add dependencies array: [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]",{"range":"202","text":"203"},[591,593],"[fetchCart]",[604,606],"[fetchData]",[984,986],[510,512],[2355,2355],", [Response, UserList, Email, FirstName, LastName, Phone, Address, Password, OldEmail, OldFirstName, OldLastName, OldPhone, OldAddress, OldPassword]"]